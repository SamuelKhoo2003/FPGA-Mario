// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cvtcolor_og_Axi2AxiStream (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        din,
        ldata_din,
        ldata_num_data_valid,
        ldata_fifo_cap,
        ldata_full_n,
        ldata_write,
        rows,
        cols,
        rows_c_din,
        rows_c_num_data_valid,
        rows_c_fifo_cap,
        rows_c_full_n,
        rows_c_write,
        cols_c_din,
        cols_c_num_data_valid,
        cols_c_fifo_cap,
        cols_c_full_n,
        cols_c_write
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [511:0] m_axi_gmem1_WDATA;
output  [63:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [511:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [63:0] din;
output  [511:0] ldata_din;
input  [2:0] ldata_num_data_valid;
input  [2:0] ldata_fifo_cap;
input   ldata_full_n;
output   ldata_write;
input  [31:0] rows;
input  [31:0] cols;
output  [31:0] rows_c_din;
input  [2:0] rows_c_num_data_valid;
input  [2:0] rows_c_fifo_cap;
input   rows_c_full_n;
output   rows_c_write;
output  [31:0] cols_c_din;
input  [2:0] cols_c_num_data_valid;
input  [2:0] cols_c_fifo_cap;
input   cols_c_full_n;
output   cols_c_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_gmem1_ARVALID;
reg[63:0] m_axi_gmem1_ARADDR;
reg[0:0] m_axi_gmem1_ARID;
reg[31:0] m_axi_gmem1_ARLEN;
reg[2:0] m_axi_gmem1_ARSIZE;
reg[1:0] m_axi_gmem1_ARBURST;
reg[1:0] m_axi_gmem1_ARLOCK;
reg[3:0] m_axi_gmem1_ARCACHE;
reg[2:0] m_axi_gmem1_ARPROT;
reg[3:0] m_axi_gmem1_ARQOS;
reg[3:0] m_axi_gmem1_ARREGION;
reg[0:0] m_axi_gmem1_ARUSER;
reg m_axi_gmem1_RREADY;
reg ldata_write;
reg rows_c_write;
reg cols_c_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    gmem1_blk_n_AR;
wire    ap_CS_fsm_state5;
reg    rows_c_blk_n;
reg    cols_c_blk_n;
reg    ap_block_state1;
wire   [21:0] trunc_ln954_fu_160_p1;
reg   [21:0] trunc_ln954_reg_239;
wire    ap_CS_fsm_state3;
wire   [23:0] trunc_ln954_1_fu_164_p1;
reg   [23:0] trunc_ln954_1_reg_244;
reg   [17:0] cols_addrbound_reg_249;
wire    ap_CS_fsm_state4;
wire  signed [57:0] trunc_ln_fu_204_p4;
reg   [57:0] trunc_ln_reg_255;
wire   [31:0] zext_ln1021_fu_225_p1;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_idle;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_ready;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWVALID;
wire   [63:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWADDR;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWID;
wire   [31:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWLEN;
wire   [2:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWSIZE;
wire   [1:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWBURST;
wire   [1:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWLOCK;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWCACHE;
wire   [2:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWPROT;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWQOS;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWREGION;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWUSER;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WVALID;
wire   [511:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WDATA;
wire   [63:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WSTRB;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WLAST;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WID;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WUSER;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARVALID;
wire   [63:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARADDR;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARID;
wire   [31:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLEN;
wire   [2:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARSIZE;
wire   [1:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARBURST;
wire   [1:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLOCK;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARCACHE;
wire   [2:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARPROT;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARQOS;
wire   [3:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARREGION;
wire   [0:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARUSER;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_RREADY;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_BREADY;
wire   [511:0] grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_din;
wire    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_write;
reg    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire  signed [63:0] sext_ln1021_fu_214_p1;
wire   [15:0] rows_int16_fu_138_p1;
wire   [15:0] cols_int16_fu_142_p1;
wire   [15:0] grp_fu_154_p0;
wire   [15:0] grp_fu_154_p1;
wire   [31:0] grp_fu_154_p2;
wire   [26:0] shl_ln_fu_168_p3;
wire   [26:0] shl_ln954_1_fu_175_p3;
wire   [26:0] sub_ln954_fu_182_p2;
wire   [26:0] add_ln954_fu_188_p2;
reg    grp_fu_154_ce;
wire    ap_CS_fsm_state2;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire   [31:0] grp_fu_154_p00;
wire   [31:0] grp_fu_154_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg = 1'b0;
end

cvtcolor_og_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1 grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start),
    .ap_done(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done),
    .ap_idle(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_idle),
    .ap_ready(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_ready),
    .m_axi_gmem1_AWVALID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(1'b0),
    .m_axi_gmem1_AWADDR(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(1'b0),
    .m_axi_gmem1_WDATA(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(m_axi_gmem1_ARREADY),
    .m_axi_gmem1_ARADDR(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(m_axi_gmem1_RVALID),
    .m_axi_gmem1_RREADY(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(m_axi_gmem1_RDATA),
    .m_axi_gmem1_RLAST(m_axi_gmem1_RLAST),
    .m_axi_gmem1_RID(m_axi_gmem1_RID),
    .m_axi_gmem1_RFIFONUM(m_axi_gmem1_RFIFONUM),
    .m_axi_gmem1_RUSER(m_axi_gmem1_RUSER),
    .m_axi_gmem1_RRESP(m_axi_gmem1_RRESP),
    .m_axi_gmem1_BVALID(1'b0),
    .m_axi_gmem1_BREADY(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(2'd0),
    .m_axi_gmem1_BID(1'd0),
    .m_axi_gmem1_BUSER(1'd0),
    .ldata_din(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_din),
    .ldata_num_data_valid(3'd0),
    .ldata_fifo_cap(3'd0),
    .ldata_full_n(ldata_full_n),
    .ldata_write(grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_write),
    .cols_addrbound(cols_addrbound_reg_249),
    .sext_ln1021(trunc_ln_reg_255)
);

cvtcolor_og_mul_16ns_16ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_154_p0),
    .din1(grp_fu_154_p1),
    .ce(grp_fu_154_ce),
    .dout(grp_fu_154_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state14) & (grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg <= 1'b1;
        end else if ((grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_ready == 1'b1)) begin
            grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cols_addrbound_reg_249 <= {{add_ln954_fu_188_p2[26:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln954_1_reg_244 <= trunc_ln954_1_fu_164_p1;
        trunc_ln954_reg_239 <= trunc_ln954_fu_160_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        trunc_ln_reg_255 <= {{din[63:6]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem1_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_c_blk_n = cols_c_full_n;
    end else begin
        cols_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        cols_c_write = 1'b1;
    end else begin
        cols_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1)))) begin
        grp_fu_154_ce = 1'b1;
    end else begin
        grp_fu_154_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done == 1'b1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ldata_write = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_write;
    end else begin
        ldata_write = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_ARADDR = sext_ln1021_fu_214_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARADDR = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARADDR;
    end else begin
        m_axi_gmem1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARBURST = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARBURST;
    end else begin
        m_axi_gmem1_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARCACHE = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARCACHE;
    end else begin
        m_axi_gmem1_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARID = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARID;
    end else begin
        m_axi_gmem1_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_gmem1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_ARLEN = zext_ln1021_fu_225_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARLEN = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLEN;
    end else begin
        m_axi_gmem1_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARLOCK = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARLOCK;
    end else begin
        m_axi_gmem1_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARPROT = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARPROT;
    end else begin
        m_axi_gmem1_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARQOS = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARQOS;
    end else begin
        m_axi_gmem1_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARREGION = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARREGION;
    end else begin
        m_axi_gmem1_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARSIZE = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARSIZE;
    end else begin
        m_axi_gmem1_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARUSER = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARUSER;
    end else begin
        m_axi_gmem1_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_gmem1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_ARVALID = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_ARVALID;
    end else begin
        m_axi_gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem1_RREADY = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_m_axi_gmem1_RREADY;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_c_blk_n = rows_c_full_n;
    end else begin
        rows_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        rows_c_write = 1'b1;
    end else begin
        rows_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_gmem1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln954_fu_188_p2 = (sub_ln954_fu_182_p2 + 27'd511);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0) | (cols_c_full_n == 1'b0) | (rows_c_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign cols_c_din = cols;

assign cols_int16_fu_142_p1 = cols[15:0];

assign grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ap_start_reg;

assign grp_fu_154_p0 = grp_fu_154_p00;

assign grp_fu_154_p00 = cols_int16_fu_142_p1;

assign grp_fu_154_p1 = grp_fu_154_p10;

assign grp_fu_154_p10 = rows_int16_fu_138_p1;

assign ldata_din = grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_128_ldata_din;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 512'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 64'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign rows_c_din = rows;

assign rows_int16_fu_138_p1 = rows[15:0];

assign sext_ln1021_fu_214_p1 = trunc_ln_fu_204_p4;

assign shl_ln954_1_fu_175_p3 = {{trunc_ln954_1_reg_244}, {3'd0}};

assign shl_ln_fu_168_p3 = {{trunc_ln954_reg_239}, {5'd0}};

assign start_out = real_start;

assign sub_ln954_fu_182_p2 = (shl_ln_fu_168_p3 - shl_ln954_1_fu_175_p3);

assign trunc_ln954_1_fu_164_p1 = grp_fu_154_p2[23:0];

assign trunc_ln954_fu_160_p1 = grp_fu_154_p2[21:0];

assign trunc_ln_fu_204_p4 = {{din[63:6]}};

assign zext_ln1021_fu_225_p1 = cols_addrbound_reg_249;

endmodule //cvtcolor_og_Axi2AxiStream
