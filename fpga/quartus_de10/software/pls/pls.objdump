
pls.elf:     file format elf32-littlenios2
pls.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040234

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00010acc memsz 0x00010acc flags r-x
    LOAD off    0x00011aec vaddr 0x00050aec paddr 0x00052604 align 2**12
         filesz 0x00001b18 memsz 0x00001b18 flags rw-
    LOAD off    0x0001411c vaddr 0x0005411c paddr 0x0005411c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000214  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001053c  00040234  00040234  00001234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000037c  00050770  00050770  00011770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b18  00050aec  00052604  00011aec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0005411c  0005411c  0001411c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  0005427c  0005427c  00013604  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013604  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fe8  00000000  00000000  00013628  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002933e  00000000  00000000  00014610  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a310  00000000  00000000  0003d94e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000cad2  00000000  00000000  00047c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002364  00000000  00000000  00054730  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003c46  00000000  00000000  00056a94  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000184d4  00000000  00000000  0005a6da  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00072bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001a10  00000000  00000000  00072bc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00077946  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00077949  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007794c  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007794d  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0007794e  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  00077957  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  00077960  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000012  00000000  00000000  00077969  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000001a  00000000  00000000  0007797b  2**0
                  CONTENTS, READONLY
 26 .jdi          00005009  00000000  00000000  00077995  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0006d462  00000000  00000000  0007c99e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040234 l    d  .text	00000000 .text
00050770 l    d  .rodata	00000000 .rodata
00050aec l    d  .rwdata	00000000 .rwdata
0005411c l    d  .bss	00000000 .bss
0005427c l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../pls_bsp//obj/HAL/src/crt0.o
0004026c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000407c4 l     F .text	00000008 __fp_unlock
000407d8 l     F .text	0000019c __sinit.part.1
00040974 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
00050aec l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
00042480 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00050826 l     O .rodata	00000010 zeroes.4404
00044c18 l     F .text	000000bc __sbprintf
00050836 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
00044edc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00051338 l     O .rwdata	00000020 lc_ctype_charset
00051318 l     O .rwdata	00000020 lc_message_charset
00051358 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00050864 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000489e4 l     F .text	000000fc __sprint_r.part.0
00050988 l     O .rodata	00000010 zeroes.4349
0004a020 l     F .text	000000bc __sbprintf
00050998 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004dd40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004de54 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004de80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004df74 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004e05c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004e148 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0004e324 l     F .text	0000003c alt_get_errno
0004e360 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0004e5a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000525f4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004e81c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004e958 l     F .text	00000034 alt_dev_reg
00051538 l     O .rwdata	00001060 jtag_uart
00052598 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004ec48 l     F .text	00000210 altera_avalon_jtag_uart_irq
0004ee58 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0004f490 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004fa7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004fe98 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00054150 g     O .bss	00000004 alt_instruction_exception_handler
00048158 g     F .text	00000074 _mprec_log10
00048244 g     F .text	0000008c __any_on
00046d00 g     F .text	00000054 _isatty_r
00050870 g     O .rodata	00000028 __mprec_tinytens
0004e260 g     F .text	0000007c alt_main
000423ac g     F .text	000000c0 _puts_r
0005417c g     O .bss	00000100 alt_irq
00046e30 g     F .text	00000060 _lseek_r
00052604 g       *ABS*	00000000 __flash_rwdata_start
0004678c g     F .text	000000ac __sflags
0004c718 g     F .text	00000088 .hidden __eqdf2
0005427c g       *ABS*	00000000 __alt_heap_start
0004a518 g     F .text	0000009c _wcrtomb_r
00042824 g     F .text	0000005c __sseek
00040b24 g     F .text	00000010 __sinit
0004a3c0 g     F .text	00000140 __swbuf_r
00046d54 g     F .text	0000007c _setlocale_r
0004097c g     F .text	00000078 __sfmoreglue
0004e300 g     F .text	00000024 __malloc_unlock
000470bc g     F .text	0000015c memmove
00040b0c g     F .text	00000018 _cleanup
00047218 g     F .text	000000a8 _Balloc
0004c7a0 g     F .text	000000dc .hidden __gtdf2
0005031c g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
0004f6cc g     F .text	000000cc alt_up_accelerometer_spi_read_x_axis
00040020 g       *ABS*	00000000 __flash_exceptions_start
00041580 g     F .text	0000005c _fstat_r
0005411c g     O .bss	00000004 errno
000426e4 g     F .text	00000014 __srget
000427a0 g     F .text	00000008 __seofread
0005413c g     O .bss	00000004 alt_argv
0005a5c4 g       *ABS*	00000000 _gp
000513b8 g     O .rwdata	00000180 alt_fd_list
00041764 g     F .text	00000070 _getc_r
000417d4 g     F .text	00000088 getc
0004fc1c g     F .text	00000090 alt_find_dev
00046f74 g     F .text	00000148 memcpy
000407cc g     F .text	0000000c _cleanup_r
0004db58 g     F .text	000000dc .hidden __floatsidf
0004ff7c g     F .text	0000007c alt_io_redirect
0004c87c g     F .text	000000f4 .hidden __ltdf2
00050770 g       *ABS*	00000000 __DTOR_END__
0004246c g     F .text	00000014 puts
00050340 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00048894 g     F .text	00000074 __fpclassifyd
000480b4 g     F .text	000000a4 __ratio
0004a004 g     F .text	0000001c __vfiprintf_internal
0004f050 g     F .text	0000021c altera_avalon_jtag_uart_read
0004b3b8 g     F .text	00000064 .hidden __udivsi3
0004dfb0 g     F .text	000000ac isatty
000508c0 g     O .rodata	000000c8 __mprec_tens
00046dd0 g     F .text	0000000c __locale_charset
00054128 g     O .bss	00000004 __malloc_top_pad
000525d4 g     O .rwdata	00000004 __mb_cur_max
00046e00 g     F .text	0000000c _localeconv_r
0004764c g     F .text	0000003c __i2b
00046838 g     F .text	000004c8 __sfvwrite_r
000426f8 g     F .text	00000054 _sbrk_r
000482d0 g     F .text	00000060 _read_r
000525ec g     O .rwdata	00000004 alt_max_fd
00040418 g     F .text	000000f0 _fclose_r
00040794 g     F .text	00000030 fflush
00054124 g     O .bss	00000004 __malloc_max_sbrked_mem
0004fff8 g     F .text	00000180 alt_irq_register
0004b49c g     F .text	000008ac .hidden __adddf3
00047e5c g     F .text	0000010c __b2d
0004acfc g     F .text	000005c4 .hidden __umoddi3
0004e184 g     F .text	000000dc lseek
000525c4 g     O .rwdata	00000004 _global_impure_ptr
00048330 g     F .text	00000564 _realloc_r
0005427c g       *ABS*	00000000 __bss_end
00050214 g     F .text	00000108 alt_tick
0004a700 g     F .text	000005fc .hidden __udivdi3
0004a31c g     F .text	00000024 _fputwc_r
00050898 g     O .rodata	00000028 __mprec_bigtens
00047430 g     F .text	00000104 __s2b
0004dc34 g     F .text	000000a8 .hidden __floatunsidf
00047b9c g     F .text	00000060 __mcmp
00040b44 g     F .text	00000018 __fp_lock_all
00050178 g     F .text	0000009c alt_alarm_stop
00054144 g     O .bss	00000004 alt_irq_active
00041120 g     F .text	00000444 _fseeko_r
000400fc g     F .exceptions	000000d8 alt_irq_handler
00051390 g     O .rwdata	00000028 alt_dev_null
0004fa5c g     F .text	00000020 alt_dcache_flush_all
00047534 g     F .text	00000068 __hi0bits
0004dad8 g     F .text	00000080 .hidden __fixdfsi
00052604 g       *ABS*	00000000 __ram_rwdata_end
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory
000525e4 g     O .rwdata	00000008 alt_dev_list
0004e858 g     F .text	00000100 write
00050aec g       *ABS*	00000000 __ram_rodata_end
0004debc g     F .text	000000b8 fstat
00040ca8 g     F .text	00000024 fprintf
0004c87c g     F .text	000000f4 .hidden __ledf2
00047914 g     F .text	00000140 __pow5mult
00048af8 g     F .text	0000150c ___vfiprintf_internal_r
00054134 g     O .bss	00000004 __nlocale_changed
0004b41c g     F .text	00000058 .hidden __umodsi3
0005427c g       *ABS*	00000000 end
00041564 g     F .text	0000001c fseeko
00041104 g     F .text	0000001c fseek
0004eb94 g     F .text	000000b4 altera_avalon_jtag_uart_init
000401d4 g     F .exceptions	00000060 alt_instruction_exception_entry
00050770 g       *ABS*	00000000 __CTOR_LIST__
0006bf20 g       *ABS*	00000000 __alt_stack_pointer
0004f50c g     F .text	00000074 alt_avalon_timer_sc_init
0004dcdc g     F .text	00000064 .hidden __clzsi2
0004f26c g     F .text	00000224 altera_avalon_jtag_uart_write
00040b34 g     F .text	00000004 __sfp_lock_acquire
00046e90 g     F .text	000000e4 memchr
00042920 g     F .text	000022dc ___vfprintf_internal_r
00040df0 g     F .text	00000310 _free_r
00046ddc g     F .text	00000010 __locale_mb_cur_max
000505bc g     F .text	00000180 __call_exitprocs
00042670 g     F .text	00000074 __srget_r
00054130 g     O .bss	00000004 __mlocale_changed
000525cc g     O .rwdata	00000004 __malloc_sbrk_base
00040234 g     F .text	0000003c _start
00054148 g     O .bss	00000004 _alt_tick_rate
00047a54 g     F .text	00000148 __lshift
0005414c g     O .bss	00000004 _alt_nticks
0004e5e4 g     F .text	00000104 read
0004e9c4 g     F .text	0000006c alt_sys_init
0004f5bc g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
0004234c g     F .text	00000060 _open_r
000504a4 g     F .text	00000118 __register_exitproc
00047688 g     F .text	0000028c __multiply
0004eef8 g     F .text	00000068 altera_avalon_jtag_uart_close
0004b474 g     F .text	00000028 .hidden __mulsi3
00050aec g       *ABS*	00000000 __ram_rwdata_start
00050770 g       *ABS*	00000000 __ram_rodata_start
00054154 g     O .bss	00000028 __malloc_current_mallinfo
00047f68 g     F .text	0000014c __d2b
0004ea30 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004fdb4 g     F .text	000000c4 alt_get_fd
0004f798 g     F .text	000000cc alt_up_accelerometer_spi_read_y_axis
00044e88 g     F .text	00000054 _close_r
00050428 g     F .text	0000007c memcmp
0004eaf0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0005427c g       *ABS*	00000000 __alt_stack_base
0004eb40 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00044d34 g     F .text	00000154 __swsetup_r
0004bd48 g     F .text	000009d0 .hidden __divdf3
000409f4 g     F .text	00000118 __sfp
000481cc g     F .text	00000078 __copybits
00050f10 g     O .rwdata	00000408 __malloc_av_
00040b40 g     F .text	00000004 __sinit_lock_release
0004c970 g     F .text	0000086c .hidden __muldf3
0004274c g     F .text	00000054 __sread
0004fcac g     F .text	00000108 alt_find_file
0004fab8 g     F .text	000000a4 alt_dev_llist_insert
0004e2dc g     F .text	00000024 __malloc_lock
00040c80 g     F .text	00000028 _fprintf_r
0004e76c g     F .text	000000b0 sbrk
00040738 g     F .text	0000005c _fflush_r
0004a0dc g     F .text	000000dc _calloc_r
00040c68 g     F .text	00000018 fopen
0005411c g       *ABS*	00000000 __bss_start
00042224 g     F .text	00000128 memset
000402cc g     F .text	0000014c main
00054140 g     O .bss	00000004 alt_envp
00054120 g     O .bss	00000004 __malloc_max_total_mem
0004ea90 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a500 g     F .text	00000018 __swbuf
00042880 g     F .text	00000008 __sclose
0006bf20 g       *ABS*	00000000 __alt_heap_limit
00040508 g     F .text	00000014 fclose
00045104 g     F .text	00001688 _dtoa_r
00041a18 g     F .text	0000080c _malloc_r
0004a674 g     F .text	00000030 __ascii_wctomb
000525f0 g     O .rwdata	00000004 alt_errno
000415dc g     F .text	000000c4 _fwalk
0004b2c0 g     F .text	00000084 .hidden __divsi3
00040ccc g     F .text	00000124 _malloc_trim_r
00050770 g       *ABS*	00000000 __CTOR_END__
00048908 g     F .text	000000dc strcmp
00050770 g       *ABS*	00000000 __flash_rodata_start
00050770 g       *ABS*	00000000 __DTOR_LIST__
0004c718 g     F .text	00000088 .hidden __nedf2
0004e98c g     F .text	00000038 alt_irq_init
0004e6e8 g     F .text	00000084 alt_release_fd
000509a8 g     O .rodata	00000100 .hidden __clz_tab
0005412c g     O .bss	00000004 _PathLocale
00040270 g     F .text	0000005c send_coordinates
000503dc g     F .text	00000014 atexit
00044cd4 g     F .text	00000060 _write_r
00046e0c g     F .text	00000018 setlocale
000525c8 g     O .rwdata	00000004 _impure_ptr
00054138 g     O .bss	00000004 alt_argc
0004051c g     F .text	0000021c __sflush_r
0004fbbc g     F .text	00000060 _do_dtors
00046df8 g     F .text	00000008 __locale_cjk_lang
00041100 g     F .text	00000004 _fseek_r
0004249c g     F .text	000001d4 __srefill_r
00040020 g       .exceptions	00000000 alt_irq_entry
00047df8 g     F .text	00000064 __ulp
00040b5c g     F .text	00000018 __fp_unlock_all
000525dc g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004f580 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
00046e24 g     F .text	0000000c localeconv
00052604 g       *ABS*	00000000 _edata
0005427c g       *ABS*	00000000 _end
0004a1b8 g     F .text	00000164 __fputwc
00040234 g       *ABS*	00000000 __ram_exceptions_end
0004ef60 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
000427a8 g     F .text	0000007c __swrite
000525d0 g     O .rwdata	00000004 __malloc_trim_threshold
00046dec g     F .text	0000000c __locale_msgcharset
000503f0 g     F .text	00000038 exit
000416a0 g     F .text	000000c4 _fwalk_reent
00047bfc g     F .text	000001fc __mdiff
0004b344 g     F .text	00000074 .hidden __modsi3
0004f864 g     F .text	000000cc alt_up_accelerometer_spi_read_z_axis
0006bf20 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00040b38 g     F .text	00000004 __sfp_lock_release
00040b74 g     F .text	000000f4 _fopen_r
0005073c g     F .text	00000034 _exit
0004f930 g     F .text	0000012c alt_alarm_start
0004f600 g     F .text	00000068 alt_up_accelerometer_spi_read
0004f668 g     F .text	00000064 alt_up_accelerometer_spi_write
0004185c g     F .text	000001bc __smakebuf_r
00042888 g     F .text	00000098 strlen
0004e44c g     F .text	0000015c open
0004c7a0 g     F .text	000000dc .hidden __gedf2
000525d8 g     O .rwdata	00000004 __wctomb
00048ae0 g     F .text	00000018 __sprint_r
0004fe78 g     F .text	00000020 alt_icache_flush_all
000525f8 g     O .rwdata	00000004 alt_priority_mask
00044bfc g     F .text	0000001c __vfprintf_internal
0004a6a4 g     F .text	0000005c _wctomb_r
0004d1dc g     F .text	000008fc .hidden __subdf3
0004759c g     F .text	000000b0 __lo0bits
000525fc g     O .rwdata	00000008 alt_alarm_list
0004fb5c g     F .text	00000060 _do_ctors
0004a5b4 g     F .text	000000c0 wcrtomb
0004dd7c g     F .text	000000d8 close
0004e0c4 g     F .text	00000084 alt_load
0004a340 g     F .text	00000080 fputwc
00040b3c g     F .text	00000004 __sinit_lock_acquire
000472e8 g     F .text	00000148 __multadd
000472c0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408d14 	ori	at,at,564
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d40 	call	401d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001526 	beq	r2,zero,40190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   4013c:	00800174 	movhi	r2,5
   40140:	10905f04 	addi	r2,r2,16764
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	10905f04 	addi	r2,r2,16764
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	e17ffd17 	ldw	r5,-12(fp)
   40174:	1009883a 	mov	r4,r2
   40178:	183ee83a 	callr	r3
#endif
        break;
   4017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40180:	0005313a 	rdctl	r2,ipending
   40184:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40188:	e0bfff17 	ldw	r2,-4(fp)
   4018c:	00000706 	br	401ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
   40190:	e0bffc17 	ldw	r2,-16(fp)
   40194:	1085883a 	add	r2,r2,r2
   40198:	e0bffc15 	stw	r2,-16(fp)
      i++;
   4019c:	e0bffd17 	ldw	r2,-12(fp)
   401a0:	10800044 	addi	r2,r2,1
   401a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a8:	003fe006 	br	4012c <__alt_data_end+0xfffd420c>

    active = alt_irq_pending ();
   401ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401b0:	e0bffb17 	ldw	r2,-20(fp)
   401b4:	103fda1e 	bne	r2,zero,40120 <__alt_data_end+0xfffd4200>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b8:	0001883a 	nop
}
   401bc:	0001883a 	nop
   401c0:	e037883a 	mov	sp,fp
   401c4:	dfc00117 	ldw	ra,4(sp)
   401c8:	df000017 	ldw	fp,0(sp)
   401cc:	dec00204 	addi	sp,sp,8
   401d0:	f800283a 	ret

000401d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d4:	defffb04 	addi	sp,sp,-20
   401d8:	dfc00415 	stw	ra,16(sp)
   401dc:	df000315 	stw	fp,12(sp)
   401e0:	df000304 	addi	fp,sp,12
   401e4:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401e8:	00bfffc4 	movi	r2,-1
   401ec:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   401f0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f4:	d0a6e317 	ldw	r2,-25716(gp)
   401f8:	10000726 	beq	r2,zero,40218 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401fc:	d0a6e317 	ldw	r2,-25716(gp)
   40200:	e0fffd17 	ldw	r3,-12(fp)
   40204:	e1bffe17 	ldw	r6,-8(fp)
   40208:	e17fff17 	ldw	r5,-4(fp)
   4020c:	1809883a 	mov	r4,r3
   40210:	103ee83a 	callr	r2
   40214:	00000206 	br	40220 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40218:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4021c:	0005883a 	mov	r2,zero
}
   40220:	e037883a 	mov	sp,fp
   40224:	dfc00117 	ldw	ra,4(sp)
   40228:	df000017 	ldw	fp,0(sp)
   4022c:	dec00204 	addi	sp,sp,8
   40230:	f800283a 	ret

Disassembly of section .text:

00040234 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40234:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   40238:	deefc814 	ori	sp,sp,48928
    movhi gp, %hi(_gp)
   4023c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40240:	d6a97114 	ori	gp,gp,42436
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40244:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40248:	10904714 	ori	r2,r2,16668

    movhi r3, %hi(__bss_end)
   4024c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40250:	18d09f14 	ori	r3,r3,17020

    beq r2, r3, 1f
   40254:	10c00326 	beq	r2,r3,40264 <_start+0x30>

0:
    stw zero, (r2)
   40258:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4025c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40260:	10fffd36 	bltu	r2,r3,40258 <__alt_data_end+0xfffd4338>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40264:	004e0c40 	call	4e0c4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40268:	004e2600 	call	4e260 <alt_main>

0004026c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4026c:	003fff06 	br	4026c <__alt_data_end+0xfffd434c>

00040270 <send_coordinates>:
#include "sys/alt_irq.h"
#include <stdlib.h>
#include <sys/alt_stdio.h>

char send_coordinates(FILE* fp, alt_32 x, alt_32 y)
{
   40270:	defff904 	addi	sp,sp,-28
   40274:	dfc00615 	stw	ra,24(sp)
   40278:	df000515 	stw	fp,20(sp)
   4027c:	df000504 	addi	fp,sp,20
   40280:	e13ffd15 	stw	r4,-12(fp)
   40284:	e17ffe15 	stw	r5,-8(fp)
   40288:	e1bfff15 	stw	r6,-4(fp)
    alt_32 radius = 50;
   4028c:	00800c84 	movi	r2,50
   40290:	e0bffc15 	stw	r2,-16(fp)

    fprintf(fp, "X: %d, Y: %d end \n%c", x, y, 0x4);
   40294:	00800104 	movi	r2,4
   40298:	d8800015 	stw	r2,0(sp)
   4029c:	e1ffff17 	ldw	r7,-4(fp)
   402a0:	e1bffe17 	ldw	r6,-8(fp)
   402a4:	01400174 	movhi	r5,5
   402a8:	2941dc04 	addi	r5,r5,1904
   402ac:	e13ffd17 	ldw	r4,-12(fp)
   402b0:	0040ca80 	call	40ca8 <fprintf>
}
   402b4:	0001883a 	nop
   402b8:	e037883a 	mov	sp,fp
   402bc:	dfc00117 	ldw	ra,4(sp)
   402c0:	df000017 	ldw	fp,0(sp)
   402c4:	dec00204 	addi	sp,sp,8
   402c8:	f800283a 	ret

000402cc <main>:

int main()
{
   402cc:	defff904 	addi	sp,sp,-28
   402d0:	dfc00615 	stw	ra,24(sp)
   402d4:	df000515 	stw	fp,20(sp)
   402d8:	df000504 	addi	fp,sp,20
	printf("Running..\n");
   402dc:	01000174 	movhi	r4,5
   402e0:	2101e204 	addi	r4,r4,1928
   402e4:	004246c0 	call	4246c <puts>
	FILE* fp;
	char prompt = 0;
   402e8:	e03ffb05 	stb	zero,-20(fp)
	char output;

	alt_32 x = 0;
   402ec:	e03ffe15 	stw	zero,-8(fp)
	alt_32 y = 0;
   402f0:	e03fff15 	stw	zero,-4(fp)
	alt_16 radius = 50;
   402f4:	00800c84 	movi	r2,50
   402f8:	e0bffb8d 	sth	r2,-18(fp)

	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev ("/dev/accelerometer_spi");
   402fc:	01000174 	movhi	r4,5
   40300:	2101e504 	addi	r4,r4,1940
   40304:	004f5800 	call	4f580 <alt_up_accelerometer_spi_open_dev>
   40308:	e0bffc15 	stw	r2,-16(fp)

	if ( acc_dev == NULL){
   4030c:	e0bffc17 	ldw	r2,-16(fp)
   40310:	1000041e 	bne	r2,zero,40324 <main+0x58>
	 	printf ("Error \n");
   40314:	01000174 	movhi	r4,5
   40318:	2101eb04 	addi	r4,r4,1964
   4031c:	004246c0 	call	4246c <puts>
   40320:	00000306 	br	40330 <main+0x64>
	}else{
	  	printf ("Connected to DE10 \n");
   40324:	01000174 	movhi	r4,5
   40328:	2101ed04 	addi	r4,r4,1972
   4032c:	004246c0 	call	4246c <puts>
	}

	fp = fopen ("/dev/jtag_uart", "r+");
   40330:	01400174 	movhi	r5,5
   40334:	2941f204 	addi	r5,r5,1992
   40338:	01000174 	movhi	r4,5
   4033c:	2101f304 	addi	r4,r4,1996
   40340:	0040c680 	call	40c68 <fopen>
   40344:	e0bffd15 	stw	r2,-12(fp)

	if (fp) {
   40348:	e0bffd17 	ldw	r2,-12(fp)
   4034c:	10002c26 	beq	r2,zero,40400 <main+0x134>
		while (prompt != 'v') {
   40350:	00002606 	br	403ec <main+0x120>
			do prompt = getc(fp); while (prompt == -1);
   40354:	e13ffd17 	ldw	r4,-12(fp)
   40358:	00417d40 	call	417d4 <getc>
   4035c:	e0bffb05 	stb	r2,-20(fp)
   40360:	e0bffb07 	ldb	r2,-20(fp)
   40364:	10bfffe0 	cmpeqi	r2,r2,-1
   40368:	103ffa1e 	bne	r2,zero,40354 <__alt_data_end+0xfffd4434>
			if (prompt != 'v' && prompt != '\xff') {
   4036c:	e0bffb07 	ldb	r2,-20(fp)
   40370:	10801da0 	cmpeqi	r2,r2,118
   40374:	1000111e 	bne	r2,zero,403bc <main+0xf0>
   40378:	e0bffb07 	ldb	r2,-20(fp)
   4037c:	10bfffe0 	cmpeqi	r2,r2,-1
   40380:	10000e1e 	bne	r2,zero,403bc <main+0xf0>
				alt_up_accelerometer_spi_read_x_axis(acc_dev, &x);
   40384:	e0bffe04 	addi	r2,fp,-8
   40388:	100b883a 	mov	r5,r2
   4038c:	e13ffc17 	ldw	r4,-16(fp)
   40390:	004f6cc0 	call	4f6cc <alt_up_accelerometer_spi_read_x_axis>
				alt_up_accelerometer_spi_read_y_axis(acc_dev, &y);
   40394:	e0bfff04 	addi	r2,fp,-4
   40398:	100b883a 	mov	r5,r2
   4039c:	e13ffc17 	ldw	r4,-16(fp)
   403a0:	004f7980 	call	4f798 <alt_up_accelerometer_spi_read_y_axis>

				send_coordinates(fp, x, y);
   403a4:	e0bffe17 	ldw	r2,-8(fp)
   403a8:	e0ffff17 	ldw	r3,-4(fp)
   403ac:	180d883a 	mov	r6,r3
   403b0:	100b883a 	mov	r5,r2
   403b4:	e13ffd17 	ldw	r4,-12(fp)
   403b8:	00402700 	call	40270 <send_coordinates>
			}
			if (ferror(fp)) {
   403bc:	e0bffd17 	ldw	r2,-12(fp)
   403c0:	1080030b 	ldhu	r2,12(r2)
   403c4:	10bfffcc 	andi	r2,r2,65535
   403c8:	1080100c 	andi	r2,r2,64
   403cc:	10000726 	beq	r2,zero,403ec <main+0x120>
				clearerr(fp);
   403d0:	e0bffd17 	ldw	r2,-12(fp)
   403d4:	10c0030b 	ldhu	r3,12(r2)
   403d8:	00bfe7c4 	movi	r2,-97
   403dc:	1884703a 	and	r2,r3,r2
   403e0:	1007883a 	mov	r3,r2
   403e4:	e0bffd17 	ldw	r2,-12(fp)
   403e8:	10c0030d 	sth	r3,12(r2)
	}

	fp = fopen ("/dev/jtag_uart", "r+");

	if (fp) {
		while (prompt != 'v') {
   403ec:	e0bffb07 	ldb	r2,-20(fp)
   403f0:	10801d98 	cmpnei	r2,r2,118
   403f4:	103fd71e 	bne	r2,zero,40354 <__alt_data_end+0xfffd4434>
			}
			if (ferror(fp)) {
				clearerr(fp);
			}
		}
		fclose(fp);
   403f8:	e13ffd17 	ldw	r4,-12(fp)
   403fc:	00405080 	call	40508 <fclose>
	}

	return 0;
   40400:	0005883a 	mov	r2,zero
}
   40404:	e037883a 	mov	sp,fp
   40408:	dfc00117 	ldw	ra,4(sp)
   4040c:	df000017 	ldw	fp,0(sp)
   40410:	dec00204 	addi	sp,sp,8
   40414:	f800283a 	ret

00040418 <_fclose_r>:
   40418:	28003926 	beq	r5,zero,40500 <_fclose_r+0xe8>
   4041c:	defffc04 	addi	sp,sp,-16
   40420:	dc400115 	stw	r17,4(sp)
   40424:	dc000015 	stw	r16,0(sp)
   40428:	dfc00315 	stw	ra,12(sp)
   4042c:	dc800215 	stw	r18,8(sp)
   40430:	2023883a 	mov	r17,r4
   40434:	2821883a 	mov	r16,r5
   40438:	20000226 	beq	r4,zero,40444 <_fclose_r+0x2c>
   4043c:	20800e17 	ldw	r2,56(r4)
   40440:	10002726 	beq	r2,zero,404e0 <_fclose_r+0xc8>
   40444:	8080030f 	ldh	r2,12(r16)
   40448:	1000071e 	bne	r2,zero,40468 <_fclose_r+0x50>
   4044c:	0005883a 	mov	r2,zero
   40450:	dfc00317 	ldw	ra,12(sp)
   40454:	dc800217 	ldw	r18,8(sp)
   40458:	dc400117 	ldw	r17,4(sp)
   4045c:	dc000017 	ldw	r16,0(sp)
   40460:	dec00404 	addi	sp,sp,16
   40464:	f800283a 	ret
   40468:	800b883a 	mov	r5,r16
   4046c:	8809883a 	mov	r4,r17
   40470:	004051c0 	call	4051c <__sflush_r>
   40474:	1025883a 	mov	r18,r2
   40478:	80800b17 	ldw	r2,44(r16)
   4047c:	10000426 	beq	r2,zero,40490 <_fclose_r+0x78>
   40480:	81400717 	ldw	r5,28(r16)
   40484:	8809883a 	mov	r4,r17
   40488:	103ee83a 	callr	r2
   4048c:	10001616 	blt	r2,zero,404e8 <_fclose_r+0xd0>
   40490:	8080030b 	ldhu	r2,12(r16)
   40494:	1080200c 	andi	r2,r2,128
   40498:	1000151e 	bne	r2,zero,404f0 <_fclose_r+0xd8>
   4049c:	81400c17 	ldw	r5,48(r16)
   404a0:	28000526 	beq	r5,zero,404b8 <_fclose_r+0xa0>
   404a4:	80801004 	addi	r2,r16,64
   404a8:	28800226 	beq	r5,r2,404b4 <_fclose_r+0x9c>
   404ac:	8809883a 	mov	r4,r17
   404b0:	0040df00 	call	40df0 <_free_r>
   404b4:	80000c15 	stw	zero,48(r16)
   404b8:	81401117 	ldw	r5,68(r16)
   404bc:	28000326 	beq	r5,zero,404cc <_fclose_r+0xb4>
   404c0:	8809883a 	mov	r4,r17
   404c4:	0040df00 	call	40df0 <_free_r>
   404c8:	80001115 	stw	zero,68(r16)
   404cc:	0040b340 	call	40b34 <__sfp_lock_acquire>
   404d0:	8000030d 	sth	zero,12(r16)
   404d4:	0040b380 	call	40b38 <__sfp_lock_release>
   404d8:	9005883a 	mov	r2,r18
   404dc:	003fdc06 	br	40450 <__alt_data_end+0xfffd4530>
   404e0:	0040b240 	call	40b24 <__sinit>
   404e4:	003fd706 	br	40444 <__alt_data_end+0xfffd4524>
   404e8:	04bfffc4 	movi	r18,-1
   404ec:	003fe806 	br	40490 <__alt_data_end+0xfffd4570>
   404f0:	81400417 	ldw	r5,16(r16)
   404f4:	8809883a 	mov	r4,r17
   404f8:	0040df00 	call	40df0 <_free_r>
   404fc:	003fe706 	br	4049c <__alt_data_end+0xfffd457c>
   40500:	0005883a 	mov	r2,zero
   40504:	f800283a 	ret

00040508 <fclose>:
   40508:	00800174 	movhi	r2,5
   4050c:	10897204 	addi	r2,r2,9672
   40510:	200b883a 	mov	r5,r4
   40514:	11000017 	ldw	r4,0(r2)
   40518:	00404181 	jmpi	40418 <_fclose_r>

0004051c <__sflush_r>:
   4051c:	2880030b 	ldhu	r2,12(r5)
   40520:	defffb04 	addi	sp,sp,-20
   40524:	dcc00315 	stw	r19,12(sp)
   40528:	dc400115 	stw	r17,4(sp)
   4052c:	dfc00415 	stw	ra,16(sp)
   40530:	dc800215 	stw	r18,8(sp)
   40534:	dc000015 	stw	r16,0(sp)
   40538:	10c0020c 	andi	r3,r2,8
   4053c:	2823883a 	mov	r17,r5
   40540:	2027883a 	mov	r19,r4
   40544:	1800311e 	bne	r3,zero,4060c <__sflush_r+0xf0>
   40548:	28c00117 	ldw	r3,4(r5)
   4054c:	10820014 	ori	r2,r2,2048
   40550:	2880030d 	sth	r2,12(r5)
   40554:	00c04b0e 	bge	zero,r3,40684 <__sflush_r+0x168>
   40558:	8a000a17 	ldw	r8,40(r17)
   4055c:	40002326 	beq	r8,zero,405ec <__sflush_r+0xd0>
   40560:	9c000017 	ldw	r16,0(r19)
   40564:	10c4000c 	andi	r3,r2,4096
   40568:	98000015 	stw	zero,0(r19)
   4056c:	18004826 	beq	r3,zero,40690 <__sflush_r+0x174>
   40570:	89801417 	ldw	r6,80(r17)
   40574:	10c0010c 	andi	r3,r2,4
   40578:	18000626 	beq	r3,zero,40594 <__sflush_r+0x78>
   4057c:	88c00117 	ldw	r3,4(r17)
   40580:	88800c17 	ldw	r2,48(r17)
   40584:	30cdc83a 	sub	r6,r6,r3
   40588:	10000226 	beq	r2,zero,40594 <__sflush_r+0x78>
   4058c:	88800f17 	ldw	r2,60(r17)
   40590:	308dc83a 	sub	r6,r6,r2
   40594:	89400717 	ldw	r5,28(r17)
   40598:	000f883a 	mov	r7,zero
   4059c:	9809883a 	mov	r4,r19
   405a0:	403ee83a 	callr	r8
   405a4:	00ffffc4 	movi	r3,-1
   405a8:	10c04426 	beq	r2,r3,406bc <__sflush_r+0x1a0>
   405ac:	88c0030b 	ldhu	r3,12(r17)
   405b0:	89000417 	ldw	r4,16(r17)
   405b4:	88000115 	stw	zero,4(r17)
   405b8:	197dffcc 	andi	r5,r3,63487
   405bc:	8940030d 	sth	r5,12(r17)
   405c0:	89000015 	stw	r4,0(r17)
   405c4:	18c4000c 	andi	r3,r3,4096
   405c8:	18002c1e 	bne	r3,zero,4067c <__sflush_r+0x160>
   405cc:	89400c17 	ldw	r5,48(r17)
   405d0:	9c000015 	stw	r16,0(r19)
   405d4:	28000526 	beq	r5,zero,405ec <__sflush_r+0xd0>
   405d8:	88801004 	addi	r2,r17,64
   405dc:	28800226 	beq	r5,r2,405e8 <__sflush_r+0xcc>
   405e0:	9809883a 	mov	r4,r19
   405e4:	0040df00 	call	40df0 <_free_r>
   405e8:	88000c15 	stw	zero,48(r17)
   405ec:	0005883a 	mov	r2,zero
   405f0:	dfc00417 	ldw	ra,16(sp)
   405f4:	dcc00317 	ldw	r19,12(sp)
   405f8:	dc800217 	ldw	r18,8(sp)
   405fc:	dc400117 	ldw	r17,4(sp)
   40600:	dc000017 	ldw	r16,0(sp)
   40604:	dec00504 	addi	sp,sp,20
   40608:	f800283a 	ret
   4060c:	2c800417 	ldw	r18,16(r5)
   40610:	903ff626 	beq	r18,zero,405ec <__alt_data_end+0xfffd46cc>
   40614:	2c000017 	ldw	r16,0(r5)
   40618:	108000cc 	andi	r2,r2,3
   4061c:	2c800015 	stw	r18,0(r5)
   40620:	84a1c83a 	sub	r16,r16,r18
   40624:	1000131e 	bne	r2,zero,40674 <__sflush_r+0x158>
   40628:	28800517 	ldw	r2,20(r5)
   4062c:	88800215 	stw	r2,8(r17)
   40630:	04000316 	blt	zero,r16,40640 <__sflush_r+0x124>
   40634:	003fed06 	br	405ec <__alt_data_end+0xfffd46cc>
   40638:	90a5883a 	add	r18,r18,r2
   4063c:	043feb0e 	bge	zero,r16,405ec <__alt_data_end+0xfffd46cc>
   40640:	88800917 	ldw	r2,36(r17)
   40644:	89400717 	ldw	r5,28(r17)
   40648:	800f883a 	mov	r7,r16
   4064c:	900d883a 	mov	r6,r18
   40650:	9809883a 	mov	r4,r19
   40654:	103ee83a 	callr	r2
   40658:	80a1c83a 	sub	r16,r16,r2
   4065c:	00bff616 	blt	zero,r2,40638 <__alt_data_end+0xfffd4718>
   40660:	88c0030b 	ldhu	r3,12(r17)
   40664:	00bfffc4 	movi	r2,-1
   40668:	18c01014 	ori	r3,r3,64
   4066c:	88c0030d 	sth	r3,12(r17)
   40670:	003fdf06 	br	405f0 <__alt_data_end+0xfffd46d0>
   40674:	0005883a 	mov	r2,zero
   40678:	003fec06 	br	4062c <__alt_data_end+0xfffd470c>
   4067c:	88801415 	stw	r2,80(r17)
   40680:	003fd206 	br	405cc <__alt_data_end+0xfffd46ac>
   40684:	28c00f17 	ldw	r3,60(r5)
   40688:	00ffb316 	blt	zero,r3,40558 <__alt_data_end+0xfffd4638>
   4068c:	003fd706 	br	405ec <__alt_data_end+0xfffd46cc>
   40690:	89400717 	ldw	r5,28(r17)
   40694:	000d883a 	mov	r6,zero
   40698:	01c00044 	movi	r7,1
   4069c:	9809883a 	mov	r4,r19
   406a0:	403ee83a 	callr	r8
   406a4:	100d883a 	mov	r6,r2
   406a8:	00bfffc4 	movi	r2,-1
   406ac:	30801426 	beq	r6,r2,40700 <__sflush_r+0x1e4>
   406b0:	8880030b 	ldhu	r2,12(r17)
   406b4:	8a000a17 	ldw	r8,40(r17)
   406b8:	003fae06 	br	40574 <__alt_data_end+0xfffd4654>
   406bc:	98c00017 	ldw	r3,0(r19)
   406c0:	183fba26 	beq	r3,zero,405ac <__alt_data_end+0xfffd468c>
   406c4:	01000744 	movi	r4,29
   406c8:	19000626 	beq	r3,r4,406e4 <__sflush_r+0x1c8>
   406cc:	01000584 	movi	r4,22
   406d0:	19000426 	beq	r3,r4,406e4 <__sflush_r+0x1c8>
   406d4:	88c0030b 	ldhu	r3,12(r17)
   406d8:	18c01014 	ori	r3,r3,64
   406dc:	88c0030d 	sth	r3,12(r17)
   406e0:	003fc306 	br	405f0 <__alt_data_end+0xfffd46d0>
   406e4:	8880030b 	ldhu	r2,12(r17)
   406e8:	88c00417 	ldw	r3,16(r17)
   406ec:	88000115 	stw	zero,4(r17)
   406f0:	10bdffcc 	andi	r2,r2,63487
   406f4:	8880030d 	sth	r2,12(r17)
   406f8:	88c00015 	stw	r3,0(r17)
   406fc:	003fb306 	br	405cc <__alt_data_end+0xfffd46ac>
   40700:	98800017 	ldw	r2,0(r19)
   40704:	103fea26 	beq	r2,zero,406b0 <__alt_data_end+0xfffd4790>
   40708:	00c00744 	movi	r3,29
   4070c:	10c00226 	beq	r2,r3,40718 <__sflush_r+0x1fc>
   40710:	00c00584 	movi	r3,22
   40714:	10c0031e 	bne	r2,r3,40724 <__sflush_r+0x208>
   40718:	9c000015 	stw	r16,0(r19)
   4071c:	0005883a 	mov	r2,zero
   40720:	003fb306 	br	405f0 <__alt_data_end+0xfffd46d0>
   40724:	88c0030b 	ldhu	r3,12(r17)
   40728:	3005883a 	mov	r2,r6
   4072c:	18c01014 	ori	r3,r3,64
   40730:	88c0030d 	sth	r3,12(r17)
   40734:	003fae06 	br	405f0 <__alt_data_end+0xfffd46d0>

00040738 <_fflush_r>:
   40738:	defffd04 	addi	sp,sp,-12
   4073c:	dc000115 	stw	r16,4(sp)
   40740:	dfc00215 	stw	ra,8(sp)
   40744:	2021883a 	mov	r16,r4
   40748:	20000226 	beq	r4,zero,40754 <_fflush_r+0x1c>
   4074c:	20800e17 	ldw	r2,56(r4)
   40750:	10000c26 	beq	r2,zero,40784 <_fflush_r+0x4c>
   40754:	2880030f 	ldh	r2,12(r5)
   40758:	1000051e 	bne	r2,zero,40770 <_fflush_r+0x38>
   4075c:	0005883a 	mov	r2,zero
   40760:	dfc00217 	ldw	ra,8(sp)
   40764:	dc000117 	ldw	r16,4(sp)
   40768:	dec00304 	addi	sp,sp,12
   4076c:	f800283a 	ret
   40770:	8009883a 	mov	r4,r16
   40774:	dfc00217 	ldw	ra,8(sp)
   40778:	dc000117 	ldw	r16,4(sp)
   4077c:	dec00304 	addi	sp,sp,12
   40780:	004051c1 	jmpi	4051c <__sflush_r>
   40784:	d9400015 	stw	r5,0(sp)
   40788:	0040b240 	call	40b24 <__sinit>
   4078c:	d9400017 	ldw	r5,0(sp)
   40790:	003ff006 	br	40754 <__alt_data_end+0xfffd4834>

00040794 <fflush>:
   40794:	20000526 	beq	r4,zero,407ac <fflush+0x18>
   40798:	00800174 	movhi	r2,5
   4079c:	10897204 	addi	r2,r2,9672
   407a0:	200b883a 	mov	r5,r4
   407a4:	11000017 	ldw	r4,0(r2)
   407a8:	00407381 	jmpi	40738 <_fflush_r>
   407ac:	00800174 	movhi	r2,5
   407b0:	10897104 	addi	r2,r2,9668
   407b4:	11000017 	ldw	r4,0(r2)
   407b8:	01400134 	movhi	r5,4
   407bc:	2941ce04 	addi	r5,r5,1848
   407c0:	00416a01 	jmpi	416a0 <_fwalk_reent>

000407c4 <__fp_unlock>:
   407c4:	0005883a 	mov	r2,zero
   407c8:	f800283a 	ret

000407cc <_cleanup_r>:
   407cc:	01400134 	movhi	r5,4
   407d0:	29410604 	addi	r5,r5,1048
   407d4:	00416a01 	jmpi	416a0 <_fwalk_reent>

000407d8 <__sinit.part.1>:
   407d8:	defff704 	addi	sp,sp,-36
   407dc:	00c00134 	movhi	r3,4
   407e0:	dfc00815 	stw	ra,32(sp)
   407e4:	ddc00715 	stw	r23,28(sp)
   407e8:	dd800615 	stw	r22,24(sp)
   407ec:	dd400515 	stw	r21,20(sp)
   407f0:	dd000415 	stw	r20,16(sp)
   407f4:	dcc00315 	stw	r19,12(sp)
   407f8:	dc800215 	stw	r18,8(sp)
   407fc:	dc400115 	stw	r17,4(sp)
   40800:	dc000015 	stw	r16,0(sp)
   40804:	18c1f304 	addi	r3,r3,1996
   40808:	24000117 	ldw	r16,4(r4)
   4080c:	20c00f15 	stw	r3,60(r4)
   40810:	2080bb04 	addi	r2,r4,748
   40814:	00c000c4 	movi	r3,3
   40818:	20c0b915 	stw	r3,740(r4)
   4081c:	2080ba15 	stw	r2,744(r4)
   40820:	2000b815 	stw	zero,736(r4)
   40824:	05c00204 	movi	r23,8
   40828:	00800104 	movi	r2,4
   4082c:	2025883a 	mov	r18,r4
   40830:	b80d883a 	mov	r6,r23
   40834:	81001704 	addi	r4,r16,92
   40838:	000b883a 	mov	r5,zero
   4083c:	80000015 	stw	zero,0(r16)
   40840:	80000115 	stw	zero,4(r16)
   40844:	80000215 	stw	zero,8(r16)
   40848:	8080030d 	sth	r2,12(r16)
   4084c:	80001915 	stw	zero,100(r16)
   40850:	8000038d 	sth	zero,14(r16)
   40854:	80000415 	stw	zero,16(r16)
   40858:	80000515 	stw	zero,20(r16)
   4085c:	80000615 	stw	zero,24(r16)
   40860:	00422240 	call	42224 <memset>
   40864:	05800134 	movhi	r22,4
   40868:	94400217 	ldw	r17,8(r18)
   4086c:	05400134 	movhi	r21,4
   40870:	05000134 	movhi	r20,4
   40874:	04c00134 	movhi	r19,4
   40878:	b589d304 	addi	r22,r22,10060
   4087c:	ad49ea04 	addi	r21,r21,10152
   40880:	a50a0904 	addi	r20,r20,10276
   40884:	9cca2004 	addi	r19,r19,10368
   40888:	85800815 	stw	r22,32(r16)
   4088c:	85400915 	stw	r21,36(r16)
   40890:	85000a15 	stw	r20,40(r16)
   40894:	84c00b15 	stw	r19,44(r16)
   40898:	84000715 	stw	r16,28(r16)
   4089c:	00800284 	movi	r2,10
   408a0:	8880030d 	sth	r2,12(r17)
   408a4:	00800044 	movi	r2,1
   408a8:	b80d883a 	mov	r6,r23
   408ac:	89001704 	addi	r4,r17,92
   408b0:	000b883a 	mov	r5,zero
   408b4:	88000015 	stw	zero,0(r17)
   408b8:	88000115 	stw	zero,4(r17)
   408bc:	88000215 	stw	zero,8(r17)
   408c0:	88001915 	stw	zero,100(r17)
   408c4:	8880038d 	sth	r2,14(r17)
   408c8:	88000415 	stw	zero,16(r17)
   408cc:	88000515 	stw	zero,20(r17)
   408d0:	88000615 	stw	zero,24(r17)
   408d4:	00422240 	call	42224 <memset>
   408d8:	94000317 	ldw	r16,12(r18)
   408dc:	00800484 	movi	r2,18
   408e0:	8c400715 	stw	r17,28(r17)
   408e4:	8d800815 	stw	r22,32(r17)
   408e8:	8d400915 	stw	r21,36(r17)
   408ec:	8d000a15 	stw	r20,40(r17)
   408f0:	8cc00b15 	stw	r19,44(r17)
   408f4:	8080030d 	sth	r2,12(r16)
   408f8:	00800084 	movi	r2,2
   408fc:	80000015 	stw	zero,0(r16)
   40900:	80000115 	stw	zero,4(r16)
   40904:	80000215 	stw	zero,8(r16)
   40908:	80001915 	stw	zero,100(r16)
   4090c:	8080038d 	sth	r2,14(r16)
   40910:	80000415 	stw	zero,16(r16)
   40914:	80000515 	stw	zero,20(r16)
   40918:	80000615 	stw	zero,24(r16)
   4091c:	b80d883a 	mov	r6,r23
   40920:	000b883a 	mov	r5,zero
   40924:	81001704 	addi	r4,r16,92
   40928:	00422240 	call	42224 <memset>
   4092c:	00800044 	movi	r2,1
   40930:	84000715 	stw	r16,28(r16)
   40934:	85800815 	stw	r22,32(r16)
   40938:	85400915 	stw	r21,36(r16)
   4093c:	85000a15 	stw	r20,40(r16)
   40940:	84c00b15 	stw	r19,44(r16)
   40944:	90800e15 	stw	r2,56(r18)
   40948:	dfc00817 	ldw	ra,32(sp)
   4094c:	ddc00717 	ldw	r23,28(sp)
   40950:	dd800617 	ldw	r22,24(sp)
   40954:	dd400517 	ldw	r21,20(sp)
   40958:	dd000417 	ldw	r20,16(sp)
   4095c:	dcc00317 	ldw	r19,12(sp)
   40960:	dc800217 	ldw	r18,8(sp)
   40964:	dc400117 	ldw	r17,4(sp)
   40968:	dc000017 	ldw	r16,0(sp)
   4096c:	dec00904 	addi	sp,sp,36
   40970:	f800283a 	ret

00040974 <__fp_lock>:
   40974:	0005883a 	mov	r2,zero
   40978:	f800283a 	ret

0004097c <__sfmoreglue>:
   4097c:	defffc04 	addi	sp,sp,-16
   40980:	dc800215 	stw	r18,8(sp)
   40984:	2825883a 	mov	r18,r5
   40988:	dc000015 	stw	r16,0(sp)
   4098c:	01401a04 	movi	r5,104
   40990:	2021883a 	mov	r16,r4
   40994:	913fffc4 	addi	r4,r18,-1
   40998:	dfc00315 	stw	ra,12(sp)
   4099c:	dc400115 	stw	r17,4(sp)
   409a0:	004b4740 	call	4b474 <__mulsi3>
   409a4:	8009883a 	mov	r4,r16
   409a8:	11401d04 	addi	r5,r2,116
   409ac:	1023883a 	mov	r17,r2
   409b0:	0041a180 	call	41a18 <_malloc_r>
   409b4:	1021883a 	mov	r16,r2
   409b8:	10000726 	beq	r2,zero,409d8 <__sfmoreglue+0x5c>
   409bc:	11000304 	addi	r4,r2,12
   409c0:	10000015 	stw	zero,0(r2)
   409c4:	14800115 	stw	r18,4(r2)
   409c8:	11000215 	stw	r4,8(r2)
   409cc:	89801a04 	addi	r6,r17,104
   409d0:	000b883a 	mov	r5,zero
   409d4:	00422240 	call	42224 <memset>
   409d8:	8005883a 	mov	r2,r16
   409dc:	dfc00317 	ldw	ra,12(sp)
   409e0:	dc800217 	ldw	r18,8(sp)
   409e4:	dc400117 	ldw	r17,4(sp)
   409e8:	dc000017 	ldw	r16,0(sp)
   409ec:	dec00404 	addi	sp,sp,16
   409f0:	f800283a 	ret

000409f4 <__sfp>:
   409f4:	defffb04 	addi	sp,sp,-20
   409f8:	dc000015 	stw	r16,0(sp)
   409fc:	04000174 	movhi	r16,5
   40a00:	84097104 	addi	r16,r16,9668
   40a04:	dcc00315 	stw	r19,12(sp)
   40a08:	2027883a 	mov	r19,r4
   40a0c:	81000017 	ldw	r4,0(r16)
   40a10:	dfc00415 	stw	ra,16(sp)
   40a14:	dc800215 	stw	r18,8(sp)
   40a18:	20800e17 	ldw	r2,56(r4)
   40a1c:	dc400115 	stw	r17,4(sp)
   40a20:	1000021e 	bne	r2,zero,40a2c <__sfp+0x38>
   40a24:	00407d80 	call	407d8 <__sinit.part.1>
   40a28:	81000017 	ldw	r4,0(r16)
   40a2c:	2480b804 	addi	r18,r4,736
   40a30:	047fffc4 	movi	r17,-1
   40a34:	91000117 	ldw	r4,4(r18)
   40a38:	94000217 	ldw	r16,8(r18)
   40a3c:	213fffc4 	addi	r4,r4,-1
   40a40:	20000a16 	blt	r4,zero,40a6c <__sfp+0x78>
   40a44:	8080030f 	ldh	r2,12(r16)
   40a48:	10000c26 	beq	r2,zero,40a7c <__sfp+0x88>
   40a4c:	80c01d04 	addi	r3,r16,116
   40a50:	00000206 	br	40a5c <__sfp+0x68>
   40a54:	18bfe60f 	ldh	r2,-104(r3)
   40a58:	10000826 	beq	r2,zero,40a7c <__sfp+0x88>
   40a5c:	213fffc4 	addi	r4,r4,-1
   40a60:	1c3ffd04 	addi	r16,r3,-12
   40a64:	18c01a04 	addi	r3,r3,104
   40a68:	247ffa1e 	bne	r4,r17,40a54 <__alt_data_end+0xfffd4b34>
   40a6c:	90800017 	ldw	r2,0(r18)
   40a70:	10001d26 	beq	r2,zero,40ae8 <__sfp+0xf4>
   40a74:	1025883a 	mov	r18,r2
   40a78:	003fee06 	br	40a34 <__alt_data_end+0xfffd4b14>
   40a7c:	00bfffc4 	movi	r2,-1
   40a80:	8080038d 	sth	r2,14(r16)
   40a84:	00800044 	movi	r2,1
   40a88:	8080030d 	sth	r2,12(r16)
   40a8c:	80001915 	stw	zero,100(r16)
   40a90:	80000015 	stw	zero,0(r16)
   40a94:	80000215 	stw	zero,8(r16)
   40a98:	80000115 	stw	zero,4(r16)
   40a9c:	80000415 	stw	zero,16(r16)
   40aa0:	80000515 	stw	zero,20(r16)
   40aa4:	80000615 	stw	zero,24(r16)
   40aa8:	01800204 	movi	r6,8
   40aac:	000b883a 	mov	r5,zero
   40ab0:	81001704 	addi	r4,r16,92
   40ab4:	00422240 	call	42224 <memset>
   40ab8:	8005883a 	mov	r2,r16
   40abc:	80000c15 	stw	zero,48(r16)
   40ac0:	80000d15 	stw	zero,52(r16)
   40ac4:	80001115 	stw	zero,68(r16)
   40ac8:	80001215 	stw	zero,72(r16)
   40acc:	dfc00417 	ldw	ra,16(sp)
   40ad0:	dcc00317 	ldw	r19,12(sp)
   40ad4:	dc800217 	ldw	r18,8(sp)
   40ad8:	dc400117 	ldw	r17,4(sp)
   40adc:	dc000017 	ldw	r16,0(sp)
   40ae0:	dec00504 	addi	sp,sp,20
   40ae4:	f800283a 	ret
   40ae8:	01400104 	movi	r5,4
   40aec:	9809883a 	mov	r4,r19
   40af0:	004097c0 	call	4097c <__sfmoreglue>
   40af4:	90800015 	stw	r2,0(r18)
   40af8:	103fde1e 	bne	r2,zero,40a74 <__alt_data_end+0xfffd4b54>
   40afc:	00800304 	movi	r2,12
   40b00:	98800015 	stw	r2,0(r19)
   40b04:	0005883a 	mov	r2,zero
   40b08:	003ff006 	br	40acc <__alt_data_end+0xfffd4bac>

00040b0c <_cleanup>:
   40b0c:	00800174 	movhi	r2,5
   40b10:	10897104 	addi	r2,r2,9668
   40b14:	11000017 	ldw	r4,0(r2)
   40b18:	01400134 	movhi	r5,4
   40b1c:	29410604 	addi	r5,r5,1048
   40b20:	00416a01 	jmpi	416a0 <_fwalk_reent>

00040b24 <__sinit>:
   40b24:	20800e17 	ldw	r2,56(r4)
   40b28:	10000126 	beq	r2,zero,40b30 <__sinit+0xc>
   40b2c:	f800283a 	ret
   40b30:	00407d81 	jmpi	407d8 <__sinit.part.1>

00040b34 <__sfp_lock_acquire>:
   40b34:	f800283a 	ret

00040b38 <__sfp_lock_release>:
   40b38:	f800283a 	ret

00040b3c <__sinit_lock_acquire>:
   40b3c:	f800283a 	ret

00040b40 <__sinit_lock_release>:
   40b40:	f800283a 	ret

00040b44 <__fp_lock_all>:
   40b44:	00800174 	movhi	r2,5
   40b48:	10897204 	addi	r2,r2,9672
   40b4c:	11000017 	ldw	r4,0(r2)
   40b50:	01400134 	movhi	r5,4
   40b54:	29425d04 	addi	r5,r5,2420
   40b58:	00415dc1 	jmpi	415dc <_fwalk>

00040b5c <__fp_unlock_all>:
   40b5c:	00800174 	movhi	r2,5
   40b60:	10897204 	addi	r2,r2,9672
   40b64:	11000017 	ldw	r4,0(r2)
   40b68:	01400134 	movhi	r5,4
   40b6c:	2941f104 	addi	r5,r5,1988
   40b70:	00415dc1 	jmpi	415dc <_fwalk>

00040b74 <_fopen_r>:
   40b74:	defffa04 	addi	sp,sp,-24
   40b78:	3005883a 	mov	r2,r6
   40b7c:	dcc00415 	stw	r19,16(sp)
   40b80:	d80d883a 	mov	r6,sp
   40b84:	2827883a 	mov	r19,r5
   40b88:	100b883a 	mov	r5,r2
   40b8c:	dc800315 	stw	r18,12(sp)
   40b90:	dfc00515 	stw	ra,20(sp)
   40b94:	dc400215 	stw	r17,8(sp)
   40b98:	dc000115 	stw	r16,4(sp)
   40b9c:	2025883a 	mov	r18,r4
   40ba0:	004678c0 	call	4678c <__sflags>
   40ba4:	10002726 	beq	r2,zero,40c44 <_fopen_r+0xd0>
   40ba8:	9009883a 	mov	r4,r18
   40bac:	1023883a 	mov	r17,r2
   40bb0:	00409f40 	call	409f4 <__sfp>
   40bb4:	1021883a 	mov	r16,r2
   40bb8:	10002226 	beq	r2,zero,40c44 <_fopen_r+0xd0>
   40bbc:	d9800017 	ldw	r6,0(sp)
   40bc0:	01c06d84 	movi	r7,438
   40bc4:	980b883a 	mov	r5,r19
   40bc8:	9009883a 	mov	r4,r18
   40bcc:	004234c0 	call	4234c <_open_r>
   40bd0:	10001916 	blt	r2,zero,40c38 <_fopen_r+0xc4>
   40bd4:	8080038d 	sth	r2,14(r16)
   40bd8:	00800134 	movhi	r2,4
   40bdc:	1089d304 	addi	r2,r2,10060
   40be0:	80800815 	stw	r2,32(r16)
   40be4:	00800134 	movhi	r2,4
   40be8:	1089ea04 	addi	r2,r2,10152
   40bec:	80800915 	stw	r2,36(r16)
   40bf0:	00800134 	movhi	r2,4
   40bf4:	108a0904 	addi	r2,r2,10276
   40bf8:	80800a15 	stw	r2,40(r16)
   40bfc:	00800134 	movhi	r2,4
   40c00:	108a2004 	addi	r2,r2,10368
   40c04:	8440030d 	sth	r17,12(r16)
   40c08:	84000715 	stw	r16,28(r16)
   40c0c:	80800b15 	stw	r2,44(r16)
   40c10:	8c40400c 	andi	r17,r17,256
   40c14:	88000d1e 	bne	r17,zero,40c4c <_fopen_r+0xd8>
   40c18:	8005883a 	mov	r2,r16
   40c1c:	dfc00517 	ldw	ra,20(sp)
   40c20:	dcc00417 	ldw	r19,16(sp)
   40c24:	dc800317 	ldw	r18,12(sp)
   40c28:	dc400217 	ldw	r17,8(sp)
   40c2c:	dc000117 	ldw	r16,4(sp)
   40c30:	dec00604 	addi	sp,sp,24
   40c34:	f800283a 	ret
   40c38:	0040b340 	call	40b34 <__sfp_lock_acquire>
   40c3c:	8000030d 	sth	zero,12(r16)
   40c40:	0040b380 	call	40b38 <__sfp_lock_release>
   40c44:	0005883a 	mov	r2,zero
   40c48:	003ff406 	br	40c1c <__alt_data_end+0xfffd4cfc>
   40c4c:	01c00084 	movi	r7,2
   40c50:	000d883a 	mov	r6,zero
   40c54:	800b883a 	mov	r5,r16
   40c58:	9009883a 	mov	r4,r18
   40c5c:	00411000 	call	41100 <_fseek_r>
   40c60:	8005883a 	mov	r2,r16
   40c64:	003fed06 	br	40c1c <__alt_data_end+0xfffd4cfc>

00040c68 <fopen>:
   40c68:	00800174 	movhi	r2,5
   40c6c:	10897204 	addi	r2,r2,9672
   40c70:	280d883a 	mov	r6,r5
   40c74:	200b883a 	mov	r5,r4
   40c78:	11000017 	ldw	r4,0(r2)
   40c7c:	0040b741 	jmpi	40b74 <_fopen_r>

00040c80 <_fprintf_r>:
   40c80:	defffe04 	addi	sp,sp,-8
   40c84:	2809883a 	mov	r4,r5
   40c88:	300b883a 	mov	r5,r6
   40c8c:	dfc00015 	stw	ra,0(sp)
   40c90:	d9c00115 	stw	r7,4(sp)
   40c94:	d9800104 	addi	r6,sp,4
   40c98:	0044bfc0 	call	44bfc <__vfprintf_internal>
   40c9c:	dfc00017 	ldw	ra,0(sp)
   40ca0:	dec00204 	addi	sp,sp,8
   40ca4:	f800283a 	ret

00040ca8 <fprintf>:
   40ca8:	defffd04 	addi	sp,sp,-12
   40cac:	dfc00015 	stw	ra,0(sp)
   40cb0:	d9800115 	stw	r6,4(sp)
   40cb4:	d9c00215 	stw	r7,8(sp)
   40cb8:	d9800104 	addi	r6,sp,4
   40cbc:	0044bfc0 	call	44bfc <__vfprintf_internal>
   40cc0:	dfc00017 	ldw	ra,0(sp)
   40cc4:	dec00304 	addi	sp,sp,12
   40cc8:	f800283a 	ret

00040ccc <_malloc_trim_r>:
   40ccc:	defffb04 	addi	sp,sp,-20
   40cd0:	dcc00315 	stw	r19,12(sp)
   40cd4:	04c00174 	movhi	r19,5
   40cd8:	dc800215 	stw	r18,8(sp)
   40cdc:	dc400115 	stw	r17,4(sp)
   40ce0:	dc000015 	stw	r16,0(sp)
   40ce4:	dfc00415 	stw	ra,16(sp)
   40ce8:	2821883a 	mov	r16,r5
   40cec:	9cc3c404 	addi	r19,r19,3856
   40cf0:	2025883a 	mov	r18,r4
   40cf4:	004e2dc0 	call	4e2dc <__malloc_lock>
   40cf8:	98800217 	ldw	r2,8(r19)
   40cfc:	14400117 	ldw	r17,4(r2)
   40d00:	00bfff04 	movi	r2,-4
   40d04:	88a2703a 	and	r17,r17,r2
   40d08:	8c21c83a 	sub	r16,r17,r16
   40d0c:	8403fbc4 	addi	r16,r16,4079
   40d10:	8020d33a 	srli	r16,r16,12
   40d14:	0083ffc4 	movi	r2,4095
   40d18:	843fffc4 	addi	r16,r16,-1
   40d1c:	8020933a 	slli	r16,r16,12
   40d20:	1400060e 	bge	r2,r16,40d3c <_malloc_trim_r+0x70>
   40d24:	000b883a 	mov	r5,zero
   40d28:	9009883a 	mov	r4,r18
   40d2c:	00426f80 	call	426f8 <_sbrk_r>
   40d30:	98c00217 	ldw	r3,8(r19)
   40d34:	1c47883a 	add	r3,r3,r17
   40d38:	10c00a26 	beq	r2,r3,40d64 <_malloc_trim_r+0x98>
   40d3c:	9009883a 	mov	r4,r18
   40d40:	004e3000 	call	4e300 <__malloc_unlock>
   40d44:	0005883a 	mov	r2,zero
   40d48:	dfc00417 	ldw	ra,16(sp)
   40d4c:	dcc00317 	ldw	r19,12(sp)
   40d50:	dc800217 	ldw	r18,8(sp)
   40d54:	dc400117 	ldw	r17,4(sp)
   40d58:	dc000017 	ldw	r16,0(sp)
   40d5c:	dec00504 	addi	sp,sp,20
   40d60:	f800283a 	ret
   40d64:	040bc83a 	sub	r5,zero,r16
   40d68:	9009883a 	mov	r4,r18
   40d6c:	00426f80 	call	426f8 <_sbrk_r>
   40d70:	00ffffc4 	movi	r3,-1
   40d74:	10c00d26 	beq	r2,r3,40dac <_malloc_trim_r+0xe0>
   40d78:	00c00174 	movhi	r3,5
   40d7c:	18d05504 	addi	r3,r3,16724
   40d80:	18800017 	ldw	r2,0(r3)
   40d84:	99000217 	ldw	r4,8(r19)
   40d88:	8c23c83a 	sub	r17,r17,r16
   40d8c:	8c400054 	ori	r17,r17,1
   40d90:	1421c83a 	sub	r16,r2,r16
   40d94:	24400115 	stw	r17,4(r4)
   40d98:	9009883a 	mov	r4,r18
   40d9c:	1c000015 	stw	r16,0(r3)
   40da0:	004e3000 	call	4e300 <__malloc_unlock>
   40da4:	00800044 	movi	r2,1
   40da8:	003fe706 	br	40d48 <__alt_data_end+0xfffd4e28>
   40dac:	000b883a 	mov	r5,zero
   40db0:	9009883a 	mov	r4,r18
   40db4:	00426f80 	call	426f8 <_sbrk_r>
   40db8:	99000217 	ldw	r4,8(r19)
   40dbc:	014003c4 	movi	r5,15
   40dc0:	1107c83a 	sub	r3,r2,r4
   40dc4:	28ffdd0e 	bge	r5,r3,40d3c <__alt_data_end+0xfffd4e1c>
   40dc8:	01400174 	movhi	r5,5
   40dcc:	29497304 	addi	r5,r5,9676
   40dd0:	29400017 	ldw	r5,0(r5)
   40dd4:	18c00054 	ori	r3,r3,1
   40dd8:	20c00115 	stw	r3,4(r4)
   40ddc:	00c00174 	movhi	r3,5
   40de0:	1145c83a 	sub	r2,r2,r5
   40de4:	18d05504 	addi	r3,r3,16724
   40de8:	18800015 	stw	r2,0(r3)
   40dec:	003fd306 	br	40d3c <__alt_data_end+0xfffd4e1c>

00040df0 <_free_r>:
   40df0:	28004126 	beq	r5,zero,40ef8 <_free_r+0x108>
   40df4:	defffd04 	addi	sp,sp,-12
   40df8:	dc400115 	stw	r17,4(sp)
   40dfc:	dc000015 	stw	r16,0(sp)
   40e00:	2023883a 	mov	r17,r4
   40e04:	2821883a 	mov	r16,r5
   40e08:	dfc00215 	stw	ra,8(sp)
   40e0c:	004e2dc0 	call	4e2dc <__malloc_lock>
   40e10:	81ffff17 	ldw	r7,-4(r16)
   40e14:	00bfff84 	movi	r2,-2
   40e18:	01000174 	movhi	r4,5
   40e1c:	81bffe04 	addi	r6,r16,-8
   40e20:	3884703a 	and	r2,r7,r2
   40e24:	2103c404 	addi	r4,r4,3856
   40e28:	308b883a 	add	r5,r6,r2
   40e2c:	2a400117 	ldw	r9,4(r5)
   40e30:	22000217 	ldw	r8,8(r4)
   40e34:	00ffff04 	movi	r3,-4
   40e38:	48c6703a 	and	r3,r9,r3
   40e3c:	2a005726 	beq	r5,r8,40f9c <_free_r+0x1ac>
   40e40:	28c00115 	stw	r3,4(r5)
   40e44:	39c0004c 	andi	r7,r7,1
   40e48:	3800091e 	bne	r7,zero,40e70 <_free_r+0x80>
   40e4c:	823ffe17 	ldw	r8,-8(r16)
   40e50:	22400204 	addi	r9,r4,8
   40e54:	320dc83a 	sub	r6,r6,r8
   40e58:	31c00217 	ldw	r7,8(r6)
   40e5c:	1205883a 	add	r2,r2,r8
   40e60:	3a406526 	beq	r7,r9,40ff8 <_free_r+0x208>
   40e64:	32000317 	ldw	r8,12(r6)
   40e68:	3a000315 	stw	r8,12(r7)
   40e6c:	41c00215 	stw	r7,8(r8)
   40e70:	28cf883a 	add	r7,r5,r3
   40e74:	39c00117 	ldw	r7,4(r7)
   40e78:	39c0004c 	andi	r7,r7,1
   40e7c:	38003a26 	beq	r7,zero,40f68 <_free_r+0x178>
   40e80:	10c00054 	ori	r3,r2,1
   40e84:	30c00115 	stw	r3,4(r6)
   40e88:	3087883a 	add	r3,r6,r2
   40e8c:	18800015 	stw	r2,0(r3)
   40e90:	00c07fc4 	movi	r3,511
   40e94:	18801936 	bltu	r3,r2,40efc <_free_r+0x10c>
   40e98:	1004d0fa 	srli	r2,r2,3
   40e9c:	01c00044 	movi	r7,1
   40ea0:	21400117 	ldw	r5,4(r4)
   40ea4:	10c00044 	addi	r3,r2,1
   40ea8:	18c7883a 	add	r3,r3,r3
   40eac:	1005d0ba 	srai	r2,r2,2
   40eb0:	18c7883a 	add	r3,r3,r3
   40eb4:	18c7883a 	add	r3,r3,r3
   40eb8:	1907883a 	add	r3,r3,r4
   40ebc:	3884983a 	sll	r2,r7,r2
   40ec0:	19c00017 	ldw	r7,0(r3)
   40ec4:	1a3ffe04 	addi	r8,r3,-8
   40ec8:	1144b03a 	or	r2,r2,r5
   40ecc:	32000315 	stw	r8,12(r6)
   40ed0:	31c00215 	stw	r7,8(r6)
   40ed4:	20800115 	stw	r2,4(r4)
   40ed8:	19800015 	stw	r6,0(r3)
   40edc:	39800315 	stw	r6,12(r7)
   40ee0:	8809883a 	mov	r4,r17
   40ee4:	dfc00217 	ldw	ra,8(sp)
   40ee8:	dc400117 	ldw	r17,4(sp)
   40eec:	dc000017 	ldw	r16,0(sp)
   40ef0:	dec00304 	addi	sp,sp,12
   40ef4:	004e3001 	jmpi	4e300 <__malloc_unlock>
   40ef8:	f800283a 	ret
   40efc:	100ad27a 	srli	r5,r2,9
   40f00:	00c00104 	movi	r3,4
   40f04:	19404a36 	bltu	r3,r5,41030 <_free_r+0x240>
   40f08:	100ad1ba 	srli	r5,r2,6
   40f0c:	28c00e44 	addi	r3,r5,57
   40f10:	18c7883a 	add	r3,r3,r3
   40f14:	29400e04 	addi	r5,r5,56
   40f18:	18c7883a 	add	r3,r3,r3
   40f1c:	18c7883a 	add	r3,r3,r3
   40f20:	1909883a 	add	r4,r3,r4
   40f24:	20c00017 	ldw	r3,0(r4)
   40f28:	01c00174 	movhi	r7,5
   40f2c:	213ffe04 	addi	r4,r4,-8
   40f30:	39c3c404 	addi	r7,r7,3856
   40f34:	20c04426 	beq	r4,r3,41048 <_free_r+0x258>
   40f38:	01ffff04 	movi	r7,-4
   40f3c:	19400117 	ldw	r5,4(r3)
   40f40:	29ca703a 	and	r5,r5,r7
   40f44:	1140022e 	bgeu	r2,r5,40f50 <_free_r+0x160>
   40f48:	18c00217 	ldw	r3,8(r3)
   40f4c:	20fffb1e 	bne	r4,r3,40f3c <__alt_data_end+0xfffd501c>
   40f50:	19000317 	ldw	r4,12(r3)
   40f54:	31000315 	stw	r4,12(r6)
   40f58:	30c00215 	stw	r3,8(r6)
   40f5c:	21800215 	stw	r6,8(r4)
   40f60:	19800315 	stw	r6,12(r3)
   40f64:	003fde06 	br	40ee0 <__alt_data_end+0xfffd4fc0>
   40f68:	29c00217 	ldw	r7,8(r5)
   40f6c:	10c5883a 	add	r2,r2,r3
   40f70:	00c00174 	movhi	r3,5
   40f74:	18c3c604 	addi	r3,r3,3864
   40f78:	38c03b26 	beq	r7,r3,41068 <_free_r+0x278>
   40f7c:	2a000317 	ldw	r8,12(r5)
   40f80:	11400054 	ori	r5,r2,1
   40f84:	3087883a 	add	r3,r6,r2
   40f88:	3a000315 	stw	r8,12(r7)
   40f8c:	41c00215 	stw	r7,8(r8)
   40f90:	31400115 	stw	r5,4(r6)
   40f94:	18800015 	stw	r2,0(r3)
   40f98:	003fbd06 	br	40e90 <__alt_data_end+0xfffd4f70>
   40f9c:	39c0004c 	andi	r7,r7,1
   40fa0:	10c5883a 	add	r2,r2,r3
   40fa4:	3800071e 	bne	r7,zero,40fc4 <_free_r+0x1d4>
   40fa8:	81fffe17 	ldw	r7,-8(r16)
   40fac:	31cdc83a 	sub	r6,r6,r7
   40fb0:	30c00317 	ldw	r3,12(r6)
   40fb4:	31400217 	ldw	r5,8(r6)
   40fb8:	11c5883a 	add	r2,r2,r7
   40fbc:	28c00315 	stw	r3,12(r5)
   40fc0:	19400215 	stw	r5,8(r3)
   40fc4:	10c00054 	ori	r3,r2,1
   40fc8:	30c00115 	stw	r3,4(r6)
   40fcc:	00c00174 	movhi	r3,5
   40fd0:	18c97404 	addi	r3,r3,9680
   40fd4:	18c00017 	ldw	r3,0(r3)
   40fd8:	21800215 	stw	r6,8(r4)
   40fdc:	10ffc036 	bltu	r2,r3,40ee0 <__alt_data_end+0xfffd4fc0>
   40fe0:	00800174 	movhi	r2,5
   40fe4:	10904a04 	addi	r2,r2,16680
   40fe8:	11400017 	ldw	r5,0(r2)
   40fec:	8809883a 	mov	r4,r17
   40ff0:	0040ccc0 	call	40ccc <_malloc_trim_r>
   40ff4:	003fba06 	br	40ee0 <__alt_data_end+0xfffd4fc0>
   40ff8:	28c9883a 	add	r4,r5,r3
   40ffc:	21000117 	ldw	r4,4(r4)
   41000:	2100004c 	andi	r4,r4,1
   41004:	2000391e 	bne	r4,zero,410ec <_free_r+0x2fc>
   41008:	29c00217 	ldw	r7,8(r5)
   4100c:	29000317 	ldw	r4,12(r5)
   41010:	1885883a 	add	r2,r3,r2
   41014:	10c00054 	ori	r3,r2,1
   41018:	39000315 	stw	r4,12(r7)
   4101c:	21c00215 	stw	r7,8(r4)
   41020:	30c00115 	stw	r3,4(r6)
   41024:	308d883a 	add	r6,r6,r2
   41028:	30800015 	stw	r2,0(r6)
   4102c:	003fac06 	br	40ee0 <__alt_data_end+0xfffd4fc0>
   41030:	00c00504 	movi	r3,20
   41034:	19401536 	bltu	r3,r5,4108c <_free_r+0x29c>
   41038:	28c01704 	addi	r3,r5,92
   4103c:	18c7883a 	add	r3,r3,r3
   41040:	294016c4 	addi	r5,r5,91
   41044:	003fb406 	br	40f18 <__alt_data_end+0xfffd4ff8>
   41048:	280bd0ba 	srai	r5,r5,2
   4104c:	00c00044 	movi	r3,1
   41050:	38800117 	ldw	r2,4(r7)
   41054:	194a983a 	sll	r5,r3,r5
   41058:	2007883a 	mov	r3,r4
   4105c:	2884b03a 	or	r2,r5,r2
   41060:	38800115 	stw	r2,4(r7)
   41064:	003fbb06 	br	40f54 <__alt_data_end+0xfffd5034>
   41068:	21800515 	stw	r6,20(r4)
   4106c:	21800415 	stw	r6,16(r4)
   41070:	10c00054 	ori	r3,r2,1
   41074:	31c00315 	stw	r7,12(r6)
   41078:	31c00215 	stw	r7,8(r6)
   4107c:	30c00115 	stw	r3,4(r6)
   41080:	308d883a 	add	r6,r6,r2
   41084:	30800015 	stw	r2,0(r6)
   41088:	003f9506 	br	40ee0 <__alt_data_end+0xfffd4fc0>
   4108c:	00c01504 	movi	r3,84
   41090:	19400536 	bltu	r3,r5,410a8 <_free_r+0x2b8>
   41094:	100ad33a 	srli	r5,r2,12
   41098:	28c01bc4 	addi	r3,r5,111
   4109c:	18c7883a 	add	r3,r3,r3
   410a0:	29401b84 	addi	r5,r5,110
   410a4:	003f9c06 	br	40f18 <__alt_data_end+0xfffd4ff8>
   410a8:	00c05504 	movi	r3,340
   410ac:	19400536 	bltu	r3,r5,410c4 <_free_r+0x2d4>
   410b0:	100ad3fa 	srli	r5,r2,15
   410b4:	28c01e04 	addi	r3,r5,120
   410b8:	18c7883a 	add	r3,r3,r3
   410bc:	29401dc4 	addi	r5,r5,119
   410c0:	003f9506 	br	40f18 <__alt_data_end+0xfffd4ff8>
   410c4:	00c15504 	movi	r3,1364
   410c8:	19400536 	bltu	r3,r5,410e0 <_free_r+0x2f0>
   410cc:	100ad4ba 	srli	r5,r2,18
   410d0:	28c01f44 	addi	r3,r5,125
   410d4:	18c7883a 	add	r3,r3,r3
   410d8:	29401f04 	addi	r5,r5,124
   410dc:	003f8e06 	br	40f18 <__alt_data_end+0xfffd4ff8>
   410e0:	00c03f84 	movi	r3,254
   410e4:	01401f84 	movi	r5,126
   410e8:	003f8b06 	br	40f18 <__alt_data_end+0xfffd4ff8>
   410ec:	10c00054 	ori	r3,r2,1
   410f0:	30c00115 	stw	r3,4(r6)
   410f4:	308d883a 	add	r6,r6,r2
   410f8:	30800015 	stw	r2,0(r6)
   410fc:	003f7806 	br	40ee0 <__alt_data_end+0xfffd4fc0>

00041100 <_fseek_r>:
   41100:	00411201 	jmpi	41120 <_fseeko_r>

00041104 <fseek>:
   41104:	00800174 	movhi	r2,5
   41108:	10897204 	addi	r2,r2,9672
   4110c:	300f883a 	mov	r7,r6
   41110:	280d883a 	mov	r6,r5
   41114:	200b883a 	mov	r5,r4
   41118:	11000017 	ldw	r4,0(r2)
   4111c:	00411201 	jmpi	41120 <_fseeko_r>

00041120 <_fseeko_r>:
   41120:	deffe804 	addi	sp,sp,-96
   41124:	dd401415 	stw	r21,80(sp)
   41128:	dc801115 	stw	r18,68(sp)
   4112c:	dc401015 	stw	r17,64(sp)
   41130:	dc000f15 	stw	r16,60(sp)
   41134:	dfc01715 	stw	ra,92(sp)
   41138:	ddc01615 	stw	r23,88(sp)
   4113c:	dd801515 	stw	r22,84(sp)
   41140:	dd001315 	stw	r20,76(sp)
   41144:	dcc01215 	stw	r19,72(sp)
   41148:	2023883a 	mov	r17,r4
   4114c:	2821883a 	mov	r16,r5
   41150:	302b883a 	mov	r21,r6
   41154:	3825883a 	mov	r18,r7
   41158:	20000226 	beq	r4,zero,41164 <_fseeko_r+0x44>
   4115c:	20800e17 	ldw	r2,56(r4)
   41160:	10005a26 	beq	r2,zero,412cc <_fseeko_r+0x1ac>
   41164:	8080030b 	ldhu	r2,12(r16)
   41168:	00c04204 	movi	r3,264
   4116c:	1080420c 	andi	r2,r2,264
   41170:	10c05b26 	beq	r2,r3,412e0 <_fseeko_r+0x1c0>
   41174:	85000a17 	ldw	r20,40(r16)
   41178:	a000f626 	beq	r20,zero,41554 <_fseeko_r+0x434>
   4117c:	00800044 	movi	r2,1
   41180:	90803e26 	beq	r18,r2,4127c <_fseeko_r+0x15c>
   41184:	00800084 	movi	r2,2
   41188:	90801026 	beq	r18,r2,411cc <_fseeko_r+0xac>
   4118c:	90000f26 	beq	r18,zero,411cc <_fseeko_r+0xac>
   41190:	00800584 	movi	r2,22
   41194:	88800015 	stw	r2,0(r17)
   41198:	04ffffc4 	movi	r19,-1
   4119c:	9805883a 	mov	r2,r19
   411a0:	dfc01717 	ldw	ra,92(sp)
   411a4:	ddc01617 	ldw	r23,88(sp)
   411a8:	dd801517 	ldw	r22,84(sp)
   411ac:	dd401417 	ldw	r21,80(sp)
   411b0:	dd001317 	ldw	r20,76(sp)
   411b4:	dcc01217 	ldw	r19,72(sp)
   411b8:	dc801117 	ldw	r18,68(sp)
   411bc:	dc401017 	ldw	r17,64(sp)
   411c0:	dc000f17 	ldw	r16,60(sp)
   411c4:	dec01804 	addi	sp,sp,96
   411c8:	f800283a 	ret
   411cc:	80800417 	ldw	r2,16(r16)
   411d0:	002f883a 	mov	r23,zero
   411d4:	0027883a 	mov	r19,zero
   411d8:	1000cb26 	beq	r2,zero,41508 <_fseeko_r+0x3e8>
   411dc:	8080030b 	ldhu	r2,12(r16)
   411e0:	10c2068c 	andi	r3,r2,2074
   411e4:	1800071e 	bne	r3,zero,41204 <_fseeko_r+0xe4>
   411e8:	10c1000c 	andi	r3,r2,1024
   411ec:	1800451e 	bne	r3,zero,41304 <_fseeko_r+0x1e4>
   411f0:	00c00134 	movhi	r3,4
   411f4:	18ca0904 	addi	r3,r3,10276
   411f8:	a0c0b726 	beq	r20,r3,414d8 <_fseeko_r+0x3b8>
   411fc:	10820014 	ori	r2,r2,2048
   41200:	8080030d 	sth	r2,12(r16)
   41204:	800b883a 	mov	r5,r16
   41208:	8809883a 	mov	r4,r17
   4120c:	00407380 	call	40738 <_fflush_r>
   41210:	1027883a 	mov	r19,r2
   41214:	103fe01e 	bne	r2,zero,41198 <__alt_data_end+0xfffd5278>
   41218:	81400717 	ldw	r5,28(r16)
   4121c:	900f883a 	mov	r7,r18
   41220:	a80d883a 	mov	r6,r21
   41224:	8809883a 	mov	r4,r17
   41228:	a03ee83a 	callr	r20
   4122c:	00ffffc4 	movi	r3,-1
   41230:	10ffd926 	beq	r2,r3,41198 <__alt_data_end+0xfffd5278>
   41234:	81400c17 	ldw	r5,48(r16)
   41238:	28000526 	beq	r5,zero,41250 <_fseeko_r+0x130>
   4123c:	80801004 	addi	r2,r16,64
   41240:	28800226 	beq	r5,r2,4124c <_fseeko_r+0x12c>
   41244:	8809883a 	mov	r4,r17
   41248:	0040df00 	call	40df0 <_free_r>
   4124c:	80000c15 	stw	zero,48(r16)
   41250:	8080030b 	ldhu	r2,12(r16)
   41254:	80c00417 	ldw	r3,16(r16)
   41258:	80000115 	stw	zero,4(r16)
   4125c:	10bdf7cc 	andi	r2,r2,63455
   41260:	80c00015 	stw	r3,0(r16)
   41264:	8080030d 	sth	r2,12(r16)
   41268:	01800204 	movi	r6,8
   4126c:	000b883a 	mov	r5,zero
   41270:	81001704 	addi	r4,r16,92
   41274:	00422240 	call	42224 <memset>
   41278:	003fc806 	br	4119c <__alt_data_end+0xfffd527c>
   4127c:	800b883a 	mov	r5,r16
   41280:	8809883a 	mov	r4,r17
   41284:	00407380 	call	40738 <_fflush_r>
   41288:	8080030b 	ldhu	r2,12(r16)
   4128c:	10c4000c 	andi	r3,r2,4096
   41290:	18008726 	beq	r3,zero,414b0 <_fseeko_r+0x390>
   41294:	84c01417 	ldw	r19,80(r16)
   41298:	10c0010c 	andi	r3,r2,4
   4129c:	1800431e 	bne	r3,zero,413ac <_fseeko_r+0x28c>
   412a0:	1080020c 	andi	r2,r2,8
   412a4:	10008026 	beq	r2,zero,414a8 <_fseeko_r+0x388>
   412a8:	80c00017 	ldw	r3,0(r16)
   412ac:	80800417 	ldw	r2,16(r16)
   412b0:	18000226 	beq	r3,zero,412bc <_fseeko_r+0x19c>
   412b4:	1887c83a 	sub	r3,r3,r2
   412b8:	98e7883a 	add	r19,r19,r3
   412bc:	aceb883a 	add	r21,r21,r19
   412c0:	05c00044 	movi	r23,1
   412c4:	0025883a 	mov	r18,zero
   412c8:	003fc306 	br	411d8 <__alt_data_end+0xfffd52b8>
   412cc:	0040b240 	call	40b24 <__sinit>
   412d0:	8080030b 	ldhu	r2,12(r16)
   412d4:	00c04204 	movi	r3,264
   412d8:	1080420c 	andi	r2,r2,264
   412dc:	10ffa51e 	bne	r2,r3,41174 <__alt_data_end+0xfffd5254>
   412e0:	800b883a 	mov	r5,r16
   412e4:	8809883a 	mov	r4,r17
   412e8:	00407380 	call	40738 <_fflush_r>
   412ec:	003fa106 	br	41174 <__alt_data_end+0xfffd5254>
   412f0:	8080030b 	ldhu	r2,12(r16)
   412f4:	00c10004 	movi	r3,1024
   412f8:	80c01315 	stw	r3,76(r16)
   412fc:	10c4b03a 	or	r2,r2,r3
   41300:	8080030d 	sth	r2,12(r16)
   41304:	9000311e 	bne	r18,zero,413cc <_fseeko_r+0x2ac>
   41308:	a82d883a 	mov	r22,r21
   4130c:	b800371e 	bne	r23,zero,413ec <_fseeko_r+0x2cc>
   41310:	8080030b 	ldhu	r2,12(r16)
   41314:	1084000c 	andi	r2,r2,4096
   41318:	10007f26 	beq	r2,zero,41518 <_fseeko_r+0x3f8>
   4131c:	80801417 	ldw	r2,80(r16)
   41320:	81800117 	ldw	r6,4(r16)
   41324:	81400c17 	ldw	r5,48(r16)
   41328:	11a7c83a 	sub	r19,r2,r6
   4132c:	28008226 	beq	r5,zero,41538 <_fseeko_r+0x418>
   41330:	81c00f17 	ldw	r7,60(r16)
   41334:	99e7c83a 	sub	r19,r19,r7
   41338:	81000e17 	ldw	r4,56(r16)
   4133c:	80800417 	ldw	r2,16(r16)
   41340:	99a7883a 	add	r19,r19,r6
   41344:	2087c83a 	sub	r3,r4,r2
   41348:	98e7c83a 	sub	r19,r19,r3
   4134c:	38c7883a 	add	r3,r7,r3
   41350:	b4c02b16 	blt	r22,r19,41400 <_fseeko_r+0x2e0>
   41354:	98c9883a 	add	r4,r19,r3
   41358:	b100292e 	bgeu	r22,r4,41400 <_fseeko_r+0x2e0>
   4135c:	b4e7c83a 	sub	r19,r22,r19
   41360:	14c5883a 	add	r2,r2,r19
   41364:	1ce7c83a 	sub	r19,r3,r19
   41368:	80800015 	stw	r2,0(r16)
   4136c:	84c00115 	stw	r19,4(r16)
   41370:	28000526 	beq	r5,zero,41388 <_fseeko_r+0x268>
   41374:	80801004 	addi	r2,r16,64
   41378:	28800226 	beq	r5,r2,41384 <_fseeko_r+0x264>
   4137c:	8809883a 	mov	r4,r17
   41380:	0040df00 	call	40df0 <_free_r>
   41384:	80000c15 	stw	zero,48(r16)
   41388:	8080030b 	ldhu	r2,12(r16)
   4138c:	01800204 	movi	r6,8
   41390:	000b883a 	mov	r5,zero
   41394:	10bff7cc 	andi	r2,r2,65503
   41398:	8080030d 	sth	r2,12(r16)
   4139c:	81001704 	addi	r4,r16,92
   413a0:	00422240 	call	42224 <memset>
   413a4:	0027883a 	mov	r19,zero
   413a8:	003f7c06 	br	4119c <__alt_data_end+0xfffd527c>
   413ac:	80c00117 	ldw	r3,4(r16)
   413b0:	80800c17 	ldw	r2,48(r16)
   413b4:	98e7c83a 	sub	r19,r19,r3
   413b8:	10003b26 	beq	r2,zero,414a8 <_fseeko_r+0x388>
   413bc:	80c00f17 	ldw	r3,60(r16)
   413c0:	80800417 	ldw	r2,16(r16)
   413c4:	98e7c83a 	sub	r19,r19,r3
   413c8:	003fbc06 	br	412bc <__alt_data_end+0xfffd539c>
   413cc:	8140038f 	ldh	r5,14(r16)
   413d0:	d80d883a 	mov	r6,sp
   413d4:	8809883a 	mov	r4,r17
   413d8:	00415800 	call	41580 <_fstat_r>
   413dc:	103f891e 	bne	r2,zero,41204 <__alt_data_end+0xfffd52e4>
   413e0:	dd800417 	ldw	r22,16(sp)
   413e4:	adad883a 	add	r22,r21,r22
   413e8:	b83fc926 	beq	r23,zero,41310 <__alt_data_end+0xfffd53f0>
   413ec:	81400c17 	ldw	r5,48(r16)
   413f0:	81800117 	ldw	r6,4(r16)
   413f4:	28005026 	beq	r5,zero,41538 <_fseeko_r+0x418>
   413f8:	81c00f17 	ldw	r7,60(r16)
   413fc:	003fce06 	br	41338 <__alt_data_end+0xfffd5418>
   41400:	84c01317 	ldw	r19,76(r16)
   41404:	81400717 	ldw	r5,28(r16)
   41408:	000f883a 	mov	r7,zero
   4140c:	04e7c83a 	sub	r19,zero,r19
   41410:	9da6703a 	and	r19,r19,r22
   41414:	980d883a 	mov	r6,r19
   41418:	8809883a 	mov	r4,r17
   4141c:	a03ee83a 	callr	r20
   41420:	00ffffc4 	movi	r3,-1
   41424:	10ff7726 	beq	r2,r3,41204 <__alt_data_end+0xfffd52e4>
   41428:	80800417 	ldw	r2,16(r16)
   4142c:	81400c17 	ldw	r5,48(r16)
   41430:	80000115 	stw	zero,4(r16)
   41434:	80800015 	stw	r2,0(r16)
   41438:	28000526 	beq	r5,zero,41450 <_fseeko_r+0x330>
   4143c:	80801004 	addi	r2,r16,64
   41440:	28800226 	beq	r5,r2,4144c <_fseeko_r+0x32c>
   41444:	8809883a 	mov	r4,r17
   41448:	0040df00 	call	40df0 <_free_r>
   4144c:	80000c15 	stw	zero,48(r16)
   41450:	8080030b 	ldhu	r2,12(r16)
   41454:	b4e7c83a 	sub	r19,r22,r19
   41458:	10bff7cc 	andi	r2,r2,65503
   4145c:	8080030d 	sth	r2,12(r16)
   41460:	98000b26 	beq	r19,zero,41490 <_fseeko_r+0x370>
   41464:	800b883a 	mov	r5,r16
   41468:	8809883a 	mov	r4,r17
   4146c:	004249c0 	call	4249c <__srefill_r>
   41470:	103f641e 	bne	r2,zero,41204 <__alt_data_end+0xfffd52e4>
   41474:	80800117 	ldw	r2,4(r16)
   41478:	14ff6236 	bltu	r2,r19,41204 <__alt_data_end+0xfffd52e4>
   4147c:	80c00017 	ldw	r3,0(r16)
   41480:	14c5c83a 	sub	r2,r2,r19
   41484:	80800115 	stw	r2,4(r16)
   41488:	1ce7883a 	add	r19,r3,r19
   4148c:	84c00015 	stw	r19,0(r16)
   41490:	01800204 	movi	r6,8
   41494:	000b883a 	mov	r5,zero
   41498:	81001704 	addi	r4,r16,92
   4149c:	00422240 	call	42224 <memset>
   414a0:	0027883a 	mov	r19,zero
   414a4:	003f3d06 	br	4119c <__alt_data_end+0xfffd527c>
   414a8:	80800417 	ldw	r2,16(r16)
   414ac:	003f8306 	br	412bc <__alt_data_end+0xfffd539c>
   414b0:	81400717 	ldw	r5,28(r16)
   414b4:	900f883a 	mov	r7,r18
   414b8:	000d883a 	mov	r6,zero
   414bc:	8809883a 	mov	r4,r17
   414c0:	a03ee83a 	callr	r20
   414c4:	1027883a 	mov	r19,r2
   414c8:	00bfffc4 	movi	r2,-1
   414cc:	98bf3226 	beq	r19,r2,41198 <__alt_data_end+0xfffd5278>
   414d0:	8080030b 	ldhu	r2,12(r16)
   414d4:	003f7006 	br	41298 <__alt_data_end+0xfffd5378>
   414d8:	8140038f 	ldh	r5,14(r16)
   414dc:	283f4716 	blt	r5,zero,411fc <__alt_data_end+0xfffd52dc>
   414e0:	d80d883a 	mov	r6,sp
   414e4:	8809883a 	mov	r4,r17
   414e8:	00415800 	call	41580 <_fstat_r>
   414ec:	1000041e 	bne	r2,zero,41500 <_fseeko_r+0x3e0>
   414f0:	d8800117 	ldw	r2,4(sp)
   414f4:	00e00014 	movui	r3,32768
   414f8:	10bc000c 	andi	r2,r2,61440
   414fc:	10ff7c26 	beq	r2,r3,412f0 <__alt_data_end+0xfffd53d0>
   41500:	8080030b 	ldhu	r2,12(r16)
   41504:	003f3d06 	br	411fc <__alt_data_end+0xfffd52dc>
   41508:	800b883a 	mov	r5,r16
   4150c:	8809883a 	mov	r4,r17
   41510:	004185c0 	call	4185c <__smakebuf_r>
   41514:	003f3106 	br	411dc <__alt_data_end+0xfffd52bc>
   41518:	81400717 	ldw	r5,28(r16)
   4151c:	01c00044 	movi	r7,1
   41520:	000d883a 	mov	r6,zero
   41524:	8809883a 	mov	r4,r17
   41528:	a03ee83a 	callr	r20
   4152c:	00ffffc4 	movi	r3,-1
   41530:	10ff7b1e 	bne	r2,r3,41320 <__alt_data_end+0xfffd5400>
   41534:	003f3306 	br	41204 <__alt_data_end+0xfffd52e4>
   41538:	80c00017 	ldw	r3,0(r16)
   4153c:	80800417 	ldw	r2,16(r16)
   41540:	000b883a 	mov	r5,zero
   41544:	1887c83a 	sub	r3,r3,r2
   41548:	98e7c83a 	sub	r19,r19,r3
   4154c:	30c7883a 	add	r3,r6,r3
   41550:	003f7f06 	br	41350 <__alt_data_end+0xfffd5430>
   41554:	00800744 	movi	r2,29
   41558:	88800015 	stw	r2,0(r17)
   4155c:	04ffffc4 	movi	r19,-1
   41560:	003f0e06 	br	4119c <__alt_data_end+0xfffd527c>

00041564 <fseeko>:
   41564:	00800174 	movhi	r2,5
   41568:	10897204 	addi	r2,r2,9672
   4156c:	300f883a 	mov	r7,r6
   41570:	280d883a 	mov	r6,r5
   41574:	200b883a 	mov	r5,r4
   41578:	11000017 	ldw	r4,0(r2)
   4157c:	00411201 	jmpi	41120 <_fseeko_r>

00041580 <_fstat_r>:
   41580:	defffd04 	addi	sp,sp,-12
   41584:	2805883a 	mov	r2,r5
   41588:	dc000015 	stw	r16,0(sp)
   4158c:	04000174 	movhi	r16,5
   41590:	dc400115 	stw	r17,4(sp)
   41594:	84104704 	addi	r16,r16,16668
   41598:	2023883a 	mov	r17,r4
   4159c:	300b883a 	mov	r5,r6
   415a0:	1009883a 	mov	r4,r2
   415a4:	dfc00215 	stw	ra,8(sp)
   415a8:	80000015 	stw	zero,0(r16)
   415ac:	004debc0 	call	4debc <fstat>
   415b0:	00ffffc4 	movi	r3,-1
   415b4:	10c00526 	beq	r2,r3,415cc <_fstat_r+0x4c>
   415b8:	dfc00217 	ldw	ra,8(sp)
   415bc:	dc400117 	ldw	r17,4(sp)
   415c0:	dc000017 	ldw	r16,0(sp)
   415c4:	dec00304 	addi	sp,sp,12
   415c8:	f800283a 	ret
   415cc:	80c00017 	ldw	r3,0(r16)
   415d0:	183ff926 	beq	r3,zero,415b8 <__alt_data_end+0xfffd5698>
   415d4:	88c00015 	stw	r3,0(r17)
   415d8:	003ff706 	br	415b8 <__alt_data_end+0xfffd5698>

000415dc <_fwalk>:
   415dc:	defff704 	addi	sp,sp,-36
   415e0:	dd000415 	stw	r20,16(sp)
   415e4:	dfc00815 	stw	ra,32(sp)
   415e8:	ddc00715 	stw	r23,28(sp)
   415ec:	dd800615 	stw	r22,24(sp)
   415f0:	dd400515 	stw	r21,20(sp)
   415f4:	dcc00315 	stw	r19,12(sp)
   415f8:	dc800215 	stw	r18,8(sp)
   415fc:	dc400115 	stw	r17,4(sp)
   41600:	dc000015 	stw	r16,0(sp)
   41604:	2500b804 	addi	r20,r4,736
   41608:	a0002326 	beq	r20,zero,41698 <_fwalk+0xbc>
   4160c:	282b883a 	mov	r21,r5
   41610:	002f883a 	mov	r23,zero
   41614:	05800044 	movi	r22,1
   41618:	04ffffc4 	movi	r19,-1
   4161c:	a4400117 	ldw	r17,4(r20)
   41620:	a4800217 	ldw	r18,8(r20)
   41624:	8c7fffc4 	addi	r17,r17,-1
   41628:	88000d16 	blt	r17,zero,41660 <_fwalk+0x84>
   4162c:	94000304 	addi	r16,r18,12
   41630:	94800384 	addi	r18,r18,14
   41634:	8080000b 	ldhu	r2,0(r16)
   41638:	8c7fffc4 	addi	r17,r17,-1
   4163c:	813ffd04 	addi	r4,r16,-12
   41640:	b080042e 	bgeu	r22,r2,41654 <_fwalk+0x78>
   41644:	9080000f 	ldh	r2,0(r18)
   41648:	14c00226 	beq	r2,r19,41654 <_fwalk+0x78>
   4164c:	a83ee83a 	callr	r21
   41650:	b8aeb03a 	or	r23,r23,r2
   41654:	84001a04 	addi	r16,r16,104
   41658:	94801a04 	addi	r18,r18,104
   4165c:	8cfff51e 	bne	r17,r19,41634 <__alt_data_end+0xfffd5714>
   41660:	a5000017 	ldw	r20,0(r20)
   41664:	a03fed1e 	bne	r20,zero,4161c <__alt_data_end+0xfffd56fc>
   41668:	b805883a 	mov	r2,r23
   4166c:	dfc00817 	ldw	ra,32(sp)
   41670:	ddc00717 	ldw	r23,28(sp)
   41674:	dd800617 	ldw	r22,24(sp)
   41678:	dd400517 	ldw	r21,20(sp)
   4167c:	dd000417 	ldw	r20,16(sp)
   41680:	dcc00317 	ldw	r19,12(sp)
   41684:	dc800217 	ldw	r18,8(sp)
   41688:	dc400117 	ldw	r17,4(sp)
   4168c:	dc000017 	ldw	r16,0(sp)
   41690:	dec00904 	addi	sp,sp,36
   41694:	f800283a 	ret
   41698:	002f883a 	mov	r23,zero
   4169c:	003ff206 	br	41668 <__alt_data_end+0xfffd5748>

000416a0 <_fwalk_reent>:
   416a0:	defff704 	addi	sp,sp,-36
   416a4:	dd000415 	stw	r20,16(sp)
   416a8:	dfc00815 	stw	ra,32(sp)
   416ac:	ddc00715 	stw	r23,28(sp)
   416b0:	dd800615 	stw	r22,24(sp)
   416b4:	dd400515 	stw	r21,20(sp)
   416b8:	dcc00315 	stw	r19,12(sp)
   416bc:	dc800215 	stw	r18,8(sp)
   416c0:	dc400115 	stw	r17,4(sp)
   416c4:	dc000015 	stw	r16,0(sp)
   416c8:	2500b804 	addi	r20,r4,736
   416cc:	a0002326 	beq	r20,zero,4175c <_fwalk_reent+0xbc>
   416d0:	282b883a 	mov	r21,r5
   416d4:	2027883a 	mov	r19,r4
   416d8:	002f883a 	mov	r23,zero
   416dc:	05800044 	movi	r22,1
   416e0:	04bfffc4 	movi	r18,-1
   416e4:	a4400117 	ldw	r17,4(r20)
   416e8:	a4000217 	ldw	r16,8(r20)
   416ec:	8c7fffc4 	addi	r17,r17,-1
   416f0:	88000c16 	blt	r17,zero,41724 <_fwalk_reent+0x84>
   416f4:	84000304 	addi	r16,r16,12
   416f8:	8080000b 	ldhu	r2,0(r16)
   416fc:	8c7fffc4 	addi	r17,r17,-1
   41700:	817ffd04 	addi	r5,r16,-12
   41704:	b080052e 	bgeu	r22,r2,4171c <_fwalk_reent+0x7c>
   41708:	8080008f 	ldh	r2,2(r16)
   4170c:	9809883a 	mov	r4,r19
   41710:	14800226 	beq	r2,r18,4171c <_fwalk_reent+0x7c>
   41714:	a83ee83a 	callr	r21
   41718:	b8aeb03a 	or	r23,r23,r2
   4171c:	84001a04 	addi	r16,r16,104
   41720:	8cbff51e 	bne	r17,r18,416f8 <__alt_data_end+0xfffd57d8>
   41724:	a5000017 	ldw	r20,0(r20)
   41728:	a03fee1e 	bne	r20,zero,416e4 <__alt_data_end+0xfffd57c4>
   4172c:	b805883a 	mov	r2,r23
   41730:	dfc00817 	ldw	ra,32(sp)
   41734:	ddc00717 	ldw	r23,28(sp)
   41738:	dd800617 	ldw	r22,24(sp)
   4173c:	dd400517 	ldw	r21,20(sp)
   41740:	dd000417 	ldw	r20,16(sp)
   41744:	dcc00317 	ldw	r19,12(sp)
   41748:	dc800217 	ldw	r18,8(sp)
   4174c:	dc400117 	ldw	r17,4(sp)
   41750:	dc000017 	ldw	r16,0(sp)
   41754:	dec00904 	addi	sp,sp,36
   41758:	f800283a 	ret
   4175c:	002f883a 	mov	r23,zero
   41760:	003ff206 	br	4172c <__alt_data_end+0xfffd580c>

00041764 <_getc_r>:
   41764:	defffd04 	addi	sp,sp,-12
   41768:	dc000115 	stw	r16,4(sp)
   4176c:	dfc00215 	stw	ra,8(sp)
   41770:	2021883a 	mov	r16,r4
   41774:	20000226 	beq	r4,zero,41780 <_getc_r+0x1c>
   41778:	20800e17 	ldw	r2,56(r4)
   4177c:	10000c26 	beq	r2,zero,417b0 <_getc_r+0x4c>
   41780:	28800117 	ldw	r2,4(r5)
   41784:	10bfffc4 	addi	r2,r2,-1
   41788:	28800115 	stw	r2,4(r5)
   4178c:	10000c16 	blt	r2,zero,417c0 <_getc_r+0x5c>
   41790:	28800017 	ldw	r2,0(r5)
   41794:	10c00044 	addi	r3,r2,1
   41798:	28c00015 	stw	r3,0(r5)
   4179c:	10800003 	ldbu	r2,0(r2)
   417a0:	dfc00217 	ldw	ra,8(sp)
   417a4:	dc000117 	ldw	r16,4(sp)
   417a8:	dec00304 	addi	sp,sp,12
   417ac:	f800283a 	ret
   417b0:	d9400015 	stw	r5,0(sp)
   417b4:	0040b240 	call	40b24 <__sinit>
   417b8:	d9400017 	ldw	r5,0(sp)
   417bc:	003ff006 	br	41780 <__alt_data_end+0xfffd5860>
   417c0:	8009883a 	mov	r4,r16
   417c4:	dfc00217 	ldw	ra,8(sp)
   417c8:	dc000117 	ldw	r16,4(sp)
   417cc:	dec00304 	addi	sp,sp,12
   417d0:	00426701 	jmpi	42670 <__srget_r>

000417d4 <getc>:
   417d4:	00800174 	movhi	r2,5
   417d8:	defffd04 	addi	sp,sp,-12
   417dc:	10897204 	addi	r2,r2,9672
   417e0:	dc400115 	stw	r17,4(sp)
   417e4:	14400017 	ldw	r17,0(r2)
   417e8:	dc000015 	stw	r16,0(sp)
   417ec:	dfc00215 	stw	ra,8(sp)
   417f0:	2021883a 	mov	r16,r4
   417f4:	88000226 	beq	r17,zero,41800 <getc+0x2c>
   417f8:	88800e17 	ldw	r2,56(r17)
   417fc:	10000d26 	beq	r2,zero,41834 <getc+0x60>
   41800:	80800117 	ldw	r2,4(r16)
   41804:	10bfffc4 	addi	r2,r2,-1
   41808:	80800115 	stw	r2,4(r16)
   4180c:	10000c16 	blt	r2,zero,41840 <getc+0x6c>
   41810:	80800017 	ldw	r2,0(r16)
   41814:	10c00044 	addi	r3,r2,1
   41818:	80c00015 	stw	r3,0(r16)
   4181c:	10800003 	ldbu	r2,0(r2)
   41820:	dfc00217 	ldw	ra,8(sp)
   41824:	dc400117 	ldw	r17,4(sp)
   41828:	dc000017 	ldw	r16,0(sp)
   4182c:	dec00304 	addi	sp,sp,12
   41830:	f800283a 	ret
   41834:	8809883a 	mov	r4,r17
   41838:	0040b240 	call	40b24 <__sinit>
   4183c:	003ff006 	br	41800 <__alt_data_end+0xfffd58e0>
   41840:	800b883a 	mov	r5,r16
   41844:	8809883a 	mov	r4,r17
   41848:	dfc00217 	ldw	ra,8(sp)
   4184c:	dc400117 	ldw	r17,4(sp)
   41850:	dc000017 	ldw	r16,0(sp)
   41854:	dec00304 	addi	sp,sp,12
   41858:	00426701 	jmpi	42670 <__srget_r>

0004185c <__smakebuf_r>:
   4185c:	2880030b 	ldhu	r2,12(r5)
   41860:	10c0008c 	andi	r3,r2,2
   41864:	1800411e 	bne	r3,zero,4196c <__smakebuf_r+0x110>
   41868:	deffec04 	addi	sp,sp,-80
   4186c:	dc000f15 	stw	r16,60(sp)
   41870:	2821883a 	mov	r16,r5
   41874:	2940038f 	ldh	r5,14(r5)
   41878:	dc401015 	stw	r17,64(sp)
   4187c:	dfc01315 	stw	ra,76(sp)
   41880:	dcc01215 	stw	r19,72(sp)
   41884:	dc801115 	stw	r18,68(sp)
   41888:	2023883a 	mov	r17,r4
   4188c:	28001c16 	blt	r5,zero,41900 <__smakebuf_r+0xa4>
   41890:	d80d883a 	mov	r6,sp
   41894:	00415800 	call	41580 <_fstat_r>
   41898:	10001816 	blt	r2,zero,418fc <__smakebuf_r+0xa0>
   4189c:	d8800117 	ldw	r2,4(sp)
   418a0:	00e00014 	movui	r3,32768
   418a4:	10bc000c 	andi	r2,r2,61440
   418a8:	14c80020 	cmpeqi	r19,r2,8192
   418ac:	10c03726 	beq	r2,r3,4198c <__smakebuf_r+0x130>
   418b0:	80c0030b 	ldhu	r3,12(r16)
   418b4:	18c20014 	ori	r3,r3,2048
   418b8:	80c0030d 	sth	r3,12(r16)
   418bc:	00c80004 	movi	r3,8192
   418c0:	10c0521e 	bne	r2,r3,41a0c <__smakebuf_r+0x1b0>
   418c4:	8140038f 	ldh	r5,14(r16)
   418c8:	8809883a 	mov	r4,r17
   418cc:	0046d000 	call	46d00 <_isatty_r>
   418d0:	10004c26 	beq	r2,zero,41a04 <__smakebuf_r+0x1a8>
   418d4:	8080030b 	ldhu	r2,12(r16)
   418d8:	80c010c4 	addi	r3,r16,67
   418dc:	80c00015 	stw	r3,0(r16)
   418e0:	10800054 	ori	r2,r2,1
   418e4:	8080030d 	sth	r2,12(r16)
   418e8:	00800044 	movi	r2,1
   418ec:	80c00415 	stw	r3,16(r16)
   418f0:	80800515 	stw	r2,20(r16)
   418f4:	04810004 	movi	r18,1024
   418f8:	00000706 	br	41918 <__smakebuf_r+0xbc>
   418fc:	8080030b 	ldhu	r2,12(r16)
   41900:	10c0200c 	andi	r3,r2,128
   41904:	18001f1e 	bne	r3,zero,41984 <__smakebuf_r+0x128>
   41908:	04810004 	movi	r18,1024
   4190c:	10820014 	ori	r2,r2,2048
   41910:	8080030d 	sth	r2,12(r16)
   41914:	0027883a 	mov	r19,zero
   41918:	900b883a 	mov	r5,r18
   4191c:	8809883a 	mov	r4,r17
   41920:	0041a180 	call	41a18 <_malloc_r>
   41924:	10002c26 	beq	r2,zero,419d8 <__smakebuf_r+0x17c>
   41928:	80c0030b 	ldhu	r3,12(r16)
   4192c:	01000134 	movhi	r4,4
   41930:	2101f304 	addi	r4,r4,1996
   41934:	89000f15 	stw	r4,60(r17)
   41938:	18c02014 	ori	r3,r3,128
   4193c:	80c0030d 	sth	r3,12(r16)
   41940:	80800015 	stw	r2,0(r16)
   41944:	80800415 	stw	r2,16(r16)
   41948:	84800515 	stw	r18,20(r16)
   4194c:	98001a1e 	bne	r19,zero,419b8 <__smakebuf_r+0x15c>
   41950:	dfc01317 	ldw	ra,76(sp)
   41954:	dcc01217 	ldw	r19,72(sp)
   41958:	dc801117 	ldw	r18,68(sp)
   4195c:	dc401017 	ldw	r17,64(sp)
   41960:	dc000f17 	ldw	r16,60(sp)
   41964:	dec01404 	addi	sp,sp,80
   41968:	f800283a 	ret
   4196c:	288010c4 	addi	r2,r5,67
   41970:	28800015 	stw	r2,0(r5)
   41974:	28800415 	stw	r2,16(r5)
   41978:	00800044 	movi	r2,1
   4197c:	28800515 	stw	r2,20(r5)
   41980:	f800283a 	ret
   41984:	04801004 	movi	r18,64
   41988:	003fe006 	br	4190c <__alt_data_end+0xfffd59ec>
   4198c:	81000a17 	ldw	r4,40(r16)
   41990:	00c00134 	movhi	r3,4
   41994:	18ca0904 	addi	r3,r3,10276
   41998:	20ffc51e 	bne	r4,r3,418b0 <__alt_data_end+0xfffd5990>
   4199c:	8080030b 	ldhu	r2,12(r16)
   419a0:	04810004 	movi	r18,1024
   419a4:	84801315 	stw	r18,76(r16)
   419a8:	1484b03a 	or	r2,r2,r18
   419ac:	8080030d 	sth	r2,12(r16)
   419b0:	0027883a 	mov	r19,zero
   419b4:	003fd806 	br	41918 <__alt_data_end+0xfffd59f8>
   419b8:	8140038f 	ldh	r5,14(r16)
   419bc:	8809883a 	mov	r4,r17
   419c0:	0046d000 	call	46d00 <_isatty_r>
   419c4:	103fe226 	beq	r2,zero,41950 <__alt_data_end+0xfffd5a30>
   419c8:	8080030b 	ldhu	r2,12(r16)
   419cc:	10800054 	ori	r2,r2,1
   419d0:	8080030d 	sth	r2,12(r16)
   419d4:	003fde06 	br	41950 <__alt_data_end+0xfffd5a30>
   419d8:	8080030b 	ldhu	r2,12(r16)
   419dc:	10c0800c 	andi	r3,r2,512
   419e0:	183fdb1e 	bne	r3,zero,41950 <__alt_data_end+0xfffd5a30>
   419e4:	10800094 	ori	r2,r2,2
   419e8:	80c010c4 	addi	r3,r16,67
   419ec:	8080030d 	sth	r2,12(r16)
   419f0:	00800044 	movi	r2,1
   419f4:	80c00015 	stw	r3,0(r16)
   419f8:	80c00415 	stw	r3,16(r16)
   419fc:	80800515 	stw	r2,20(r16)
   41a00:	003fd306 	br	41950 <__alt_data_end+0xfffd5a30>
   41a04:	04810004 	movi	r18,1024
   41a08:	003fc306 	br	41918 <__alt_data_end+0xfffd59f8>
   41a0c:	0027883a 	mov	r19,zero
   41a10:	04810004 	movi	r18,1024
   41a14:	003fc006 	br	41918 <__alt_data_end+0xfffd59f8>

00041a18 <_malloc_r>:
   41a18:	defff504 	addi	sp,sp,-44
   41a1c:	dc800315 	stw	r18,12(sp)
   41a20:	dfc00a15 	stw	ra,40(sp)
   41a24:	df000915 	stw	fp,36(sp)
   41a28:	ddc00815 	stw	r23,32(sp)
   41a2c:	dd800715 	stw	r22,28(sp)
   41a30:	dd400615 	stw	r21,24(sp)
   41a34:	dd000515 	stw	r20,20(sp)
   41a38:	dcc00415 	stw	r19,16(sp)
   41a3c:	dc400215 	stw	r17,8(sp)
   41a40:	dc000115 	stw	r16,4(sp)
   41a44:	288002c4 	addi	r2,r5,11
   41a48:	00c00584 	movi	r3,22
   41a4c:	2025883a 	mov	r18,r4
   41a50:	18807f2e 	bgeu	r3,r2,41c50 <_malloc_r+0x238>
   41a54:	047ffe04 	movi	r17,-8
   41a58:	1462703a 	and	r17,r2,r17
   41a5c:	8800a316 	blt	r17,zero,41cec <_malloc_r+0x2d4>
   41a60:	8940a236 	bltu	r17,r5,41cec <_malloc_r+0x2d4>
   41a64:	004e2dc0 	call	4e2dc <__malloc_lock>
   41a68:	00807dc4 	movi	r2,503
   41a6c:	1441e92e 	bgeu	r2,r17,42214 <_malloc_r+0x7fc>
   41a70:	8804d27a 	srli	r2,r17,9
   41a74:	1000a126 	beq	r2,zero,41cfc <_malloc_r+0x2e4>
   41a78:	00c00104 	movi	r3,4
   41a7c:	18811e36 	bltu	r3,r2,41ef8 <_malloc_r+0x4e0>
   41a80:	8804d1ba 	srli	r2,r17,6
   41a84:	12000e44 	addi	r8,r2,57
   41a88:	11c00e04 	addi	r7,r2,56
   41a8c:	4209883a 	add	r4,r8,r8
   41a90:	04c00174 	movhi	r19,5
   41a94:	2109883a 	add	r4,r4,r4
   41a98:	9cc3c404 	addi	r19,r19,3856
   41a9c:	2109883a 	add	r4,r4,r4
   41aa0:	9909883a 	add	r4,r19,r4
   41aa4:	24000117 	ldw	r16,4(r4)
   41aa8:	213ffe04 	addi	r4,r4,-8
   41aac:	24009726 	beq	r4,r16,41d0c <_malloc_r+0x2f4>
   41ab0:	80800117 	ldw	r2,4(r16)
   41ab4:	01bfff04 	movi	r6,-4
   41ab8:	014003c4 	movi	r5,15
   41abc:	1184703a 	and	r2,r2,r6
   41ac0:	1447c83a 	sub	r3,r2,r17
   41ac4:	28c00716 	blt	r5,r3,41ae4 <_malloc_r+0xcc>
   41ac8:	1800920e 	bge	r3,zero,41d14 <_malloc_r+0x2fc>
   41acc:	84000317 	ldw	r16,12(r16)
   41ad0:	24008e26 	beq	r4,r16,41d0c <_malloc_r+0x2f4>
   41ad4:	80800117 	ldw	r2,4(r16)
   41ad8:	1184703a 	and	r2,r2,r6
   41adc:	1447c83a 	sub	r3,r2,r17
   41ae0:	28fff90e 	bge	r5,r3,41ac8 <__alt_data_end+0xfffd5ba8>
   41ae4:	3809883a 	mov	r4,r7
   41ae8:	01800174 	movhi	r6,5
   41aec:	9c000417 	ldw	r16,16(r19)
   41af0:	3183c404 	addi	r6,r6,3856
   41af4:	32000204 	addi	r8,r6,8
   41af8:	82013426 	beq	r16,r8,41fcc <_malloc_r+0x5b4>
   41afc:	80c00117 	ldw	r3,4(r16)
   41b00:	00bfff04 	movi	r2,-4
   41b04:	188e703a 	and	r7,r3,r2
   41b08:	3c45c83a 	sub	r2,r7,r17
   41b0c:	00c003c4 	movi	r3,15
   41b10:	18811f16 	blt	r3,r2,41f90 <_malloc_r+0x578>
   41b14:	32000515 	stw	r8,20(r6)
   41b18:	32000415 	stw	r8,16(r6)
   41b1c:	10007f0e 	bge	r2,zero,41d1c <_malloc_r+0x304>
   41b20:	00807fc4 	movi	r2,511
   41b24:	11c0fd36 	bltu	r2,r7,41f1c <_malloc_r+0x504>
   41b28:	3806d0fa 	srli	r3,r7,3
   41b2c:	01c00044 	movi	r7,1
   41b30:	30800117 	ldw	r2,4(r6)
   41b34:	19400044 	addi	r5,r3,1
   41b38:	294b883a 	add	r5,r5,r5
   41b3c:	1807d0ba 	srai	r3,r3,2
   41b40:	294b883a 	add	r5,r5,r5
   41b44:	294b883a 	add	r5,r5,r5
   41b48:	298b883a 	add	r5,r5,r6
   41b4c:	38c6983a 	sll	r3,r7,r3
   41b50:	29c00017 	ldw	r7,0(r5)
   41b54:	2a7ffe04 	addi	r9,r5,-8
   41b58:	1886b03a 	or	r3,r3,r2
   41b5c:	82400315 	stw	r9,12(r16)
   41b60:	81c00215 	stw	r7,8(r16)
   41b64:	30c00115 	stw	r3,4(r6)
   41b68:	2c000015 	stw	r16,0(r5)
   41b6c:	3c000315 	stw	r16,12(r7)
   41b70:	2005d0ba 	srai	r2,r4,2
   41b74:	01400044 	movi	r5,1
   41b78:	288a983a 	sll	r5,r5,r2
   41b7c:	19406f36 	bltu	r3,r5,41d3c <_malloc_r+0x324>
   41b80:	28c4703a 	and	r2,r5,r3
   41b84:	10000a1e 	bne	r2,zero,41bb0 <_malloc_r+0x198>
   41b88:	00bfff04 	movi	r2,-4
   41b8c:	294b883a 	add	r5,r5,r5
   41b90:	2088703a 	and	r4,r4,r2
   41b94:	28c4703a 	and	r2,r5,r3
   41b98:	21000104 	addi	r4,r4,4
   41b9c:	1000041e 	bne	r2,zero,41bb0 <_malloc_r+0x198>
   41ba0:	294b883a 	add	r5,r5,r5
   41ba4:	28c4703a 	and	r2,r5,r3
   41ba8:	21000104 	addi	r4,r4,4
   41bac:	103ffc26 	beq	r2,zero,41ba0 <__alt_data_end+0xfffd5c80>
   41bb0:	02bfff04 	movi	r10,-4
   41bb4:	024003c4 	movi	r9,15
   41bb8:	21800044 	addi	r6,r4,1
   41bbc:	318d883a 	add	r6,r6,r6
   41bc0:	318d883a 	add	r6,r6,r6
   41bc4:	318d883a 	add	r6,r6,r6
   41bc8:	998d883a 	add	r6,r19,r6
   41bcc:	333ffe04 	addi	r12,r6,-8
   41bd0:	2017883a 	mov	r11,r4
   41bd4:	31800104 	addi	r6,r6,4
   41bd8:	34000017 	ldw	r16,0(r6)
   41bdc:	31fffd04 	addi	r7,r6,-12
   41be0:	81c0041e 	bne	r16,r7,41bf4 <_malloc_r+0x1dc>
   41be4:	0000fb06 	br	41fd4 <_malloc_r+0x5bc>
   41be8:	1801030e 	bge	r3,zero,41ff8 <_malloc_r+0x5e0>
   41bec:	84000317 	ldw	r16,12(r16)
   41bf0:	81c0f826 	beq	r16,r7,41fd4 <_malloc_r+0x5bc>
   41bf4:	80800117 	ldw	r2,4(r16)
   41bf8:	1284703a 	and	r2,r2,r10
   41bfc:	1447c83a 	sub	r3,r2,r17
   41c00:	48fff90e 	bge	r9,r3,41be8 <__alt_data_end+0xfffd5cc8>
   41c04:	80800317 	ldw	r2,12(r16)
   41c08:	81000217 	ldw	r4,8(r16)
   41c0c:	89400054 	ori	r5,r17,1
   41c10:	81400115 	stw	r5,4(r16)
   41c14:	20800315 	stw	r2,12(r4)
   41c18:	11000215 	stw	r4,8(r2)
   41c1c:	8463883a 	add	r17,r16,r17
   41c20:	9c400515 	stw	r17,20(r19)
   41c24:	9c400415 	stw	r17,16(r19)
   41c28:	18800054 	ori	r2,r3,1
   41c2c:	88800115 	stw	r2,4(r17)
   41c30:	8a000315 	stw	r8,12(r17)
   41c34:	8a000215 	stw	r8,8(r17)
   41c38:	88e3883a 	add	r17,r17,r3
   41c3c:	88c00015 	stw	r3,0(r17)
   41c40:	9009883a 	mov	r4,r18
   41c44:	004e3000 	call	4e300 <__malloc_unlock>
   41c48:	80800204 	addi	r2,r16,8
   41c4c:	00001b06 	br	41cbc <_malloc_r+0x2a4>
   41c50:	04400404 	movi	r17,16
   41c54:	89402536 	bltu	r17,r5,41cec <_malloc_r+0x2d4>
   41c58:	004e2dc0 	call	4e2dc <__malloc_lock>
   41c5c:	00800184 	movi	r2,6
   41c60:	01000084 	movi	r4,2
   41c64:	04c00174 	movhi	r19,5
   41c68:	1085883a 	add	r2,r2,r2
   41c6c:	9cc3c404 	addi	r19,r19,3856
   41c70:	1085883a 	add	r2,r2,r2
   41c74:	9885883a 	add	r2,r19,r2
   41c78:	14000117 	ldw	r16,4(r2)
   41c7c:	10fffe04 	addi	r3,r2,-8
   41c80:	80c0d926 	beq	r16,r3,41fe8 <_malloc_r+0x5d0>
   41c84:	80c00117 	ldw	r3,4(r16)
   41c88:	81000317 	ldw	r4,12(r16)
   41c8c:	00bfff04 	movi	r2,-4
   41c90:	1884703a 	and	r2,r3,r2
   41c94:	81400217 	ldw	r5,8(r16)
   41c98:	8085883a 	add	r2,r16,r2
   41c9c:	10c00117 	ldw	r3,4(r2)
   41ca0:	29000315 	stw	r4,12(r5)
   41ca4:	21400215 	stw	r5,8(r4)
   41ca8:	18c00054 	ori	r3,r3,1
   41cac:	10c00115 	stw	r3,4(r2)
   41cb0:	9009883a 	mov	r4,r18
   41cb4:	004e3000 	call	4e300 <__malloc_unlock>
   41cb8:	80800204 	addi	r2,r16,8
   41cbc:	dfc00a17 	ldw	ra,40(sp)
   41cc0:	df000917 	ldw	fp,36(sp)
   41cc4:	ddc00817 	ldw	r23,32(sp)
   41cc8:	dd800717 	ldw	r22,28(sp)
   41ccc:	dd400617 	ldw	r21,24(sp)
   41cd0:	dd000517 	ldw	r20,20(sp)
   41cd4:	dcc00417 	ldw	r19,16(sp)
   41cd8:	dc800317 	ldw	r18,12(sp)
   41cdc:	dc400217 	ldw	r17,8(sp)
   41ce0:	dc000117 	ldw	r16,4(sp)
   41ce4:	dec00b04 	addi	sp,sp,44
   41ce8:	f800283a 	ret
   41cec:	00800304 	movi	r2,12
   41cf0:	90800015 	stw	r2,0(r18)
   41cf4:	0005883a 	mov	r2,zero
   41cf8:	003ff006 	br	41cbc <__alt_data_end+0xfffd5d9c>
   41cfc:	01002004 	movi	r4,128
   41d00:	02001004 	movi	r8,64
   41d04:	01c00fc4 	movi	r7,63
   41d08:	003f6106 	br	41a90 <__alt_data_end+0xfffd5b70>
   41d0c:	4009883a 	mov	r4,r8
   41d10:	003f7506 	br	41ae8 <__alt_data_end+0xfffd5bc8>
   41d14:	81000317 	ldw	r4,12(r16)
   41d18:	003fde06 	br	41c94 <__alt_data_end+0xfffd5d74>
   41d1c:	81c5883a 	add	r2,r16,r7
   41d20:	11400117 	ldw	r5,4(r2)
   41d24:	9009883a 	mov	r4,r18
   41d28:	29400054 	ori	r5,r5,1
   41d2c:	11400115 	stw	r5,4(r2)
   41d30:	004e3000 	call	4e300 <__malloc_unlock>
   41d34:	80800204 	addi	r2,r16,8
   41d38:	003fe006 	br	41cbc <__alt_data_end+0xfffd5d9c>
   41d3c:	9c000217 	ldw	r16,8(r19)
   41d40:	00bfff04 	movi	r2,-4
   41d44:	85800117 	ldw	r22,4(r16)
   41d48:	b0ac703a 	and	r22,r22,r2
   41d4c:	b4400336 	bltu	r22,r17,41d5c <_malloc_r+0x344>
   41d50:	b445c83a 	sub	r2,r22,r17
   41d54:	00c003c4 	movi	r3,15
   41d58:	18805d16 	blt	r3,r2,41ed0 <_malloc_r+0x4b8>
   41d5c:	05c00174 	movhi	r23,5
   41d60:	00800174 	movhi	r2,5
   41d64:	10904a04 	addi	r2,r2,16680
   41d68:	bdc97304 	addi	r23,r23,9676
   41d6c:	15400017 	ldw	r21,0(r2)
   41d70:	b8c00017 	ldw	r3,0(r23)
   41d74:	00bfffc4 	movi	r2,-1
   41d78:	858d883a 	add	r6,r16,r22
   41d7c:	8d6b883a 	add	r21,r17,r21
   41d80:	1880ea26 	beq	r3,r2,4212c <_malloc_r+0x714>
   41d84:	ad4403c4 	addi	r21,r21,4111
   41d88:	00bc0004 	movi	r2,-4096
   41d8c:	a8aa703a 	and	r21,r21,r2
   41d90:	a80b883a 	mov	r5,r21
   41d94:	9009883a 	mov	r4,r18
   41d98:	d9800015 	stw	r6,0(sp)
   41d9c:	00426f80 	call	426f8 <_sbrk_r>
   41da0:	1029883a 	mov	r20,r2
   41da4:	00bfffc4 	movi	r2,-1
   41da8:	d9800017 	ldw	r6,0(sp)
   41dac:	a080e826 	beq	r20,r2,42150 <_malloc_r+0x738>
   41db0:	a180a636 	bltu	r20,r6,4204c <_malloc_r+0x634>
   41db4:	07000174 	movhi	fp,5
   41db8:	e7105504 	addi	fp,fp,16724
   41dbc:	e0800017 	ldw	r2,0(fp)
   41dc0:	a887883a 	add	r3,r21,r2
   41dc4:	e0c00015 	stw	r3,0(fp)
   41dc8:	3500e626 	beq	r6,r20,42164 <_malloc_r+0x74c>
   41dcc:	b9000017 	ldw	r4,0(r23)
   41dd0:	00bfffc4 	movi	r2,-1
   41dd4:	2080ee26 	beq	r4,r2,42190 <_malloc_r+0x778>
   41dd8:	a185c83a 	sub	r2,r20,r6
   41ddc:	10c5883a 	add	r2,r2,r3
   41de0:	e0800015 	stw	r2,0(fp)
   41de4:	a0c001cc 	andi	r3,r20,7
   41de8:	1800bc26 	beq	r3,zero,420dc <_malloc_r+0x6c4>
   41dec:	a0e9c83a 	sub	r20,r20,r3
   41df0:	00840204 	movi	r2,4104
   41df4:	a5000204 	addi	r20,r20,8
   41df8:	10c7c83a 	sub	r3,r2,r3
   41dfc:	a545883a 	add	r2,r20,r21
   41e00:	1083ffcc 	andi	r2,r2,4095
   41e04:	18abc83a 	sub	r21,r3,r2
   41e08:	a80b883a 	mov	r5,r21
   41e0c:	9009883a 	mov	r4,r18
   41e10:	00426f80 	call	426f8 <_sbrk_r>
   41e14:	00ffffc4 	movi	r3,-1
   41e18:	10c0e126 	beq	r2,r3,421a0 <_malloc_r+0x788>
   41e1c:	1505c83a 	sub	r2,r2,r20
   41e20:	1545883a 	add	r2,r2,r21
   41e24:	10800054 	ori	r2,r2,1
   41e28:	e0c00017 	ldw	r3,0(fp)
   41e2c:	9d000215 	stw	r20,8(r19)
   41e30:	a0800115 	stw	r2,4(r20)
   41e34:	a8c7883a 	add	r3,r21,r3
   41e38:	e0c00015 	stw	r3,0(fp)
   41e3c:	84c00e26 	beq	r16,r19,41e78 <_malloc_r+0x460>
   41e40:	018003c4 	movi	r6,15
   41e44:	3580a72e 	bgeu	r6,r22,420e4 <_malloc_r+0x6cc>
   41e48:	81400117 	ldw	r5,4(r16)
   41e4c:	013ffe04 	movi	r4,-8
   41e50:	b0bffd04 	addi	r2,r22,-12
   41e54:	1104703a 	and	r2,r2,r4
   41e58:	2900004c 	andi	r4,r5,1
   41e5c:	2088b03a 	or	r4,r4,r2
   41e60:	81000115 	stw	r4,4(r16)
   41e64:	01400144 	movi	r5,5
   41e68:	8089883a 	add	r4,r16,r2
   41e6c:	21400115 	stw	r5,4(r4)
   41e70:	21400215 	stw	r5,8(r4)
   41e74:	3080cd36 	bltu	r6,r2,421ac <_malloc_r+0x794>
   41e78:	00800174 	movhi	r2,5
   41e7c:	10904904 	addi	r2,r2,16676
   41e80:	11000017 	ldw	r4,0(r2)
   41e84:	20c0012e 	bgeu	r4,r3,41e8c <_malloc_r+0x474>
   41e88:	10c00015 	stw	r3,0(r2)
   41e8c:	00800174 	movhi	r2,5
   41e90:	10904804 	addi	r2,r2,16672
   41e94:	11000017 	ldw	r4,0(r2)
   41e98:	9c000217 	ldw	r16,8(r19)
   41e9c:	20c0012e 	bgeu	r4,r3,41ea4 <_malloc_r+0x48c>
   41ea0:	10c00015 	stw	r3,0(r2)
   41ea4:	80c00117 	ldw	r3,4(r16)
   41ea8:	00bfff04 	movi	r2,-4
   41eac:	1886703a 	and	r3,r3,r2
   41eb0:	1c45c83a 	sub	r2,r3,r17
   41eb4:	1c400236 	bltu	r3,r17,41ec0 <_malloc_r+0x4a8>
   41eb8:	00c003c4 	movi	r3,15
   41ebc:	18800416 	blt	r3,r2,41ed0 <_malloc_r+0x4b8>
   41ec0:	9009883a 	mov	r4,r18
   41ec4:	004e3000 	call	4e300 <__malloc_unlock>
   41ec8:	0005883a 	mov	r2,zero
   41ecc:	003f7b06 	br	41cbc <__alt_data_end+0xfffd5d9c>
   41ed0:	88c00054 	ori	r3,r17,1
   41ed4:	80c00115 	stw	r3,4(r16)
   41ed8:	8463883a 	add	r17,r16,r17
   41edc:	10800054 	ori	r2,r2,1
   41ee0:	9c400215 	stw	r17,8(r19)
   41ee4:	88800115 	stw	r2,4(r17)
   41ee8:	9009883a 	mov	r4,r18
   41eec:	004e3000 	call	4e300 <__malloc_unlock>
   41ef0:	80800204 	addi	r2,r16,8
   41ef4:	003f7106 	br	41cbc <__alt_data_end+0xfffd5d9c>
   41ef8:	00c00504 	movi	r3,20
   41efc:	18804a2e 	bgeu	r3,r2,42028 <_malloc_r+0x610>
   41f00:	00c01504 	movi	r3,84
   41f04:	18806e36 	bltu	r3,r2,420c0 <_malloc_r+0x6a8>
   41f08:	8804d33a 	srli	r2,r17,12
   41f0c:	12001bc4 	addi	r8,r2,111
   41f10:	11c01b84 	addi	r7,r2,110
   41f14:	4209883a 	add	r4,r8,r8
   41f18:	003edd06 	br	41a90 <__alt_data_end+0xfffd5b70>
   41f1c:	3804d27a 	srli	r2,r7,9
   41f20:	00c00104 	movi	r3,4
   41f24:	1880442e 	bgeu	r3,r2,42038 <_malloc_r+0x620>
   41f28:	00c00504 	movi	r3,20
   41f2c:	18808136 	bltu	r3,r2,42134 <_malloc_r+0x71c>
   41f30:	11401704 	addi	r5,r2,92
   41f34:	10c016c4 	addi	r3,r2,91
   41f38:	294b883a 	add	r5,r5,r5
   41f3c:	294b883a 	add	r5,r5,r5
   41f40:	294b883a 	add	r5,r5,r5
   41f44:	994b883a 	add	r5,r19,r5
   41f48:	28800017 	ldw	r2,0(r5)
   41f4c:	01800174 	movhi	r6,5
   41f50:	297ffe04 	addi	r5,r5,-8
   41f54:	3183c404 	addi	r6,r6,3856
   41f58:	28806526 	beq	r5,r2,420f0 <_malloc_r+0x6d8>
   41f5c:	01bfff04 	movi	r6,-4
   41f60:	10c00117 	ldw	r3,4(r2)
   41f64:	1986703a 	and	r3,r3,r6
   41f68:	38c0022e 	bgeu	r7,r3,41f74 <_malloc_r+0x55c>
   41f6c:	10800217 	ldw	r2,8(r2)
   41f70:	28bffb1e 	bne	r5,r2,41f60 <__alt_data_end+0xfffd6040>
   41f74:	11400317 	ldw	r5,12(r2)
   41f78:	98c00117 	ldw	r3,4(r19)
   41f7c:	81400315 	stw	r5,12(r16)
   41f80:	80800215 	stw	r2,8(r16)
   41f84:	2c000215 	stw	r16,8(r5)
   41f88:	14000315 	stw	r16,12(r2)
   41f8c:	003ef806 	br	41b70 <__alt_data_end+0xfffd5c50>
   41f90:	88c00054 	ori	r3,r17,1
   41f94:	80c00115 	stw	r3,4(r16)
   41f98:	8463883a 	add	r17,r16,r17
   41f9c:	34400515 	stw	r17,20(r6)
   41fa0:	34400415 	stw	r17,16(r6)
   41fa4:	10c00054 	ori	r3,r2,1
   41fa8:	8a000315 	stw	r8,12(r17)
   41fac:	8a000215 	stw	r8,8(r17)
   41fb0:	88c00115 	stw	r3,4(r17)
   41fb4:	88a3883a 	add	r17,r17,r2
   41fb8:	88800015 	stw	r2,0(r17)
   41fbc:	9009883a 	mov	r4,r18
   41fc0:	004e3000 	call	4e300 <__malloc_unlock>
   41fc4:	80800204 	addi	r2,r16,8
   41fc8:	003f3c06 	br	41cbc <__alt_data_end+0xfffd5d9c>
   41fcc:	30c00117 	ldw	r3,4(r6)
   41fd0:	003ee706 	br	41b70 <__alt_data_end+0xfffd5c50>
   41fd4:	5ac00044 	addi	r11,r11,1
   41fd8:	588000cc 	andi	r2,r11,3
   41fdc:	31800204 	addi	r6,r6,8
   41fe0:	103efd1e 	bne	r2,zero,41bd8 <__alt_data_end+0xfffd5cb8>
   41fe4:	00002406 	br	42078 <_malloc_r+0x660>
   41fe8:	14000317 	ldw	r16,12(r2)
   41fec:	143f251e 	bne	r2,r16,41c84 <__alt_data_end+0xfffd5d64>
   41ff0:	21000084 	addi	r4,r4,2
   41ff4:	003ebc06 	br	41ae8 <__alt_data_end+0xfffd5bc8>
   41ff8:	8085883a 	add	r2,r16,r2
   41ffc:	10c00117 	ldw	r3,4(r2)
   42000:	81000317 	ldw	r4,12(r16)
   42004:	81400217 	ldw	r5,8(r16)
   42008:	18c00054 	ori	r3,r3,1
   4200c:	10c00115 	stw	r3,4(r2)
   42010:	29000315 	stw	r4,12(r5)
   42014:	21400215 	stw	r5,8(r4)
   42018:	9009883a 	mov	r4,r18
   4201c:	004e3000 	call	4e300 <__malloc_unlock>
   42020:	80800204 	addi	r2,r16,8
   42024:	003f2506 	br	41cbc <__alt_data_end+0xfffd5d9c>
   42028:	12001704 	addi	r8,r2,92
   4202c:	11c016c4 	addi	r7,r2,91
   42030:	4209883a 	add	r4,r8,r8
   42034:	003e9606 	br	41a90 <__alt_data_end+0xfffd5b70>
   42038:	3804d1ba 	srli	r2,r7,6
   4203c:	11400e44 	addi	r5,r2,57
   42040:	10c00e04 	addi	r3,r2,56
   42044:	294b883a 	add	r5,r5,r5
   42048:	003fbc06 	br	41f3c <__alt_data_end+0xfffd601c>
   4204c:	84ff5926 	beq	r16,r19,41db4 <__alt_data_end+0xfffd5e94>
   42050:	00800174 	movhi	r2,5
   42054:	1083c404 	addi	r2,r2,3856
   42058:	14000217 	ldw	r16,8(r2)
   4205c:	00bfff04 	movi	r2,-4
   42060:	80c00117 	ldw	r3,4(r16)
   42064:	1886703a 	and	r3,r3,r2
   42068:	003f9106 	br	41eb0 <__alt_data_end+0xfffd5f90>
   4206c:	60800217 	ldw	r2,8(r12)
   42070:	213fffc4 	addi	r4,r4,-1
   42074:	1300651e 	bne	r2,r12,4220c <_malloc_r+0x7f4>
   42078:	208000cc 	andi	r2,r4,3
   4207c:	633ffe04 	addi	r12,r12,-8
   42080:	103ffa1e 	bne	r2,zero,4206c <__alt_data_end+0xfffd614c>
   42084:	98800117 	ldw	r2,4(r19)
   42088:	0146303a 	nor	r3,zero,r5
   4208c:	1884703a 	and	r2,r3,r2
   42090:	98800115 	stw	r2,4(r19)
   42094:	294b883a 	add	r5,r5,r5
   42098:	117f2836 	bltu	r2,r5,41d3c <__alt_data_end+0xfffd5e1c>
   4209c:	283f2726 	beq	r5,zero,41d3c <__alt_data_end+0xfffd5e1c>
   420a0:	2886703a 	and	r3,r5,r2
   420a4:	5809883a 	mov	r4,r11
   420a8:	183ec31e 	bne	r3,zero,41bb8 <__alt_data_end+0xfffd5c98>
   420ac:	294b883a 	add	r5,r5,r5
   420b0:	2886703a 	and	r3,r5,r2
   420b4:	21000104 	addi	r4,r4,4
   420b8:	183ffc26 	beq	r3,zero,420ac <__alt_data_end+0xfffd618c>
   420bc:	003ebe06 	br	41bb8 <__alt_data_end+0xfffd5c98>
   420c0:	00c05504 	movi	r3,340
   420c4:	18801236 	bltu	r3,r2,42110 <_malloc_r+0x6f8>
   420c8:	8804d3fa 	srli	r2,r17,15
   420cc:	12001e04 	addi	r8,r2,120
   420d0:	11c01dc4 	addi	r7,r2,119
   420d4:	4209883a 	add	r4,r8,r8
   420d8:	003e6d06 	br	41a90 <__alt_data_end+0xfffd5b70>
   420dc:	00c40004 	movi	r3,4096
   420e0:	003f4606 	br	41dfc <__alt_data_end+0xfffd5edc>
   420e4:	00800044 	movi	r2,1
   420e8:	a0800115 	stw	r2,4(r20)
   420ec:	003f7406 	br	41ec0 <__alt_data_end+0xfffd5fa0>
   420f0:	1805d0ba 	srai	r2,r3,2
   420f4:	01c00044 	movi	r7,1
   420f8:	30c00117 	ldw	r3,4(r6)
   420fc:	388e983a 	sll	r7,r7,r2
   42100:	2805883a 	mov	r2,r5
   42104:	38c6b03a 	or	r3,r7,r3
   42108:	30c00115 	stw	r3,4(r6)
   4210c:	003f9b06 	br	41f7c <__alt_data_end+0xfffd605c>
   42110:	00c15504 	movi	r3,1364
   42114:	18801a36 	bltu	r3,r2,42180 <_malloc_r+0x768>
   42118:	8804d4ba 	srli	r2,r17,18
   4211c:	12001f44 	addi	r8,r2,125
   42120:	11c01f04 	addi	r7,r2,124
   42124:	4209883a 	add	r4,r8,r8
   42128:	003e5906 	br	41a90 <__alt_data_end+0xfffd5b70>
   4212c:	ad400404 	addi	r21,r21,16
   42130:	003f1706 	br	41d90 <__alt_data_end+0xfffd5e70>
   42134:	00c01504 	movi	r3,84
   42138:	18802336 	bltu	r3,r2,421c8 <_malloc_r+0x7b0>
   4213c:	3804d33a 	srli	r2,r7,12
   42140:	11401bc4 	addi	r5,r2,111
   42144:	10c01b84 	addi	r3,r2,110
   42148:	294b883a 	add	r5,r5,r5
   4214c:	003f7b06 	br	41f3c <__alt_data_end+0xfffd601c>
   42150:	9c000217 	ldw	r16,8(r19)
   42154:	00bfff04 	movi	r2,-4
   42158:	80c00117 	ldw	r3,4(r16)
   4215c:	1886703a 	and	r3,r3,r2
   42160:	003f5306 	br	41eb0 <__alt_data_end+0xfffd5f90>
   42164:	3083ffcc 	andi	r2,r6,4095
   42168:	103f181e 	bne	r2,zero,41dcc <__alt_data_end+0xfffd5eac>
   4216c:	99000217 	ldw	r4,8(r19)
   42170:	b545883a 	add	r2,r22,r21
   42174:	10800054 	ori	r2,r2,1
   42178:	20800115 	stw	r2,4(r4)
   4217c:	003f3e06 	br	41e78 <__alt_data_end+0xfffd5f58>
   42180:	01003f84 	movi	r4,254
   42184:	02001fc4 	movi	r8,127
   42188:	01c01f84 	movi	r7,126
   4218c:	003e4006 	br	41a90 <__alt_data_end+0xfffd5b70>
   42190:	00800174 	movhi	r2,5
   42194:	10897304 	addi	r2,r2,9676
   42198:	15000015 	stw	r20,0(r2)
   4219c:	003f1106 	br	41de4 <__alt_data_end+0xfffd5ec4>
   421a0:	00800044 	movi	r2,1
   421a4:	002b883a 	mov	r21,zero
   421a8:	003f1f06 	br	41e28 <__alt_data_end+0xfffd5f08>
   421ac:	81400204 	addi	r5,r16,8
   421b0:	9009883a 	mov	r4,r18
   421b4:	0040df00 	call	40df0 <_free_r>
   421b8:	00800174 	movhi	r2,5
   421bc:	10905504 	addi	r2,r2,16724
   421c0:	10c00017 	ldw	r3,0(r2)
   421c4:	003f2c06 	br	41e78 <__alt_data_end+0xfffd5f58>
   421c8:	00c05504 	movi	r3,340
   421cc:	18800536 	bltu	r3,r2,421e4 <_malloc_r+0x7cc>
   421d0:	3804d3fa 	srli	r2,r7,15
   421d4:	11401e04 	addi	r5,r2,120
   421d8:	10c01dc4 	addi	r3,r2,119
   421dc:	294b883a 	add	r5,r5,r5
   421e0:	003f5606 	br	41f3c <__alt_data_end+0xfffd601c>
   421e4:	00c15504 	movi	r3,1364
   421e8:	18800536 	bltu	r3,r2,42200 <_malloc_r+0x7e8>
   421ec:	3804d4ba 	srli	r2,r7,18
   421f0:	11401f44 	addi	r5,r2,125
   421f4:	10c01f04 	addi	r3,r2,124
   421f8:	294b883a 	add	r5,r5,r5
   421fc:	003f4f06 	br	41f3c <__alt_data_end+0xfffd601c>
   42200:	01403f84 	movi	r5,254
   42204:	00c01f84 	movi	r3,126
   42208:	003f4c06 	br	41f3c <__alt_data_end+0xfffd601c>
   4220c:	98800117 	ldw	r2,4(r19)
   42210:	003fa006 	br	42094 <__alt_data_end+0xfffd6174>
   42214:	8808d0fa 	srli	r4,r17,3
   42218:	20800044 	addi	r2,r4,1
   4221c:	1085883a 	add	r2,r2,r2
   42220:	003e9006 	br	41c64 <__alt_data_end+0xfffd5d44>

00042224 <memset>:
   42224:	20c000cc 	andi	r3,r4,3
   42228:	2005883a 	mov	r2,r4
   4222c:	18004426 	beq	r3,zero,42340 <memset+0x11c>
   42230:	31ffffc4 	addi	r7,r6,-1
   42234:	30004026 	beq	r6,zero,42338 <memset+0x114>
   42238:	2813883a 	mov	r9,r5
   4223c:	200d883a 	mov	r6,r4
   42240:	2007883a 	mov	r3,r4
   42244:	00000406 	br	42258 <memset+0x34>
   42248:	3a3fffc4 	addi	r8,r7,-1
   4224c:	31800044 	addi	r6,r6,1
   42250:	38003926 	beq	r7,zero,42338 <memset+0x114>
   42254:	400f883a 	mov	r7,r8
   42258:	18c00044 	addi	r3,r3,1
   4225c:	32400005 	stb	r9,0(r6)
   42260:	1a0000cc 	andi	r8,r3,3
   42264:	403ff81e 	bne	r8,zero,42248 <__alt_data_end+0xfffd6328>
   42268:	010000c4 	movi	r4,3
   4226c:	21c02d2e 	bgeu	r4,r7,42324 <memset+0x100>
   42270:	29003fcc 	andi	r4,r5,255
   42274:	200c923a 	slli	r6,r4,8
   42278:	3108b03a 	or	r4,r6,r4
   4227c:	200c943a 	slli	r6,r4,16
   42280:	218cb03a 	or	r6,r4,r6
   42284:	010003c4 	movi	r4,15
   42288:	21c0182e 	bgeu	r4,r7,422ec <memset+0xc8>
   4228c:	3b3ffc04 	addi	r12,r7,-16
   42290:	6018d13a 	srli	r12,r12,4
   42294:	1a000104 	addi	r8,r3,4
   42298:	1ac00204 	addi	r11,r3,8
   4229c:	6008913a 	slli	r4,r12,4
   422a0:	1a800304 	addi	r10,r3,12
   422a4:	1813883a 	mov	r9,r3
   422a8:	21000504 	addi	r4,r4,20
   422ac:	1909883a 	add	r4,r3,r4
   422b0:	49800015 	stw	r6,0(r9)
   422b4:	41800015 	stw	r6,0(r8)
   422b8:	59800015 	stw	r6,0(r11)
   422bc:	51800015 	stw	r6,0(r10)
   422c0:	42000404 	addi	r8,r8,16
   422c4:	4a400404 	addi	r9,r9,16
   422c8:	5ac00404 	addi	r11,r11,16
   422cc:	52800404 	addi	r10,r10,16
   422d0:	413ff71e 	bne	r8,r4,422b0 <__alt_data_end+0xfffd6390>
   422d4:	63000044 	addi	r12,r12,1
   422d8:	6018913a 	slli	r12,r12,4
   422dc:	39c003cc 	andi	r7,r7,15
   422e0:	010000c4 	movi	r4,3
   422e4:	1b07883a 	add	r3,r3,r12
   422e8:	21c00e2e 	bgeu	r4,r7,42324 <memset+0x100>
   422ec:	1813883a 	mov	r9,r3
   422f0:	3811883a 	mov	r8,r7
   422f4:	010000c4 	movi	r4,3
   422f8:	49800015 	stw	r6,0(r9)
   422fc:	423fff04 	addi	r8,r8,-4
   42300:	4a400104 	addi	r9,r9,4
   42304:	223ffc36 	bltu	r4,r8,422f8 <__alt_data_end+0xfffd63d8>
   42308:	393fff04 	addi	r4,r7,-4
   4230c:	2008d0ba 	srli	r4,r4,2
   42310:	39c000cc 	andi	r7,r7,3
   42314:	21000044 	addi	r4,r4,1
   42318:	2109883a 	add	r4,r4,r4
   4231c:	2109883a 	add	r4,r4,r4
   42320:	1907883a 	add	r3,r3,r4
   42324:	38000526 	beq	r7,zero,4233c <memset+0x118>
   42328:	19cf883a 	add	r7,r3,r7
   4232c:	19400005 	stb	r5,0(r3)
   42330:	18c00044 	addi	r3,r3,1
   42334:	38fffd1e 	bne	r7,r3,4232c <__alt_data_end+0xfffd640c>
   42338:	f800283a 	ret
   4233c:	f800283a 	ret
   42340:	2007883a 	mov	r3,r4
   42344:	300f883a 	mov	r7,r6
   42348:	003fc706 	br	42268 <__alt_data_end+0xfffd6348>

0004234c <_open_r>:
   4234c:	defffd04 	addi	sp,sp,-12
   42350:	2805883a 	mov	r2,r5
   42354:	dc000015 	stw	r16,0(sp)
   42358:	04000174 	movhi	r16,5
   4235c:	dc400115 	stw	r17,4(sp)
   42360:	300b883a 	mov	r5,r6
   42364:	84104704 	addi	r16,r16,16668
   42368:	2023883a 	mov	r17,r4
   4236c:	380d883a 	mov	r6,r7
   42370:	1009883a 	mov	r4,r2
   42374:	dfc00215 	stw	ra,8(sp)
   42378:	80000015 	stw	zero,0(r16)
   4237c:	004e44c0 	call	4e44c <open>
   42380:	00ffffc4 	movi	r3,-1
   42384:	10c00526 	beq	r2,r3,4239c <_open_r+0x50>
   42388:	dfc00217 	ldw	ra,8(sp)
   4238c:	dc400117 	ldw	r17,4(sp)
   42390:	dc000017 	ldw	r16,0(sp)
   42394:	dec00304 	addi	sp,sp,12
   42398:	f800283a 	ret
   4239c:	80c00017 	ldw	r3,0(r16)
   423a0:	183ff926 	beq	r3,zero,42388 <__alt_data_end+0xfffd6468>
   423a4:	88c00015 	stw	r3,0(r17)
   423a8:	003ff706 	br	42388 <__alt_data_end+0xfffd6468>

000423ac <_puts_r>:
   423ac:	defff604 	addi	sp,sp,-40
   423b0:	dc000715 	stw	r16,28(sp)
   423b4:	2021883a 	mov	r16,r4
   423b8:	2809883a 	mov	r4,r5
   423bc:	dc400815 	stw	r17,32(sp)
   423c0:	dfc00915 	stw	ra,36(sp)
   423c4:	2823883a 	mov	r17,r5
   423c8:	00428880 	call	42888 <strlen>
   423cc:	10c00044 	addi	r3,r2,1
   423d0:	d8800115 	stw	r2,4(sp)
   423d4:	00800174 	movhi	r2,5
   423d8:	1081f804 	addi	r2,r2,2016
   423dc:	d8800215 	stw	r2,8(sp)
   423e0:	00800044 	movi	r2,1
   423e4:	d8800315 	stw	r2,12(sp)
   423e8:	00800084 	movi	r2,2
   423ec:	dc400015 	stw	r17,0(sp)
   423f0:	d8c00615 	stw	r3,24(sp)
   423f4:	dec00415 	stw	sp,16(sp)
   423f8:	d8800515 	stw	r2,20(sp)
   423fc:	80000226 	beq	r16,zero,42408 <_puts_r+0x5c>
   42400:	80800e17 	ldw	r2,56(r16)
   42404:	10001426 	beq	r2,zero,42458 <_puts_r+0xac>
   42408:	81400217 	ldw	r5,8(r16)
   4240c:	2880030b 	ldhu	r2,12(r5)
   42410:	10c8000c 	andi	r3,r2,8192
   42414:	1800061e 	bne	r3,zero,42430 <_puts_r+0x84>
   42418:	29001917 	ldw	r4,100(r5)
   4241c:	00f7ffc4 	movi	r3,-8193
   42420:	10880014 	ori	r2,r2,8192
   42424:	20c6703a 	and	r3,r4,r3
   42428:	2880030d 	sth	r2,12(r5)
   4242c:	28c01915 	stw	r3,100(r5)
   42430:	d9800404 	addi	r6,sp,16
   42434:	8009883a 	mov	r4,r16
   42438:	00468380 	call	46838 <__sfvwrite_r>
   4243c:	1000091e 	bne	r2,zero,42464 <_puts_r+0xb8>
   42440:	00800284 	movi	r2,10
   42444:	dfc00917 	ldw	ra,36(sp)
   42448:	dc400817 	ldw	r17,32(sp)
   4244c:	dc000717 	ldw	r16,28(sp)
   42450:	dec00a04 	addi	sp,sp,40
   42454:	f800283a 	ret
   42458:	8009883a 	mov	r4,r16
   4245c:	0040b240 	call	40b24 <__sinit>
   42460:	003fe906 	br	42408 <__alt_data_end+0xfffd64e8>
   42464:	00bfffc4 	movi	r2,-1
   42468:	003ff606 	br	42444 <__alt_data_end+0xfffd6524>

0004246c <puts>:
   4246c:	00800174 	movhi	r2,5
   42470:	10897204 	addi	r2,r2,9672
   42474:	200b883a 	mov	r5,r4
   42478:	11000017 	ldw	r4,0(r2)
   4247c:	00423ac1 	jmpi	423ac <_puts_r>

00042480 <lflush>:
   42480:	2080030b 	ldhu	r2,12(r4)
   42484:	00c00244 	movi	r3,9
   42488:	1080024c 	andi	r2,r2,9
   4248c:	10c00226 	beq	r2,r3,42498 <lflush+0x18>
   42490:	0005883a 	mov	r2,zero
   42494:	f800283a 	ret
   42498:	00407941 	jmpi	40794 <fflush>

0004249c <__srefill_r>:
   4249c:	defffc04 	addi	sp,sp,-16
   424a0:	dc400115 	stw	r17,4(sp)
   424a4:	dc000015 	stw	r16,0(sp)
   424a8:	dfc00315 	stw	ra,12(sp)
   424ac:	dc800215 	stw	r18,8(sp)
   424b0:	2023883a 	mov	r17,r4
   424b4:	2821883a 	mov	r16,r5
   424b8:	20000226 	beq	r4,zero,424c4 <__srefill_r+0x28>
   424bc:	20800e17 	ldw	r2,56(r4)
   424c0:	10003c26 	beq	r2,zero,425b4 <__srefill_r+0x118>
   424c4:	80c0030b 	ldhu	r3,12(r16)
   424c8:	1908000c 	andi	r4,r3,8192
   424cc:	1805883a 	mov	r2,r3
   424d0:	2000071e 	bne	r4,zero,424f0 <__srefill_r+0x54>
   424d4:	81001917 	ldw	r4,100(r16)
   424d8:	18880014 	ori	r2,r3,8192
   424dc:	00f7ffc4 	movi	r3,-8193
   424e0:	20c8703a 	and	r4,r4,r3
   424e4:	8080030d 	sth	r2,12(r16)
   424e8:	1007883a 	mov	r3,r2
   424ec:	81001915 	stw	r4,100(r16)
   424f0:	80000115 	stw	zero,4(r16)
   424f4:	1100080c 	andi	r4,r2,32
   424f8:	2000571e 	bne	r4,zero,42658 <__srefill_r+0x1bc>
   424fc:	1100010c 	andi	r4,r2,4
   42500:	20001f26 	beq	r4,zero,42580 <__srefill_r+0xe4>
   42504:	81400c17 	ldw	r5,48(r16)
   42508:	28000826 	beq	r5,zero,4252c <__srefill_r+0x90>
   4250c:	80801004 	addi	r2,r16,64
   42510:	28800226 	beq	r5,r2,4251c <__srefill_r+0x80>
   42514:	8809883a 	mov	r4,r17
   42518:	0040df00 	call	40df0 <_free_r>
   4251c:	80800f17 	ldw	r2,60(r16)
   42520:	80000c15 	stw	zero,48(r16)
   42524:	80800115 	stw	r2,4(r16)
   42528:	1000391e 	bne	r2,zero,42610 <__srefill_r+0x174>
   4252c:	80800417 	ldw	r2,16(r16)
   42530:	10004b26 	beq	r2,zero,42660 <__srefill_r+0x1c4>
   42534:	8480030b 	ldhu	r18,12(r16)
   42538:	908000cc 	andi	r2,r18,3
   4253c:	10001f1e 	bne	r2,zero,425bc <__srefill_r+0x120>
   42540:	81800417 	ldw	r6,16(r16)
   42544:	80800817 	ldw	r2,32(r16)
   42548:	81c00517 	ldw	r7,20(r16)
   4254c:	81400717 	ldw	r5,28(r16)
   42550:	81800015 	stw	r6,0(r16)
   42554:	8809883a 	mov	r4,r17
   42558:	103ee83a 	callr	r2
   4255c:	80800115 	stw	r2,4(r16)
   42560:	00800e0e 	bge	zero,r2,4259c <__srefill_r+0x100>
   42564:	0005883a 	mov	r2,zero
   42568:	dfc00317 	ldw	ra,12(sp)
   4256c:	dc800217 	ldw	r18,8(sp)
   42570:	dc400117 	ldw	r17,4(sp)
   42574:	dc000017 	ldw	r16,0(sp)
   42578:	dec00404 	addi	sp,sp,16
   4257c:	f800283a 	ret
   42580:	1100040c 	andi	r4,r2,16
   42584:	20003026 	beq	r4,zero,42648 <__srefill_r+0x1ac>
   42588:	1080020c 	andi	r2,r2,8
   4258c:	1000241e 	bne	r2,zero,42620 <__srefill_r+0x184>
   42590:	18c00114 	ori	r3,r3,4
   42594:	80c0030d 	sth	r3,12(r16)
   42598:	003fe406 	br	4252c <__alt_data_end+0xfffd660c>
   4259c:	80c0030b 	ldhu	r3,12(r16)
   425a0:	1000161e 	bne	r2,zero,425fc <__srefill_r+0x160>
   425a4:	18c00814 	ori	r3,r3,32
   425a8:	00bfffc4 	movi	r2,-1
   425ac:	80c0030d 	sth	r3,12(r16)
   425b0:	003fed06 	br	42568 <__alt_data_end+0xfffd6648>
   425b4:	0040b240 	call	40b24 <__sinit>
   425b8:	003fc206 	br	424c4 <__alt_data_end+0xfffd65a4>
   425bc:	00800174 	movhi	r2,5
   425c0:	10897104 	addi	r2,r2,9668
   425c4:	11000017 	ldw	r4,0(r2)
   425c8:	01400134 	movhi	r5,4
   425cc:	00800044 	movi	r2,1
   425d0:	29492004 	addi	r5,r5,9344
   425d4:	8080030d 	sth	r2,12(r16)
   425d8:	00415dc0 	call	415dc <_fwalk>
   425dc:	00800244 	movi	r2,9
   425e0:	8480030d 	sth	r18,12(r16)
   425e4:	9480024c 	andi	r18,r18,9
   425e8:	90bfd51e 	bne	r18,r2,42540 <__alt_data_end+0xfffd6620>
   425ec:	800b883a 	mov	r5,r16
   425f0:	8809883a 	mov	r4,r17
   425f4:	004051c0 	call	4051c <__sflush_r>
   425f8:	003fd106 	br	42540 <__alt_data_end+0xfffd6620>
   425fc:	18c01014 	ori	r3,r3,64
   42600:	80000115 	stw	zero,4(r16)
   42604:	00bfffc4 	movi	r2,-1
   42608:	80c0030d 	sth	r3,12(r16)
   4260c:	003fd606 	br	42568 <__alt_data_end+0xfffd6648>
   42610:	80c00e17 	ldw	r3,56(r16)
   42614:	0005883a 	mov	r2,zero
   42618:	80c00015 	stw	r3,0(r16)
   4261c:	003fd206 	br	42568 <__alt_data_end+0xfffd6648>
   42620:	800b883a 	mov	r5,r16
   42624:	8809883a 	mov	r4,r17
   42628:	00407380 	call	40738 <_fflush_r>
   4262c:	10000a1e 	bne	r2,zero,42658 <__srefill_r+0x1bc>
   42630:	8080030b 	ldhu	r2,12(r16)
   42634:	00fffdc4 	movi	r3,-9
   42638:	80000215 	stw	zero,8(r16)
   4263c:	1886703a 	and	r3,r3,r2
   42640:	80000615 	stw	zero,24(r16)
   42644:	003fd206 	br	42590 <__alt_data_end+0xfffd6670>
   42648:	00800244 	movi	r2,9
   4264c:	88800015 	stw	r2,0(r17)
   42650:	18c01014 	ori	r3,r3,64
   42654:	80c0030d 	sth	r3,12(r16)
   42658:	00bfffc4 	movi	r2,-1
   4265c:	003fc206 	br	42568 <__alt_data_end+0xfffd6648>
   42660:	800b883a 	mov	r5,r16
   42664:	8809883a 	mov	r4,r17
   42668:	004185c0 	call	4185c <__smakebuf_r>
   4266c:	003fb106 	br	42534 <__alt_data_end+0xfffd6614>

00042670 <__srget_r>:
   42670:	defffd04 	addi	sp,sp,-12
   42674:	dc400115 	stw	r17,4(sp)
   42678:	dc000015 	stw	r16,0(sp)
   4267c:	dfc00215 	stw	ra,8(sp)
   42680:	2023883a 	mov	r17,r4
   42684:	2821883a 	mov	r16,r5
   42688:	20000226 	beq	r4,zero,42694 <__srget_r+0x24>
   4268c:	20800e17 	ldw	r2,56(r4)
   42690:	10001026 	beq	r2,zero,426d4 <__srget_r+0x64>
   42694:	800b883a 	mov	r5,r16
   42698:	8809883a 	mov	r4,r17
   4269c:	004249c0 	call	4249c <__srefill_r>
   426a0:	10000e1e 	bne	r2,zero,426dc <__srget_r+0x6c>
   426a4:	80c00017 	ldw	r3,0(r16)
   426a8:	80800117 	ldw	r2,4(r16)
   426ac:	19000044 	addi	r4,r3,1
   426b0:	10bfffc4 	addi	r2,r2,-1
   426b4:	80800115 	stw	r2,4(r16)
   426b8:	81000015 	stw	r4,0(r16)
   426bc:	18800003 	ldbu	r2,0(r3)
   426c0:	dfc00217 	ldw	ra,8(sp)
   426c4:	dc400117 	ldw	r17,4(sp)
   426c8:	dc000017 	ldw	r16,0(sp)
   426cc:	dec00304 	addi	sp,sp,12
   426d0:	f800283a 	ret
   426d4:	0040b240 	call	40b24 <__sinit>
   426d8:	003fee06 	br	42694 <__alt_data_end+0xfffd6774>
   426dc:	00bfffc4 	movi	r2,-1
   426e0:	003ff706 	br	426c0 <__alt_data_end+0xfffd67a0>

000426e4 <__srget>:
   426e4:	00800174 	movhi	r2,5
   426e8:	10897204 	addi	r2,r2,9672
   426ec:	200b883a 	mov	r5,r4
   426f0:	11000017 	ldw	r4,0(r2)
   426f4:	00426701 	jmpi	42670 <__srget_r>

000426f8 <_sbrk_r>:
   426f8:	defffd04 	addi	sp,sp,-12
   426fc:	dc000015 	stw	r16,0(sp)
   42700:	04000174 	movhi	r16,5
   42704:	dc400115 	stw	r17,4(sp)
   42708:	84104704 	addi	r16,r16,16668
   4270c:	2023883a 	mov	r17,r4
   42710:	2809883a 	mov	r4,r5
   42714:	dfc00215 	stw	ra,8(sp)
   42718:	80000015 	stw	zero,0(r16)
   4271c:	004e76c0 	call	4e76c <sbrk>
   42720:	00ffffc4 	movi	r3,-1
   42724:	10c00526 	beq	r2,r3,4273c <_sbrk_r+0x44>
   42728:	dfc00217 	ldw	ra,8(sp)
   4272c:	dc400117 	ldw	r17,4(sp)
   42730:	dc000017 	ldw	r16,0(sp)
   42734:	dec00304 	addi	sp,sp,12
   42738:	f800283a 	ret
   4273c:	80c00017 	ldw	r3,0(r16)
   42740:	183ff926 	beq	r3,zero,42728 <__alt_data_end+0xfffd6808>
   42744:	88c00015 	stw	r3,0(r17)
   42748:	003ff706 	br	42728 <__alt_data_end+0xfffd6808>

0004274c <__sread>:
   4274c:	defffe04 	addi	sp,sp,-8
   42750:	dc000015 	stw	r16,0(sp)
   42754:	2821883a 	mov	r16,r5
   42758:	2940038f 	ldh	r5,14(r5)
   4275c:	dfc00115 	stw	ra,4(sp)
   42760:	00482d00 	call	482d0 <_read_r>
   42764:	10000716 	blt	r2,zero,42784 <__sread+0x38>
   42768:	80c01417 	ldw	r3,80(r16)
   4276c:	1887883a 	add	r3,r3,r2
   42770:	80c01415 	stw	r3,80(r16)
   42774:	dfc00117 	ldw	ra,4(sp)
   42778:	dc000017 	ldw	r16,0(sp)
   4277c:	dec00204 	addi	sp,sp,8
   42780:	f800283a 	ret
   42784:	80c0030b 	ldhu	r3,12(r16)
   42788:	18fbffcc 	andi	r3,r3,61439
   4278c:	80c0030d 	sth	r3,12(r16)
   42790:	dfc00117 	ldw	ra,4(sp)
   42794:	dc000017 	ldw	r16,0(sp)
   42798:	dec00204 	addi	sp,sp,8
   4279c:	f800283a 	ret

000427a0 <__seofread>:
   427a0:	0005883a 	mov	r2,zero
   427a4:	f800283a 	ret

000427a8 <__swrite>:
   427a8:	2880030b 	ldhu	r2,12(r5)
   427ac:	defffb04 	addi	sp,sp,-20
   427b0:	dcc00315 	stw	r19,12(sp)
   427b4:	dc800215 	stw	r18,8(sp)
   427b8:	dc400115 	stw	r17,4(sp)
   427bc:	dc000015 	stw	r16,0(sp)
   427c0:	dfc00415 	stw	ra,16(sp)
   427c4:	10c0400c 	andi	r3,r2,256
   427c8:	2821883a 	mov	r16,r5
   427cc:	2023883a 	mov	r17,r4
   427d0:	3025883a 	mov	r18,r6
   427d4:	3827883a 	mov	r19,r7
   427d8:	18000526 	beq	r3,zero,427f0 <__swrite+0x48>
   427dc:	2940038f 	ldh	r5,14(r5)
   427e0:	01c00084 	movi	r7,2
   427e4:	000d883a 	mov	r6,zero
   427e8:	0046e300 	call	46e30 <_lseek_r>
   427ec:	8080030b 	ldhu	r2,12(r16)
   427f0:	8140038f 	ldh	r5,14(r16)
   427f4:	10bbffcc 	andi	r2,r2,61439
   427f8:	980f883a 	mov	r7,r19
   427fc:	900d883a 	mov	r6,r18
   42800:	8809883a 	mov	r4,r17
   42804:	8080030d 	sth	r2,12(r16)
   42808:	dfc00417 	ldw	ra,16(sp)
   4280c:	dcc00317 	ldw	r19,12(sp)
   42810:	dc800217 	ldw	r18,8(sp)
   42814:	dc400117 	ldw	r17,4(sp)
   42818:	dc000017 	ldw	r16,0(sp)
   4281c:	dec00504 	addi	sp,sp,20
   42820:	0044cd41 	jmpi	44cd4 <_write_r>

00042824 <__sseek>:
   42824:	defffe04 	addi	sp,sp,-8
   42828:	dc000015 	stw	r16,0(sp)
   4282c:	2821883a 	mov	r16,r5
   42830:	2940038f 	ldh	r5,14(r5)
   42834:	dfc00115 	stw	ra,4(sp)
   42838:	0046e300 	call	46e30 <_lseek_r>
   4283c:	00ffffc4 	movi	r3,-1
   42840:	10c00826 	beq	r2,r3,42864 <__sseek+0x40>
   42844:	80c0030b 	ldhu	r3,12(r16)
   42848:	80801415 	stw	r2,80(r16)
   4284c:	18c40014 	ori	r3,r3,4096
   42850:	80c0030d 	sth	r3,12(r16)
   42854:	dfc00117 	ldw	ra,4(sp)
   42858:	dc000017 	ldw	r16,0(sp)
   4285c:	dec00204 	addi	sp,sp,8
   42860:	f800283a 	ret
   42864:	80c0030b 	ldhu	r3,12(r16)
   42868:	18fbffcc 	andi	r3,r3,61439
   4286c:	80c0030d 	sth	r3,12(r16)
   42870:	dfc00117 	ldw	ra,4(sp)
   42874:	dc000017 	ldw	r16,0(sp)
   42878:	dec00204 	addi	sp,sp,8
   4287c:	f800283a 	ret

00042880 <__sclose>:
   42880:	2940038f 	ldh	r5,14(r5)
   42884:	0044e881 	jmpi	44e88 <_close_r>

00042888 <strlen>:
   42888:	208000cc 	andi	r2,r4,3
   4288c:	10002026 	beq	r2,zero,42910 <strlen+0x88>
   42890:	20800007 	ldb	r2,0(r4)
   42894:	10002026 	beq	r2,zero,42918 <strlen+0x90>
   42898:	2005883a 	mov	r2,r4
   4289c:	00000206 	br	428a8 <strlen+0x20>
   428a0:	10c00007 	ldb	r3,0(r2)
   428a4:	18001826 	beq	r3,zero,42908 <strlen+0x80>
   428a8:	10800044 	addi	r2,r2,1
   428ac:	10c000cc 	andi	r3,r2,3
   428b0:	183ffb1e 	bne	r3,zero,428a0 <__alt_data_end+0xfffd6980>
   428b4:	10c00017 	ldw	r3,0(r2)
   428b8:	01ffbff4 	movhi	r7,65279
   428bc:	39ffbfc4 	addi	r7,r7,-257
   428c0:	00ca303a 	nor	r5,zero,r3
   428c4:	01a02074 	movhi	r6,32897
   428c8:	19c7883a 	add	r3,r3,r7
   428cc:	31a02004 	addi	r6,r6,-32640
   428d0:	1946703a 	and	r3,r3,r5
   428d4:	1986703a 	and	r3,r3,r6
   428d8:	1800091e 	bne	r3,zero,42900 <strlen+0x78>
   428dc:	10800104 	addi	r2,r2,4
   428e0:	10c00017 	ldw	r3,0(r2)
   428e4:	19cb883a 	add	r5,r3,r7
   428e8:	00c6303a 	nor	r3,zero,r3
   428ec:	28c6703a 	and	r3,r5,r3
   428f0:	1986703a 	and	r3,r3,r6
   428f4:	183ff926 	beq	r3,zero,428dc <__alt_data_end+0xfffd69bc>
   428f8:	00000106 	br	42900 <strlen+0x78>
   428fc:	10800044 	addi	r2,r2,1
   42900:	10c00007 	ldb	r3,0(r2)
   42904:	183ffd1e 	bne	r3,zero,428fc <__alt_data_end+0xfffd69dc>
   42908:	1105c83a 	sub	r2,r2,r4
   4290c:	f800283a 	ret
   42910:	2005883a 	mov	r2,r4
   42914:	003fe706 	br	428b4 <__alt_data_end+0xfffd6994>
   42918:	0005883a 	mov	r2,zero
   4291c:	f800283a 	ret

00042920 <___vfprintf_internal_r>:
   42920:	deffb804 	addi	sp,sp,-288
   42924:	dfc04715 	stw	ra,284(sp)
   42928:	ddc04515 	stw	r23,276(sp)
   4292c:	dd404315 	stw	r21,268(sp)
   42930:	d9002d15 	stw	r4,180(sp)
   42934:	282f883a 	mov	r23,r5
   42938:	302b883a 	mov	r21,r6
   4293c:	d9c02e15 	stw	r7,184(sp)
   42940:	df004615 	stw	fp,280(sp)
   42944:	dd804415 	stw	r22,272(sp)
   42948:	dd004215 	stw	r20,264(sp)
   4294c:	dcc04115 	stw	r19,260(sp)
   42950:	dc804015 	stw	r18,256(sp)
   42954:	dc403f15 	stw	r17,252(sp)
   42958:	dc003e15 	stw	r16,248(sp)
   4295c:	0046e000 	call	46e00 <_localeconv_r>
   42960:	10800017 	ldw	r2,0(r2)
   42964:	1009883a 	mov	r4,r2
   42968:	d8803415 	stw	r2,208(sp)
   4296c:	00428880 	call	42888 <strlen>
   42970:	d8803715 	stw	r2,220(sp)
   42974:	d8802d17 	ldw	r2,180(sp)
   42978:	10000226 	beq	r2,zero,42984 <___vfprintf_internal_r+0x64>
   4297c:	10800e17 	ldw	r2,56(r2)
   42980:	1000fb26 	beq	r2,zero,42d70 <___vfprintf_internal_r+0x450>
   42984:	b880030b 	ldhu	r2,12(r23)
   42988:	10c8000c 	andi	r3,r2,8192
   4298c:	1800061e 	bne	r3,zero,429a8 <___vfprintf_internal_r+0x88>
   42990:	b9001917 	ldw	r4,100(r23)
   42994:	00f7ffc4 	movi	r3,-8193
   42998:	10880014 	ori	r2,r2,8192
   4299c:	20c6703a 	and	r3,r4,r3
   429a0:	b880030d 	sth	r2,12(r23)
   429a4:	b8c01915 	stw	r3,100(r23)
   429a8:	10c0020c 	andi	r3,r2,8
   429ac:	1800c326 	beq	r3,zero,42cbc <___vfprintf_internal_r+0x39c>
   429b0:	b8c00417 	ldw	r3,16(r23)
   429b4:	1800c126 	beq	r3,zero,42cbc <___vfprintf_internal_r+0x39c>
   429b8:	1080068c 	andi	r2,r2,26
   429bc:	00c00284 	movi	r3,10
   429c0:	10c0c626 	beq	r2,r3,42cdc <___vfprintf_internal_r+0x3bc>
   429c4:	d8c00404 	addi	r3,sp,16
   429c8:	05000174 	movhi	r20,5
   429cc:	d9001e04 	addi	r4,sp,120
   429d0:	a5020984 	addi	r20,r20,2086
   429d4:	d8c01e15 	stw	r3,120(sp)
   429d8:	d8002015 	stw	zero,128(sp)
   429dc:	d8001f15 	stw	zero,124(sp)
   429e0:	d8003315 	stw	zero,204(sp)
   429e4:	d8003615 	stw	zero,216(sp)
   429e8:	d8003815 	stw	zero,224(sp)
   429ec:	1811883a 	mov	r8,r3
   429f0:	d8003915 	stw	zero,228(sp)
   429f4:	d8003a15 	stw	zero,232(sp)
   429f8:	d8002f15 	stw	zero,188(sp)
   429fc:	d9002815 	stw	r4,160(sp)
   42a00:	a8800007 	ldb	r2,0(r21)
   42a04:	10028b26 	beq	r2,zero,43434 <___vfprintf_internal_r+0xb14>
   42a08:	00c00944 	movi	r3,37
   42a0c:	a823883a 	mov	r17,r21
   42a10:	10c0021e 	bne	r2,r3,42a1c <___vfprintf_internal_r+0xfc>
   42a14:	00001406 	br	42a68 <___vfprintf_internal_r+0x148>
   42a18:	10c00326 	beq	r2,r3,42a28 <___vfprintf_internal_r+0x108>
   42a1c:	8c400044 	addi	r17,r17,1
   42a20:	88800007 	ldb	r2,0(r17)
   42a24:	103ffc1e 	bne	r2,zero,42a18 <__alt_data_end+0xfffd6af8>
   42a28:	8d61c83a 	sub	r16,r17,r21
   42a2c:	80000e26 	beq	r16,zero,42a68 <___vfprintf_internal_r+0x148>
   42a30:	d8c02017 	ldw	r3,128(sp)
   42a34:	d8801f17 	ldw	r2,124(sp)
   42a38:	45400015 	stw	r21,0(r8)
   42a3c:	1c07883a 	add	r3,r3,r16
   42a40:	10800044 	addi	r2,r2,1
   42a44:	d8c02015 	stw	r3,128(sp)
   42a48:	44000115 	stw	r16,4(r8)
   42a4c:	d8801f15 	stw	r2,124(sp)
   42a50:	00c001c4 	movi	r3,7
   42a54:	1880a916 	blt	r3,r2,42cfc <___vfprintf_internal_r+0x3dc>
   42a58:	42000204 	addi	r8,r8,8
   42a5c:	d9402f17 	ldw	r5,188(sp)
   42a60:	2c0b883a 	add	r5,r5,r16
   42a64:	d9402f15 	stw	r5,188(sp)
   42a68:	88800007 	ldb	r2,0(r17)
   42a6c:	1000aa26 	beq	r2,zero,42d18 <___vfprintf_internal_r+0x3f8>
   42a70:	8d400044 	addi	r21,r17,1
   42a74:	8c400047 	ldb	r17,1(r17)
   42a78:	0021883a 	mov	r16,zero
   42a7c:	00bfffc4 	movi	r2,-1
   42a80:	0025883a 	mov	r18,zero
   42a84:	dc002905 	stb	r16,164(sp)
   42a88:	d8002785 	stb	zero,158(sp)
   42a8c:	d8002b05 	stb	zero,172(sp)
   42a90:	d8802a15 	stw	r2,168(sp)
   42a94:	d8003115 	stw	zero,196(sp)
   42a98:	04c01604 	movi	r19,88
   42a9c:	05800244 	movi	r22,9
   42aa0:	9021883a 	mov	r16,r18
   42aa4:	4039883a 	mov	fp,r8
   42aa8:	ad400044 	addi	r21,r21,1
   42aac:	88bff804 	addi	r2,r17,-32
   42ab0:	98833236 	bltu	r19,r2,4377c <___vfprintf_internal_r+0xe5c>
   42ab4:	100490ba 	slli	r2,r2,2
   42ab8:	00c00134 	movhi	r3,4
   42abc:	18cab304 	addi	r3,r3,10956
   42ac0:	10c5883a 	add	r2,r2,r3
   42ac4:	10800017 	ldw	r2,0(r2)
   42ac8:	1000683a 	jmp	r2
   42acc:	00043674 	movhi	zero,4313
   42ad0:	0004377c 	xorhi	zero,zero,4317
   42ad4:	0004377c 	xorhi	zero,zero,4317
   42ad8:	00043694 	movui	zero,4314
   42adc:	0004377c 	xorhi	zero,zero,4317
   42ae0:	0004377c 	xorhi	zero,zero,4317
   42ae4:	0004377c 	xorhi	zero,zero,4317
   42ae8:	0004377c 	xorhi	zero,zero,4317
   42aec:	0004377c 	xorhi	zero,zero,4317
   42af0:	0004377c 	xorhi	zero,zero,4317
   42af4:	00042d7c 	xorhi	zero,zero,4277
   42af8:	00043584 	movi	zero,4310
   42afc:	0004377c 	xorhi	zero,zero,4317
   42b00:	00042c40 	call	42c4 <__reset-0x3bd3c>
   42b04:	00042da0 	cmpeqi	zero,zero,4278
   42b08:	0004377c 	xorhi	zero,zero,4317
   42b0c:	00042df0 	cmpltui	zero,zero,4279
   42b10:	00042dfc 	xorhi	zero,zero,4279
   42b14:	00042dfc 	xorhi	zero,zero,4279
   42b18:	00042dfc 	xorhi	zero,zero,4279
   42b1c:	00042dfc 	xorhi	zero,zero,4279
   42b20:	00042dfc 	xorhi	zero,zero,4279
   42b24:	00042dfc 	xorhi	zero,zero,4279
   42b28:	00042dfc 	xorhi	zero,zero,4279
   42b2c:	00042dfc 	xorhi	zero,zero,4279
   42b30:	00042dfc 	xorhi	zero,zero,4279
   42b34:	0004377c 	xorhi	zero,zero,4317
   42b38:	0004377c 	xorhi	zero,zero,4317
   42b3c:	0004377c 	xorhi	zero,zero,4317
   42b40:	0004377c 	xorhi	zero,zero,4317
   42b44:	0004377c 	xorhi	zero,zero,4317
   42b48:	0004377c 	xorhi	zero,zero,4317
   42b4c:	0004377c 	xorhi	zero,zero,4317
   42b50:	0004377c 	xorhi	zero,zero,4317
   42b54:	0004377c 	xorhi	zero,zero,4317
   42b58:	0004377c 	xorhi	zero,zero,4317
   42b5c:	00042e38 	rdprs	zero,zero,4280
   42b60:	00042f00 	call	42f0 <__reset-0x3bd10>
   42b64:	0004377c 	xorhi	zero,zero,4317
   42b68:	00042f00 	call	42f0 <__reset-0x3bd10>
   42b6c:	0004377c 	xorhi	zero,zero,4317
   42b70:	0004377c 	xorhi	zero,zero,4317
   42b74:	0004377c 	xorhi	zero,zero,4317
   42b78:	0004377c 	xorhi	zero,zero,4317
   42b7c:	00042fac 	andhi	zero,zero,4286
   42b80:	0004377c 	xorhi	zero,zero,4317
   42b84:	0004377c 	xorhi	zero,zero,4317
   42b88:	00042fb8 	rdprs	zero,zero,4286
   42b8c:	0004377c 	xorhi	zero,zero,4317
   42b90:	0004377c 	xorhi	zero,zero,4317
   42b94:	0004377c 	xorhi	zero,zero,4317
   42b98:	0004377c 	xorhi	zero,zero,4317
   42b9c:	0004377c 	xorhi	zero,zero,4317
   42ba0:	0004343c 	xorhi	zero,zero,4304
   42ba4:	0004377c 	xorhi	zero,zero,4317
   42ba8:	0004377c 	xorhi	zero,zero,4317
   42bac:	000434a8 	cmpgeui	zero,zero,4306
   42bb0:	0004377c 	xorhi	zero,zero,4317
   42bb4:	0004377c 	xorhi	zero,zero,4317
   42bb8:	0004377c 	xorhi	zero,zero,4317
   42bbc:	0004377c 	xorhi	zero,zero,4317
   42bc0:	0004377c 	xorhi	zero,zero,4317
   42bc4:	0004377c 	xorhi	zero,zero,4317
   42bc8:	0004377c 	xorhi	zero,zero,4317
   42bcc:	0004377c 	xorhi	zero,zero,4317
   42bd0:	0004377c 	xorhi	zero,zero,4317
   42bd4:	0004377c 	xorhi	zero,zero,4317
   42bd8:	00043720 	cmpeqi	zero,zero,4316
   42bdc:	000436a0 	cmpeqi	zero,zero,4314
   42be0:	00042f00 	call	42f0 <__reset-0x3bd10>
   42be4:	00042f00 	call	42f0 <__reset-0x3bd10>
   42be8:	00042f00 	call	42f0 <__reset-0x3bd10>
   42bec:	000436c0 	call	436c <__reset-0x3bc94>
   42bf0:	000436a0 	cmpeqi	zero,zero,4314
   42bf4:	0004377c 	xorhi	zero,zero,4317
   42bf8:	0004377c 	xorhi	zero,zero,4317
   42bfc:	000436cc 	andi	zero,zero,4315
   42c00:	0004377c 	xorhi	zero,zero,4317
   42c04:	000436e0 	cmpeqi	zero,zero,4315
   42c08:	00043564 	muli	zero,zero,4309
   42c0c:	00042c4c 	andi	zero,zero,4273
   42c10:	0004359c 	xori	zero,zero,4310
   42c14:	0004377c 	xorhi	zero,zero,4317
   42c18:	000435a8 	cmpgeui	zero,zero,4310
   42c1c:	0004377c 	xorhi	zero,zero,4317
   42c20:	0004360c 	andi	zero,zero,4312
   42c24:	0004377c 	xorhi	zero,zero,4317
   42c28:	0004377c 	xorhi	zero,zero,4317
   42c2c:	0004362c 	andhi	zero,zero,4312
   42c30:	d8c03117 	ldw	r3,196(sp)
   42c34:	d8802e15 	stw	r2,184(sp)
   42c38:	00c7c83a 	sub	r3,zero,r3
   42c3c:	d8c03115 	stw	r3,196(sp)
   42c40:	84000114 	ori	r16,r16,4
   42c44:	ac400007 	ldb	r17,0(r21)
   42c48:	003f9706 	br	42aa8 <__alt_data_end+0xfffd6b88>
   42c4c:	00800c04 	movi	r2,48
   42c50:	d8802705 	stb	r2,156(sp)
   42c54:	00801e04 	movi	r2,120
   42c58:	d8802745 	stb	r2,157(sp)
   42c5c:	d9002a17 	ldw	r4,168(sp)
   42c60:	d8802e17 	ldw	r2,184(sp)
   42c64:	d8002785 	stb	zero,158(sp)
   42c68:	e011883a 	mov	r8,fp
   42c6c:	10c00104 	addi	r3,r2,4
   42c70:	14c00017 	ldw	r19,0(r2)
   42c74:	002d883a 	mov	r22,zero
   42c78:	80800094 	ori	r2,r16,2
   42c7c:	2002ca16 	blt	r4,zero,437a8 <___vfprintf_internal_r+0xe88>
   42c80:	00bfdfc4 	movi	r2,-129
   42c84:	80a4703a 	and	r18,r16,r2
   42c88:	d8c02e15 	stw	r3,184(sp)
   42c8c:	94800094 	ori	r18,r18,2
   42c90:	9802b41e 	bne	r19,zero,43764 <___vfprintf_internal_r+0xe44>
   42c94:	01400174 	movhi	r5,5
   42c98:	29420204 	addi	r5,r5,2056
   42c9c:	d9403915 	stw	r5,228(sp)
   42ca0:	04401e04 	movi	r17,120
   42ca4:	d8802a17 	ldw	r2,168(sp)
   42ca8:	0039883a 	mov	fp,zero
   42cac:	1001fa26 	beq	r2,zero,43498 <___vfprintf_internal_r+0xb78>
   42cb0:	0027883a 	mov	r19,zero
   42cb4:	002d883a 	mov	r22,zero
   42cb8:	00021906 	br	43520 <___vfprintf_internal_r+0xc00>
   42cbc:	d9002d17 	ldw	r4,180(sp)
   42cc0:	b80b883a 	mov	r5,r23
   42cc4:	0044d340 	call	44d34 <__swsetup_r>
   42cc8:	1005dc1e 	bne	r2,zero,4443c <___vfprintf_internal_r+0x1b1c>
   42ccc:	b880030b 	ldhu	r2,12(r23)
   42cd0:	00c00284 	movi	r3,10
   42cd4:	1080068c 	andi	r2,r2,26
   42cd8:	10ff3a1e 	bne	r2,r3,429c4 <__alt_data_end+0xfffd6aa4>
   42cdc:	b880038f 	ldh	r2,14(r23)
   42ce0:	103f3816 	blt	r2,zero,429c4 <__alt_data_end+0xfffd6aa4>
   42ce4:	d9c02e17 	ldw	r7,184(sp)
   42ce8:	d9002d17 	ldw	r4,180(sp)
   42cec:	a80d883a 	mov	r6,r21
   42cf0:	b80b883a 	mov	r5,r23
   42cf4:	0044c180 	call	44c18 <__sbprintf>
   42cf8:	00001106 	br	42d40 <___vfprintf_internal_r+0x420>
   42cfc:	d9002d17 	ldw	r4,180(sp)
   42d00:	d9801e04 	addi	r6,sp,120
   42d04:	b80b883a 	mov	r5,r23
   42d08:	0048ae00 	call	48ae0 <__sprint_r>
   42d0c:	1000081e 	bne	r2,zero,42d30 <___vfprintf_internal_r+0x410>
   42d10:	da000404 	addi	r8,sp,16
   42d14:	003f5106 	br	42a5c <__alt_data_end+0xfffd6b3c>
   42d18:	d8802017 	ldw	r2,128(sp)
   42d1c:	10000426 	beq	r2,zero,42d30 <___vfprintf_internal_r+0x410>
   42d20:	d9002d17 	ldw	r4,180(sp)
   42d24:	d9801e04 	addi	r6,sp,120
   42d28:	b80b883a 	mov	r5,r23
   42d2c:	0048ae00 	call	48ae0 <__sprint_r>
   42d30:	b880030b 	ldhu	r2,12(r23)
   42d34:	1080100c 	andi	r2,r2,64
   42d38:	1005c01e 	bne	r2,zero,4443c <___vfprintf_internal_r+0x1b1c>
   42d3c:	d8802f17 	ldw	r2,188(sp)
   42d40:	dfc04717 	ldw	ra,284(sp)
   42d44:	df004617 	ldw	fp,280(sp)
   42d48:	ddc04517 	ldw	r23,276(sp)
   42d4c:	dd804417 	ldw	r22,272(sp)
   42d50:	dd404317 	ldw	r21,268(sp)
   42d54:	dd004217 	ldw	r20,264(sp)
   42d58:	dcc04117 	ldw	r19,260(sp)
   42d5c:	dc804017 	ldw	r18,256(sp)
   42d60:	dc403f17 	ldw	r17,252(sp)
   42d64:	dc003e17 	ldw	r16,248(sp)
   42d68:	dec04804 	addi	sp,sp,288
   42d6c:	f800283a 	ret
   42d70:	d9002d17 	ldw	r4,180(sp)
   42d74:	0040b240 	call	40b24 <__sinit>
   42d78:	003f0206 	br	42984 <__alt_data_end+0xfffd6a64>
   42d7c:	d9002e17 	ldw	r4,184(sp)
   42d80:	d9402e17 	ldw	r5,184(sp)
   42d84:	21000017 	ldw	r4,0(r4)
   42d88:	28800104 	addi	r2,r5,4
   42d8c:	d9003115 	stw	r4,196(sp)
   42d90:	203fa716 	blt	r4,zero,42c30 <__alt_data_end+0xfffd6d10>
   42d94:	d8802e15 	stw	r2,184(sp)
   42d98:	ac400007 	ldb	r17,0(r21)
   42d9c:	003f4206 	br	42aa8 <__alt_data_end+0xfffd6b88>
   42da0:	ac400007 	ldb	r17,0(r21)
   42da4:	01000a84 	movi	r4,42
   42da8:	a8c00044 	addi	r3,r21,1
   42dac:	89075826 	beq	r17,r4,44b10 <___vfprintf_internal_r+0x21f0>
   42db0:	8cbff404 	addi	r18,r17,-48
   42db4:	b486ae36 	bltu	r22,r18,44870 <___vfprintf_internal_r+0x1f50>
   42db8:	0009883a 	mov	r4,zero
   42dbc:	1823883a 	mov	r17,r3
   42dc0:	01400284 	movi	r5,10
   42dc4:	004b4740 	call	4b474 <__mulsi3>
   42dc8:	88c00007 	ldb	r3,0(r17)
   42dcc:	1489883a 	add	r4,r2,r18
   42dd0:	8d400044 	addi	r21,r17,1
   42dd4:	1cbff404 	addi	r18,r3,-48
   42dd8:	a823883a 	mov	r17,r21
   42ddc:	b4bff82e 	bgeu	r22,r18,42dc0 <__alt_data_end+0xfffd6ea0>
   42de0:	1823883a 	mov	r17,r3
   42de4:	2005f616 	blt	r4,zero,445c0 <___vfprintf_internal_r+0x1ca0>
   42de8:	d9002a15 	stw	r4,168(sp)
   42dec:	003f2f06 	br	42aac <__alt_data_end+0xfffd6b8c>
   42df0:	84002014 	ori	r16,r16,128
   42df4:	ac400007 	ldb	r17,0(r21)
   42df8:	003f2b06 	br	42aa8 <__alt_data_end+0xfffd6b88>
   42dfc:	8cbff404 	addi	r18,r17,-48
   42e00:	d8003115 	stw	zero,196(sp)
   42e04:	0009883a 	mov	r4,zero
   42e08:	a823883a 	mov	r17,r21
   42e0c:	01400284 	movi	r5,10
   42e10:	004b4740 	call	4b474 <__mulsi3>
   42e14:	88c00007 	ldb	r3,0(r17)
   42e18:	9089883a 	add	r4,r18,r2
   42e1c:	ad400044 	addi	r21,r21,1
   42e20:	1cbff404 	addi	r18,r3,-48
   42e24:	a823883a 	mov	r17,r21
   42e28:	b4bff82e 	bgeu	r22,r18,42e0c <__alt_data_end+0xfffd6eec>
   42e2c:	1823883a 	mov	r17,r3
   42e30:	d9003115 	stw	r4,196(sp)
   42e34:	003f1d06 	br	42aac <__alt_data_end+0xfffd6b8c>
   42e38:	8025883a 	mov	r18,r16
   42e3c:	dc002903 	ldbu	r16,164(sp)
   42e40:	e011883a 	mov	r8,fp
   42e44:	84003fcc 	andi	r16,r16,255
   42e48:	8007531e 	bne	r16,zero,44b98 <___vfprintf_internal_r+0x2278>
   42e4c:	94800414 	ori	r18,r18,16
   42e50:	9080080c 	andi	r2,r18,32
   42e54:	1003a326 	beq	r2,zero,43ce4 <___vfprintf_internal_r+0x13c4>
   42e58:	d9002e17 	ldw	r4,184(sp)
   42e5c:	20800117 	ldw	r2,4(r4)
   42e60:	24c00017 	ldw	r19,0(r4)
   42e64:	21000204 	addi	r4,r4,8
   42e68:	d9002e15 	stw	r4,184(sp)
   42e6c:	102d883a 	mov	r22,r2
   42e70:	10047316 	blt	r2,zero,44040 <___vfprintf_internal_r+0x1720>
   42e74:	d9002a17 	ldw	r4,168(sp)
   42e78:	df002783 	ldbu	fp,158(sp)
   42e7c:	2003e416 	blt	r4,zero,43e10 <___vfprintf_internal_r+0x14f0>
   42e80:	00ffdfc4 	movi	r3,-129
   42e84:	9d84b03a 	or	r2,r19,r22
   42e88:	90e4703a 	and	r18,r18,r3
   42e8c:	10018026 	beq	r2,zero,43490 <___vfprintf_internal_r+0xb70>
   42e90:	b003ab26 	beq	r22,zero,43d40 <___vfprintf_internal_r+0x1420>
   42e94:	dc402915 	stw	r17,164(sp)
   42e98:	dc001e04 	addi	r16,sp,120
   42e9c:	b023883a 	mov	r17,r22
   42ea0:	402d883a 	mov	r22,r8
   42ea4:	9809883a 	mov	r4,r19
   42ea8:	880b883a 	mov	r5,r17
   42eac:	01800284 	movi	r6,10
   42eb0:	000f883a 	mov	r7,zero
   42eb4:	004acfc0 	call	4acfc <__umoddi3>
   42eb8:	10800c04 	addi	r2,r2,48
   42ebc:	843fffc4 	addi	r16,r16,-1
   42ec0:	9809883a 	mov	r4,r19
   42ec4:	880b883a 	mov	r5,r17
   42ec8:	80800005 	stb	r2,0(r16)
   42ecc:	01800284 	movi	r6,10
   42ed0:	000f883a 	mov	r7,zero
   42ed4:	004a7000 	call	4a700 <__udivdi3>
   42ed8:	1027883a 	mov	r19,r2
   42edc:	10c4b03a 	or	r2,r2,r3
   42ee0:	1823883a 	mov	r17,r3
   42ee4:	103fef1e 	bne	r2,zero,42ea4 <__alt_data_end+0xfffd6f84>
   42ee8:	d8c02817 	ldw	r3,160(sp)
   42eec:	dc402917 	ldw	r17,164(sp)
   42ef0:	b011883a 	mov	r8,r22
   42ef4:	1c07c83a 	sub	r3,r3,r16
   42ef8:	d8c02b15 	stw	r3,172(sp)
   42efc:	00005f06 	br	4307c <___vfprintf_internal_r+0x75c>
   42f00:	8025883a 	mov	r18,r16
   42f04:	dc002903 	ldbu	r16,164(sp)
   42f08:	e011883a 	mov	r8,fp
   42f0c:	84003fcc 	andi	r16,r16,255
   42f10:	80071e1e 	bne	r16,zero,44b8c <___vfprintf_internal_r+0x226c>
   42f14:	9080020c 	andi	r2,r18,8
   42f18:	1004af26 	beq	r2,zero,441d8 <___vfprintf_internal_r+0x18b8>
   42f1c:	d9002e17 	ldw	r4,184(sp)
   42f20:	d9402e17 	ldw	r5,184(sp)
   42f24:	d8802e17 	ldw	r2,184(sp)
   42f28:	21000017 	ldw	r4,0(r4)
   42f2c:	29400117 	ldw	r5,4(r5)
   42f30:	10800204 	addi	r2,r2,8
   42f34:	d9003615 	stw	r4,216(sp)
   42f38:	d9403815 	stw	r5,224(sp)
   42f3c:	d8802e15 	stw	r2,184(sp)
   42f40:	d9003617 	ldw	r4,216(sp)
   42f44:	d9403817 	ldw	r5,224(sp)
   42f48:	da003d15 	stw	r8,244(sp)
   42f4c:	04000044 	movi	r16,1
   42f50:	00488940 	call	48894 <__fpclassifyd>
   42f54:	da003d17 	ldw	r8,244(sp)
   42f58:	1404441e 	bne	r2,r16,4406c <___vfprintf_internal_r+0x174c>
   42f5c:	d9003617 	ldw	r4,216(sp)
   42f60:	d9403817 	ldw	r5,224(sp)
   42f64:	000d883a 	mov	r6,zero
   42f68:	000f883a 	mov	r7,zero
   42f6c:	004c87c0 	call	4c87c <__ledf2>
   42f70:	da003d17 	ldw	r8,244(sp)
   42f74:	1005e316 	blt	r2,zero,44704 <___vfprintf_internal_r+0x1de4>
   42f78:	df002783 	ldbu	fp,158(sp)
   42f7c:	008011c4 	movi	r2,71
   42f80:	1445580e 	bge	r2,r17,444e4 <___vfprintf_internal_r+0x1bc4>
   42f84:	04000174 	movhi	r16,5
   42f88:	8401fa04 	addi	r16,r16,2024
   42f8c:	00c000c4 	movi	r3,3
   42f90:	00bfdfc4 	movi	r2,-129
   42f94:	d8c02915 	stw	r3,164(sp)
   42f98:	90a4703a 	and	r18,r18,r2
   42f9c:	d8c02b15 	stw	r3,172(sp)
   42fa0:	d8002a15 	stw	zero,168(sp)
   42fa4:	d8003215 	stw	zero,200(sp)
   42fa8:	00003a06 	br	43094 <___vfprintf_internal_r+0x774>
   42fac:	84000214 	ori	r16,r16,8
   42fb0:	ac400007 	ldb	r17,0(r21)
   42fb4:	003ebc06 	br	42aa8 <__alt_data_end+0xfffd6b88>
   42fb8:	8025883a 	mov	r18,r16
   42fbc:	dc002903 	ldbu	r16,164(sp)
   42fc0:	e011883a 	mov	r8,fp
   42fc4:	84003fcc 	andi	r16,r16,255
   42fc8:	8007001e 	bne	r16,zero,44bcc <___vfprintf_internal_r+0x22ac>
   42fcc:	94800414 	ori	r18,r18,16
   42fd0:	9080080c 	andi	r2,r18,32
   42fd4:	1002fa26 	beq	r2,zero,43bc0 <___vfprintf_internal_r+0x12a0>
   42fd8:	d9002e17 	ldw	r4,184(sp)
   42fdc:	d9402a17 	ldw	r5,168(sp)
   42fe0:	d8002785 	stb	zero,158(sp)
   42fe4:	20800204 	addi	r2,r4,8
   42fe8:	24c00017 	ldw	r19,0(r4)
   42fec:	25800117 	ldw	r22,4(r4)
   42ff0:	2804b116 	blt	r5,zero,442b8 <___vfprintf_internal_r+0x1998>
   42ff4:	013fdfc4 	movi	r4,-129
   42ff8:	9d86b03a 	or	r3,r19,r22
   42ffc:	d8802e15 	stw	r2,184(sp)
   43000:	9124703a 	and	r18,r18,r4
   43004:	1802fb1e 	bne	r3,zero,43bf4 <___vfprintf_internal_r+0x12d4>
   43008:	d8c02a17 	ldw	r3,168(sp)
   4300c:	0039883a 	mov	fp,zero
   43010:	1805e526 	beq	r3,zero,447a8 <___vfprintf_internal_r+0x1e88>
   43014:	0027883a 	mov	r19,zero
   43018:	002d883a 	mov	r22,zero
   4301c:	dc001e04 	addi	r16,sp,120
   43020:	9806d0fa 	srli	r3,r19,3
   43024:	b008977a 	slli	r4,r22,29
   43028:	b02cd0fa 	srli	r22,r22,3
   4302c:	9cc001cc 	andi	r19,r19,7
   43030:	98800c04 	addi	r2,r19,48
   43034:	843fffc4 	addi	r16,r16,-1
   43038:	20e6b03a 	or	r19,r4,r3
   4303c:	80800005 	stb	r2,0(r16)
   43040:	9d86b03a 	or	r3,r19,r22
   43044:	183ff61e 	bne	r3,zero,43020 <__alt_data_end+0xfffd7100>
   43048:	90c0004c 	andi	r3,r18,1
   4304c:	18014126 	beq	r3,zero,43554 <___vfprintf_internal_r+0xc34>
   43050:	10803fcc 	andi	r2,r2,255
   43054:	1080201c 	xori	r2,r2,128
   43058:	10bfe004 	addi	r2,r2,-128
   4305c:	00c00c04 	movi	r3,48
   43060:	10c13c26 	beq	r2,r3,43554 <___vfprintf_internal_r+0xc34>
   43064:	80ffffc5 	stb	r3,-1(r16)
   43068:	d8c02817 	ldw	r3,160(sp)
   4306c:	80bfffc4 	addi	r2,r16,-1
   43070:	1021883a 	mov	r16,r2
   43074:	1887c83a 	sub	r3,r3,r2
   43078:	d8c02b15 	stw	r3,172(sp)
   4307c:	d8802b17 	ldw	r2,172(sp)
   43080:	d9002a17 	ldw	r4,168(sp)
   43084:	1100010e 	bge	r2,r4,4308c <___vfprintf_internal_r+0x76c>
   43088:	2005883a 	mov	r2,r4
   4308c:	d8802915 	stw	r2,164(sp)
   43090:	d8003215 	stw	zero,200(sp)
   43094:	e7003fcc 	andi	fp,fp,255
   43098:	e700201c 	xori	fp,fp,128
   4309c:	e73fe004 	addi	fp,fp,-128
   430a0:	e0000326 	beq	fp,zero,430b0 <___vfprintf_internal_r+0x790>
   430a4:	d8c02917 	ldw	r3,164(sp)
   430a8:	18c00044 	addi	r3,r3,1
   430ac:	d8c02915 	stw	r3,164(sp)
   430b0:	90c0008c 	andi	r3,r18,2
   430b4:	d8c02c15 	stw	r3,176(sp)
   430b8:	18000326 	beq	r3,zero,430c8 <___vfprintf_internal_r+0x7a8>
   430bc:	d8c02917 	ldw	r3,164(sp)
   430c0:	18c00084 	addi	r3,r3,2
   430c4:	d8c02915 	stw	r3,164(sp)
   430c8:	90c0210c 	andi	r3,r18,132
   430cc:	d8c03015 	stw	r3,192(sp)
   430d0:	1801c51e 	bne	r3,zero,437e8 <___vfprintf_internal_r+0xec8>
   430d4:	d9003117 	ldw	r4,196(sp)
   430d8:	d8c02917 	ldw	r3,164(sp)
   430dc:	20e7c83a 	sub	r19,r4,r3
   430e0:	04c1c10e 	bge	zero,r19,437e8 <___vfprintf_internal_r+0xec8>
   430e4:	02400404 	movi	r9,16
   430e8:	d8c02017 	ldw	r3,128(sp)
   430ec:	d8801f17 	ldw	r2,124(sp)
   430f0:	4cc52f0e 	bge	r9,r19,445b0 <___vfprintf_internal_r+0x1c90>
   430f4:	01400174 	movhi	r5,5
   430f8:	29420d84 	addi	r5,r5,2102
   430fc:	dc403b15 	stw	r17,236(sp)
   43100:	d9403515 	stw	r5,212(sp)
   43104:	9823883a 	mov	r17,r19
   43108:	482d883a 	mov	r22,r9
   4310c:	9027883a 	mov	r19,r18
   43110:	070001c4 	movi	fp,7
   43114:	8025883a 	mov	r18,r16
   43118:	dc002d17 	ldw	r16,180(sp)
   4311c:	00000306 	br	4312c <___vfprintf_internal_r+0x80c>
   43120:	8c7ffc04 	addi	r17,r17,-16
   43124:	42000204 	addi	r8,r8,8
   43128:	b440130e 	bge	r22,r17,43178 <___vfprintf_internal_r+0x858>
   4312c:	01000174 	movhi	r4,5
   43130:	18c00404 	addi	r3,r3,16
   43134:	10800044 	addi	r2,r2,1
   43138:	21020d84 	addi	r4,r4,2102
   4313c:	41000015 	stw	r4,0(r8)
   43140:	45800115 	stw	r22,4(r8)
   43144:	d8c02015 	stw	r3,128(sp)
   43148:	d8801f15 	stw	r2,124(sp)
   4314c:	e0bff40e 	bge	fp,r2,43120 <__alt_data_end+0xfffd7200>
   43150:	d9801e04 	addi	r6,sp,120
   43154:	b80b883a 	mov	r5,r23
   43158:	8009883a 	mov	r4,r16
   4315c:	0048ae00 	call	48ae0 <__sprint_r>
   43160:	103ef31e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43164:	8c7ffc04 	addi	r17,r17,-16
   43168:	d8c02017 	ldw	r3,128(sp)
   4316c:	d8801f17 	ldw	r2,124(sp)
   43170:	da000404 	addi	r8,sp,16
   43174:	b47fed16 	blt	r22,r17,4312c <__alt_data_end+0xfffd720c>
   43178:	9021883a 	mov	r16,r18
   4317c:	9825883a 	mov	r18,r19
   43180:	8827883a 	mov	r19,r17
   43184:	dc403b17 	ldw	r17,236(sp)
   43188:	d9403517 	ldw	r5,212(sp)
   4318c:	98c7883a 	add	r3,r19,r3
   43190:	10800044 	addi	r2,r2,1
   43194:	41400015 	stw	r5,0(r8)
   43198:	44c00115 	stw	r19,4(r8)
   4319c:	d8c02015 	stw	r3,128(sp)
   431a0:	d8801f15 	stw	r2,124(sp)
   431a4:	010001c4 	movi	r4,7
   431a8:	2082c516 	blt	r4,r2,43cc0 <___vfprintf_internal_r+0x13a0>
   431ac:	df002787 	ldb	fp,158(sp)
   431b0:	42000204 	addi	r8,r8,8
   431b4:	e0000c26 	beq	fp,zero,431e8 <___vfprintf_internal_r+0x8c8>
   431b8:	d8801f17 	ldw	r2,124(sp)
   431bc:	d9002784 	addi	r4,sp,158
   431c0:	18c00044 	addi	r3,r3,1
   431c4:	10800044 	addi	r2,r2,1
   431c8:	41000015 	stw	r4,0(r8)
   431cc:	01000044 	movi	r4,1
   431d0:	41000115 	stw	r4,4(r8)
   431d4:	d8c02015 	stw	r3,128(sp)
   431d8:	d8801f15 	stw	r2,124(sp)
   431dc:	010001c4 	movi	r4,7
   431e0:	20825e16 	blt	r4,r2,43b5c <___vfprintf_internal_r+0x123c>
   431e4:	42000204 	addi	r8,r8,8
   431e8:	d8802c17 	ldw	r2,176(sp)
   431ec:	10000c26 	beq	r2,zero,43220 <___vfprintf_internal_r+0x900>
   431f0:	d8801f17 	ldw	r2,124(sp)
   431f4:	d9002704 	addi	r4,sp,156
   431f8:	18c00084 	addi	r3,r3,2
   431fc:	10800044 	addi	r2,r2,1
   43200:	41000015 	stw	r4,0(r8)
   43204:	01000084 	movi	r4,2
   43208:	41000115 	stw	r4,4(r8)
   4320c:	d8c02015 	stw	r3,128(sp)
   43210:	d8801f15 	stw	r2,124(sp)
   43214:	010001c4 	movi	r4,7
   43218:	20825816 	blt	r4,r2,43b7c <___vfprintf_internal_r+0x125c>
   4321c:	42000204 	addi	r8,r8,8
   43220:	d9003017 	ldw	r4,192(sp)
   43224:	00802004 	movi	r2,128
   43228:	2081bb26 	beq	r4,r2,43918 <___vfprintf_internal_r+0xff8>
   4322c:	d9402a17 	ldw	r5,168(sp)
   43230:	d8802b17 	ldw	r2,172(sp)
   43234:	28adc83a 	sub	r22,r5,r2
   43238:	0580310e 	bge	zero,r22,43300 <___vfprintf_internal_r+0x9e0>
   4323c:	07000404 	movi	fp,16
   43240:	d8801f17 	ldw	r2,124(sp)
   43244:	e584360e 	bge	fp,r22,44320 <___vfprintf_internal_r+0x1a00>
   43248:	01400174 	movhi	r5,5
   4324c:	29420984 	addi	r5,r5,2086
   43250:	dc402a15 	stw	r17,168(sp)
   43254:	d9402c15 	stw	r5,176(sp)
   43258:	b023883a 	mov	r17,r22
   4325c:	04c001c4 	movi	r19,7
   43260:	a82d883a 	mov	r22,r21
   43264:	902b883a 	mov	r21,r18
   43268:	8025883a 	mov	r18,r16
   4326c:	dc002d17 	ldw	r16,180(sp)
   43270:	00000306 	br	43280 <___vfprintf_internal_r+0x960>
   43274:	8c7ffc04 	addi	r17,r17,-16
   43278:	42000204 	addi	r8,r8,8
   4327c:	e440110e 	bge	fp,r17,432c4 <___vfprintf_internal_r+0x9a4>
   43280:	18c00404 	addi	r3,r3,16
   43284:	10800044 	addi	r2,r2,1
   43288:	45000015 	stw	r20,0(r8)
   4328c:	47000115 	stw	fp,4(r8)
   43290:	d8c02015 	stw	r3,128(sp)
   43294:	d8801f15 	stw	r2,124(sp)
   43298:	98bff60e 	bge	r19,r2,43274 <__alt_data_end+0xfffd7354>
   4329c:	d9801e04 	addi	r6,sp,120
   432a0:	b80b883a 	mov	r5,r23
   432a4:	8009883a 	mov	r4,r16
   432a8:	0048ae00 	call	48ae0 <__sprint_r>
   432ac:	103ea01e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   432b0:	8c7ffc04 	addi	r17,r17,-16
   432b4:	d8c02017 	ldw	r3,128(sp)
   432b8:	d8801f17 	ldw	r2,124(sp)
   432bc:	da000404 	addi	r8,sp,16
   432c0:	e47fef16 	blt	fp,r17,43280 <__alt_data_end+0xfffd7360>
   432c4:	9021883a 	mov	r16,r18
   432c8:	a825883a 	mov	r18,r21
   432cc:	b02b883a 	mov	r21,r22
   432d0:	882d883a 	mov	r22,r17
   432d4:	dc402a17 	ldw	r17,168(sp)
   432d8:	d9002c17 	ldw	r4,176(sp)
   432dc:	1d87883a 	add	r3,r3,r22
   432e0:	10800044 	addi	r2,r2,1
   432e4:	41000015 	stw	r4,0(r8)
   432e8:	45800115 	stw	r22,4(r8)
   432ec:	d8c02015 	stw	r3,128(sp)
   432f0:	d8801f15 	stw	r2,124(sp)
   432f4:	010001c4 	movi	r4,7
   432f8:	20821016 	blt	r4,r2,43b3c <___vfprintf_internal_r+0x121c>
   432fc:	42000204 	addi	r8,r8,8
   43300:	9080400c 	andi	r2,r18,256
   43304:	10013a1e 	bne	r2,zero,437f0 <___vfprintf_internal_r+0xed0>
   43308:	d9402b17 	ldw	r5,172(sp)
   4330c:	d8801f17 	ldw	r2,124(sp)
   43310:	44000015 	stw	r16,0(r8)
   43314:	1947883a 	add	r3,r3,r5
   43318:	10800044 	addi	r2,r2,1
   4331c:	41400115 	stw	r5,4(r8)
   43320:	d8c02015 	stw	r3,128(sp)
   43324:	d8801f15 	stw	r2,124(sp)
   43328:	010001c4 	movi	r4,7
   4332c:	2081f516 	blt	r4,r2,43b04 <___vfprintf_internal_r+0x11e4>
   43330:	42000204 	addi	r8,r8,8
   43334:	9480010c 	andi	r18,r18,4
   43338:	90003226 	beq	r18,zero,43404 <___vfprintf_internal_r+0xae4>
   4333c:	d9403117 	ldw	r5,196(sp)
   43340:	d8802917 	ldw	r2,164(sp)
   43344:	28a1c83a 	sub	r16,r5,r2
   43348:	04002e0e 	bge	zero,r16,43404 <___vfprintf_internal_r+0xae4>
   4334c:	04400404 	movi	r17,16
   43350:	d8801f17 	ldw	r2,124(sp)
   43354:	8c04c40e 	bge	r17,r16,44668 <___vfprintf_internal_r+0x1d48>
   43358:	01400174 	movhi	r5,5
   4335c:	29420d84 	addi	r5,r5,2102
   43360:	d9403515 	stw	r5,212(sp)
   43364:	048001c4 	movi	r18,7
   43368:	dcc02d17 	ldw	r19,180(sp)
   4336c:	00000306 	br	4337c <___vfprintf_internal_r+0xa5c>
   43370:	843ffc04 	addi	r16,r16,-16
   43374:	42000204 	addi	r8,r8,8
   43378:	8c00130e 	bge	r17,r16,433c8 <___vfprintf_internal_r+0xaa8>
   4337c:	01000174 	movhi	r4,5
   43380:	18c00404 	addi	r3,r3,16
   43384:	10800044 	addi	r2,r2,1
   43388:	21020d84 	addi	r4,r4,2102
   4338c:	41000015 	stw	r4,0(r8)
   43390:	44400115 	stw	r17,4(r8)
   43394:	d8c02015 	stw	r3,128(sp)
   43398:	d8801f15 	stw	r2,124(sp)
   4339c:	90bff40e 	bge	r18,r2,43370 <__alt_data_end+0xfffd7450>
   433a0:	d9801e04 	addi	r6,sp,120
   433a4:	b80b883a 	mov	r5,r23
   433a8:	9809883a 	mov	r4,r19
   433ac:	0048ae00 	call	48ae0 <__sprint_r>
   433b0:	103e5f1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   433b4:	843ffc04 	addi	r16,r16,-16
   433b8:	d8c02017 	ldw	r3,128(sp)
   433bc:	d8801f17 	ldw	r2,124(sp)
   433c0:	da000404 	addi	r8,sp,16
   433c4:	8c3fed16 	blt	r17,r16,4337c <__alt_data_end+0xfffd745c>
   433c8:	d9403517 	ldw	r5,212(sp)
   433cc:	1c07883a 	add	r3,r3,r16
   433d0:	10800044 	addi	r2,r2,1
   433d4:	41400015 	stw	r5,0(r8)
   433d8:	44000115 	stw	r16,4(r8)
   433dc:	d8c02015 	stw	r3,128(sp)
   433e0:	d8801f15 	stw	r2,124(sp)
   433e4:	010001c4 	movi	r4,7
   433e8:	2080060e 	bge	r4,r2,43404 <___vfprintf_internal_r+0xae4>
   433ec:	d9002d17 	ldw	r4,180(sp)
   433f0:	d9801e04 	addi	r6,sp,120
   433f4:	b80b883a 	mov	r5,r23
   433f8:	0048ae00 	call	48ae0 <__sprint_r>
   433fc:	103e4c1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43400:	d8c02017 	ldw	r3,128(sp)
   43404:	d8803117 	ldw	r2,196(sp)
   43408:	d9002917 	ldw	r4,164(sp)
   4340c:	1100010e 	bge	r2,r4,43414 <___vfprintf_internal_r+0xaf4>
   43410:	2005883a 	mov	r2,r4
   43414:	d9402f17 	ldw	r5,188(sp)
   43418:	288b883a 	add	r5,r5,r2
   4341c:	d9402f15 	stw	r5,188(sp)
   43420:	1801c01e 	bne	r3,zero,43b24 <___vfprintf_internal_r+0x1204>
   43424:	a8800007 	ldb	r2,0(r21)
   43428:	d8001f15 	stw	zero,124(sp)
   4342c:	da000404 	addi	r8,sp,16
   43430:	103d751e 	bne	r2,zero,42a08 <__alt_data_end+0xfffd6ae8>
   43434:	a823883a 	mov	r17,r21
   43438:	003d8b06 	br	42a68 <__alt_data_end+0xfffd6b48>
   4343c:	8025883a 	mov	r18,r16
   43440:	dc002903 	ldbu	r16,164(sp)
   43444:	e011883a 	mov	r8,fp
   43448:	84003fcc 	andi	r16,r16,255
   4344c:	8005e51e 	bne	r16,zero,44be4 <___vfprintf_internal_r+0x22c4>
   43450:	94800414 	ori	r18,r18,16
   43454:	9080080c 	andi	r2,r18,32
   43458:	10022b26 	beq	r2,zero,43d08 <___vfprintf_internal_r+0x13e8>
   4345c:	d9002e17 	ldw	r4,184(sp)
   43460:	d9402a17 	ldw	r5,168(sp)
   43464:	d8002785 	stb	zero,158(sp)
   43468:	20c00204 	addi	r3,r4,8
   4346c:	24c00017 	ldw	r19,0(r4)
   43470:	25800117 	ldw	r22,4(r4)
   43474:	28042e16 	blt	r5,zero,44530 <___vfprintf_internal_r+0x1c10>
   43478:	013fdfc4 	movi	r4,-129
   4347c:	9d84b03a 	or	r2,r19,r22
   43480:	d8c02e15 	stw	r3,184(sp)
   43484:	9124703a 	and	r18,r18,r4
   43488:	0039883a 	mov	fp,zero
   4348c:	103e801e 	bne	r2,zero,42e90 <__alt_data_end+0xfffd6f70>
   43490:	d9002a17 	ldw	r4,168(sp)
   43494:	2002e01e 	bne	r4,zero,44018 <___vfprintf_internal_r+0x16f8>
   43498:	d8002a15 	stw	zero,168(sp)
   4349c:	d8002b15 	stw	zero,172(sp)
   434a0:	dc001e04 	addi	r16,sp,120
   434a4:	003ef506 	br	4307c <__alt_data_end+0xfffd715c>
   434a8:	8025883a 	mov	r18,r16
   434ac:	dc002903 	ldbu	r16,164(sp)
   434b0:	e011883a 	mov	r8,fp
   434b4:	84003fcc 	andi	r16,r16,255
   434b8:	8005ba1e 	bne	r16,zero,44ba4 <___vfprintf_internal_r+0x2284>
   434bc:	01000174 	movhi	r4,5
   434c0:	2101fd04 	addi	r4,r4,2036
   434c4:	d9003915 	stw	r4,228(sp)
   434c8:	9080080c 	andi	r2,r18,32
   434cc:	10006126 	beq	r2,zero,43654 <___vfprintf_internal_r+0xd34>
   434d0:	d9402e17 	ldw	r5,184(sp)
   434d4:	2cc00017 	ldw	r19,0(r5)
   434d8:	2d800117 	ldw	r22,4(r5)
   434dc:	29400204 	addi	r5,r5,8
   434e0:	d9402e15 	stw	r5,184(sp)
   434e4:	9080004c 	andi	r2,r18,1
   434e8:	1001ac26 	beq	r2,zero,43b9c <___vfprintf_internal_r+0x127c>
   434ec:	9d84b03a 	or	r2,r19,r22
   434f0:	10038526 	beq	r2,zero,44308 <___vfprintf_internal_r+0x19e8>
   434f4:	d8c02a17 	ldw	r3,168(sp)
   434f8:	00800c04 	movi	r2,48
   434fc:	d8802705 	stb	r2,156(sp)
   43500:	dc402745 	stb	r17,157(sp)
   43504:	d8002785 	stb	zero,158(sp)
   43508:	90800094 	ori	r2,r18,2
   4350c:	18047916 	blt	r3,zero,446f4 <___vfprintf_internal_r+0x1dd4>
   43510:	00bfdfc4 	movi	r2,-129
   43514:	90a4703a 	and	r18,r18,r2
   43518:	94800094 	ori	r18,r18,2
   4351c:	0039883a 	mov	fp,zero
   43520:	d9003917 	ldw	r4,228(sp)
   43524:	dc001e04 	addi	r16,sp,120
   43528:	988003cc 	andi	r2,r19,15
   4352c:	b006973a 	slli	r3,r22,28
   43530:	2085883a 	add	r2,r4,r2
   43534:	9826d13a 	srli	r19,r19,4
   43538:	10800003 	ldbu	r2,0(r2)
   4353c:	b02cd13a 	srli	r22,r22,4
   43540:	843fffc4 	addi	r16,r16,-1
   43544:	1ce6b03a 	or	r19,r3,r19
   43548:	80800005 	stb	r2,0(r16)
   4354c:	9d84b03a 	or	r2,r19,r22
   43550:	103ff51e 	bne	r2,zero,43528 <__alt_data_end+0xfffd7608>
   43554:	d8c02817 	ldw	r3,160(sp)
   43558:	1c07c83a 	sub	r3,r3,r16
   4355c:	d8c02b15 	stw	r3,172(sp)
   43560:	003ec606 	br	4307c <__alt_data_end+0xfffd715c>
   43564:	8025883a 	mov	r18,r16
   43568:	dc002903 	ldbu	r16,164(sp)
   4356c:	e011883a 	mov	r8,fp
   43570:	84003fcc 	andi	r16,r16,255
   43574:	803e9626 	beq	r16,zero,42fd0 <__alt_data_end+0xfffd70b0>
   43578:	d8c02b03 	ldbu	r3,172(sp)
   4357c:	d8c02785 	stb	r3,158(sp)
   43580:	003e9306 	br	42fd0 <__alt_data_end+0xfffd70b0>
   43584:	00c00044 	movi	r3,1
   43588:	d8c02905 	stb	r3,164(sp)
   4358c:	00c00ac4 	movi	r3,43
   43590:	d8c02b05 	stb	r3,172(sp)
   43594:	ac400007 	ldb	r17,0(r21)
   43598:	003d4306 	br	42aa8 <__alt_data_end+0xfffd6b88>
   4359c:	84000814 	ori	r16,r16,32
   435a0:	ac400007 	ldb	r17,0(r21)
   435a4:	003d4006 	br	42aa8 <__alt_data_end+0xfffd6b88>
   435a8:	d8802e17 	ldw	r2,184(sp)
   435ac:	8025883a 	mov	r18,r16
   435b0:	d8002785 	stb	zero,158(sp)
   435b4:	14000017 	ldw	r16,0(r2)
   435b8:	e011883a 	mov	r8,fp
   435bc:	14c00104 	addi	r19,r2,4
   435c0:	80042d26 	beq	r16,zero,44678 <___vfprintf_internal_r+0x1d58>
   435c4:	d8c02a17 	ldw	r3,168(sp)
   435c8:	1803e416 	blt	r3,zero,4455c <___vfprintf_internal_r+0x1c3c>
   435cc:	180d883a 	mov	r6,r3
   435d0:	000b883a 	mov	r5,zero
   435d4:	8009883a 	mov	r4,r16
   435d8:	df003d15 	stw	fp,244(sp)
   435dc:	0046e900 	call	46e90 <memchr>
   435e0:	da003d17 	ldw	r8,244(sp)
   435e4:	10046826 	beq	r2,zero,44788 <___vfprintf_internal_r+0x1e68>
   435e8:	1405c83a 	sub	r2,r2,r16
   435ec:	d8802b15 	stw	r2,172(sp)
   435f0:	1003e016 	blt	r2,zero,44574 <___vfprintf_internal_r+0x1c54>
   435f4:	df002783 	ldbu	fp,158(sp)
   435f8:	d8802915 	stw	r2,164(sp)
   435fc:	dcc02e15 	stw	r19,184(sp)
   43600:	d8002a15 	stw	zero,168(sp)
   43604:	d8003215 	stw	zero,200(sp)
   43608:	003ea206 	br	43094 <__alt_data_end+0xfffd7174>
   4360c:	8025883a 	mov	r18,r16
   43610:	dc002903 	ldbu	r16,164(sp)
   43614:	e011883a 	mov	r8,fp
   43618:	84003fcc 	andi	r16,r16,255
   4361c:	803f8d26 	beq	r16,zero,43454 <__alt_data_end+0xfffd7534>
   43620:	d8c02b03 	ldbu	r3,172(sp)
   43624:	d8c02785 	stb	r3,158(sp)
   43628:	003f8a06 	br	43454 <__alt_data_end+0xfffd7534>
   4362c:	8025883a 	mov	r18,r16
   43630:	dc002903 	ldbu	r16,164(sp)
   43634:	e011883a 	mov	r8,fp
   43638:	84003fcc 	andi	r16,r16,255
   4363c:	8005661e 	bne	r16,zero,44bd8 <___vfprintf_internal_r+0x22b8>
   43640:	01000174 	movhi	r4,5
   43644:	21020204 	addi	r4,r4,2056
   43648:	d9003915 	stw	r4,228(sp)
   4364c:	9080080c 	andi	r2,r18,32
   43650:	103f9f1e 	bne	r2,zero,434d0 <__alt_data_end+0xfffd75b0>
   43654:	9080040c 	andi	r2,r18,16
   43658:	1002eb26 	beq	r2,zero,44208 <___vfprintf_internal_r+0x18e8>
   4365c:	d8802e17 	ldw	r2,184(sp)
   43660:	002d883a 	mov	r22,zero
   43664:	14c00017 	ldw	r19,0(r2)
   43668:	10800104 	addi	r2,r2,4
   4366c:	d8802e15 	stw	r2,184(sp)
   43670:	003f9c06 	br	434e4 <__alt_data_end+0xfffd75c4>
   43674:	d8802b07 	ldb	r2,172(sp)
   43678:	1002e11e 	bne	r2,zero,44200 <___vfprintf_internal_r+0x18e0>
   4367c:	00c00044 	movi	r3,1
   43680:	d8c02905 	stb	r3,164(sp)
   43684:	00c00804 	movi	r3,32
   43688:	d8c02b05 	stb	r3,172(sp)
   4368c:	ac400007 	ldb	r17,0(r21)
   43690:	003d0506 	br	42aa8 <__alt_data_end+0xfffd6b88>
   43694:	84000054 	ori	r16,r16,1
   43698:	ac400007 	ldb	r17,0(r21)
   4369c:	003d0206 	br	42aa8 <__alt_data_end+0xfffd6b88>
   436a0:	8025883a 	mov	r18,r16
   436a4:	dc002903 	ldbu	r16,164(sp)
   436a8:	e011883a 	mov	r8,fp
   436ac:	84003fcc 	andi	r16,r16,255
   436b0:	803de726 	beq	r16,zero,42e50 <__alt_data_end+0xfffd6f30>
   436b4:	d8c02b03 	ldbu	r3,172(sp)
   436b8:	d8c02785 	stb	r3,158(sp)
   436bc:	003de406 	br	42e50 <__alt_data_end+0xfffd6f30>
   436c0:	84001014 	ori	r16,r16,64
   436c4:	ac400007 	ldb	r17,0(r21)
   436c8:	003cf706 	br	42aa8 <__alt_data_end+0xfffd6b88>
   436cc:	ac400007 	ldb	r17,0(r21)
   436d0:	00801b04 	movi	r2,108
   436d4:	88838f26 	beq	r17,r2,44514 <___vfprintf_internal_r+0x1bf4>
   436d8:	84000414 	ori	r16,r16,16
   436dc:	003cf206 	br	42aa8 <__alt_data_end+0xfffd6b88>
   436e0:	8025883a 	mov	r18,r16
   436e4:	dc002903 	ldbu	r16,164(sp)
   436e8:	e011883a 	mov	r8,fp
   436ec:	84003fcc 	andi	r16,r16,255
   436f0:	80053f1e 	bne	r16,zero,44bf0 <___vfprintf_internal_r+0x22d0>
   436f4:	9080080c 	andi	r2,r18,32
   436f8:	1002d226 	beq	r2,zero,44244 <___vfprintf_internal_r+0x1924>
   436fc:	d9002e17 	ldw	r4,184(sp)
   43700:	d9402f17 	ldw	r5,188(sp)
   43704:	20800017 	ldw	r2,0(r4)
   43708:	2807d7fa 	srai	r3,r5,31
   4370c:	21000104 	addi	r4,r4,4
   43710:	d9002e15 	stw	r4,184(sp)
   43714:	11400015 	stw	r5,0(r2)
   43718:	10c00115 	stw	r3,4(r2)
   4371c:	003cb806 	br	42a00 <__alt_data_end+0xfffd6ae0>
   43720:	d8c02e17 	ldw	r3,184(sp)
   43724:	d9002e17 	ldw	r4,184(sp)
   43728:	8025883a 	mov	r18,r16
   4372c:	18800017 	ldw	r2,0(r3)
   43730:	21000104 	addi	r4,r4,4
   43734:	00c00044 	movi	r3,1
   43738:	e011883a 	mov	r8,fp
   4373c:	d8c02915 	stw	r3,164(sp)
   43740:	d8002785 	stb	zero,158(sp)
   43744:	d8801405 	stb	r2,80(sp)
   43748:	d9002e15 	stw	r4,184(sp)
   4374c:	d8c02b15 	stw	r3,172(sp)
   43750:	d8002a15 	stw	zero,168(sp)
   43754:	d8003215 	stw	zero,200(sp)
   43758:	dc001404 	addi	r16,sp,80
   4375c:	0039883a 	mov	fp,zero
   43760:	003e5306 	br	430b0 <__alt_data_end+0xfffd7190>
   43764:	01000174 	movhi	r4,5
   43768:	21020204 	addi	r4,r4,2056
   4376c:	0039883a 	mov	fp,zero
   43770:	d9003915 	stw	r4,228(sp)
   43774:	04401e04 	movi	r17,120
   43778:	003f6906 	br	43520 <__alt_data_end+0xfffd7600>
   4377c:	8025883a 	mov	r18,r16
   43780:	dc002903 	ldbu	r16,164(sp)
   43784:	e011883a 	mov	r8,fp
   43788:	84003fcc 	andi	r16,r16,255
   4378c:	8005081e 	bne	r16,zero,44bb0 <___vfprintf_internal_r+0x2290>
   43790:	883d6126 	beq	r17,zero,42d18 <__alt_data_end+0xfffd6df8>
   43794:	00c00044 	movi	r3,1
   43798:	d8c02915 	stw	r3,164(sp)
   4379c:	dc401405 	stb	r17,80(sp)
   437a0:	d8002785 	stb	zero,158(sp)
   437a4:	003fe906 	br	4374c <__alt_data_end+0xfffd782c>
   437a8:	01400174 	movhi	r5,5
   437ac:	29420204 	addi	r5,r5,2056
   437b0:	d9403915 	stw	r5,228(sp)
   437b4:	d8c02e15 	stw	r3,184(sp)
   437b8:	1025883a 	mov	r18,r2
   437bc:	04401e04 	movi	r17,120
   437c0:	9d84b03a 	or	r2,r19,r22
   437c4:	1000fc1e 	bne	r2,zero,43bb8 <___vfprintf_internal_r+0x1298>
   437c8:	0039883a 	mov	fp,zero
   437cc:	00800084 	movi	r2,2
   437d0:	10803fcc 	andi	r2,r2,255
   437d4:	00c00044 	movi	r3,1
   437d8:	10c20f26 	beq	r2,r3,44018 <___vfprintf_internal_r+0x16f8>
   437dc:	00c00084 	movi	r3,2
   437e0:	10fd3326 	beq	r2,r3,42cb0 <__alt_data_end+0xfffd6d90>
   437e4:	003e0b06 	br	43014 <__alt_data_end+0xfffd70f4>
   437e8:	d8c02017 	ldw	r3,128(sp)
   437ec:	003e7106 	br	431b4 <__alt_data_end+0xfffd7294>
   437f0:	00801944 	movi	r2,101
   437f4:	14407e0e 	bge	r2,r17,439f0 <___vfprintf_internal_r+0x10d0>
   437f8:	d9003617 	ldw	r4,216(sp)
   437fc:	d9403817 	ldw	r5,224(sp)
   43800:	000d883a 	mov	r6,zero
   43804:	000f883a 	mov	r7,zero
   43808:	d8c03c15 	stw	r3,240(sp)
   4380c:	da003d15 	stw	r8,244(sp)
   43810:	004c7180 	call	4c718 <__eqdf2>
   43814:	d8c03c17 	ldw	r3,240(sp)
   43818:	da003d17 	ldw	r8,244(sp)
   4381c:	1000f71e 	bne	r2,zero,43bfc <___vfprintf_internal_r+0x12dc>
   43820:	d8801f17 	ldw	r2,124(sp)
   43824:	01000174 	movhi	r4,5
   43828:	21020904 	addi	r4,r4,2084
   4382c:	18c00044 	addi	r3,r3,1
   43830:	10800044 	addi	r2,r2,1
   43834:	41000015 	stw	r4,0(r8)
   43838:	01000044 	movi	r4,1
   4383c:	41000115 	stw	r4,4(r8)
   43840:	d8c02015 	stw	r3,128(sp)
   43844:	d8801f15 	stw	r2,124(sp)
   43848:	010001c4 	movi	r4,7
   4384c:	2082b816 	blt	r4,r2,44330 <___vfprintf_internal_r+0x1a10>
   43850:	42000204 	addi	r8,r8,8
   43854:	d8802617 	ldw	r2,152(sp)
   43858:	d9403317 	ldw	r5,204(sp)
   4385c:	11400216 	blt	r2,r5,43868 <___vfprintf_internal_r+0xf48>
   43860:	9080004c 	andi	r2,r18,1
   43864:	103eb326 	beq	r2,zero,43334 <__alt_data_end+0xfffd7414>
   43868:	d8803717 	ldw	r2,220(sp)
   4386c:	d9003417 	ldw	r4,208(sp)
   43870:	d9403717 	ldw	r5,220(sp)
   43874:	1887883a 	add	r3,r3,r2
   43878:	d8801f17 	ldw	r2,124(sp)
   4387c:	41000015 	stw	r4,0(r8)
   43880:	41400115 	stw	r5,4(r8)
   43884:	10800044 	addi	r2,r2,1
   43888:	d8c02015 	stw	r3,128(sp)
   4388c:	d8801f15 	stw	r2,124(sp)
   43890:	010001c4 	movi	r4,7
   43894:	20832916 	blt	r4,r2,4453c <___vfprintf_internal_r+0x1c1c>
   43898:	42000204 	addi	r8,r8,8
   4389c:	d8803317 	ldw	r2,204(sp)
   438a0:	143fffc4 	addi	r16,r2,-1
   438a4:	043ea30e 	bge	zero,r16,43334 <__alt_data_end+0xfffd7414>
   438a8:	04400404 	movi	r17,16
   438ac:	d8801f17 	ldw	r2,124(sp)
   438b0:	8c00880e 	bge	r17,r16,43ad4 <___vfprintf_internal_r+0x11b4>
   438b4:	01400174 	movhi	r5,5
   438b8:	29420984 	addi	r5,r5,2086
   438bc:	d9402c15 	stw	r5,176(sp)
   438c0:	058001c4 	movi	r22,7
   438c4:	dcc02d17 	ldw	r19,180(sp)
   438c8:	00000306 	br	438d8 <___vfprintf_internal_r+0xfb8>
   438cc:	42000204 	addi	r8,r8,8
   438d0:	843ffc04 	addi	r16,r16,-16
   438d4:	8c00820e 	bge	r17,r16,43ae0 <___vfprintf_internal_r+0x11c0>
   438d8:	18c00404 	addi	r3,r3,16
   438dc:	10800044 	addi	r2,r2,1
   438e0:	45000015 	stw	r20,0(r8)
   438e4:	44400115 	stw	r17,4(r8)
   438e8:	d8c02015 	stw	r3,128(sp)
   438ec:	d8801f15 	stw	r2,124(sp)
   438f0:	b0bff60e 	bge	r22,r2,438cc <__alt_data_end+0xfffd79ac>
   438f4:	d9801e04 	addi	r6,sp,120
   438f8:	b80b883a 	mov	r5,r23
   438fc:	9809883a 	mov	r4,r19
   43900:	0048ae00 	call	48ae0 <__sprint_r>
   43904:	103d0a1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43908:	d8c02017 	ldw	r3,128(sp)
   4390c:	d8801f17 	ldw	r2,124(sp)
   43910:	da000404 	addi	r8,sp,16
   43914:	003fee06 	br	438d0 <__alt_data_end+0xfffd79b0>
   43918:	d9403117 	ldw	r5,196(sp)
   4391c:	d8802917 	ldw	r2,164(sp)
   43920:	28adc83a 	sub	r22,r5,r2
   43924:	05be410e 	bge	zero,r22,4322c <__alt_data_end+0xfffd730c>
   43928:	07000404 	movi	fp,16
   4392c:	d8801f17 	ldw	r2,124(sp)
   43930:	e5838f0e 	bge	fp,r22,44770 <___vfprintf_internal_r+0x1e50>
   43934:	01400174 	movhi	r5,5
   43938:	29420984 	addi	r5,r5,2086
   4393c:	dc403015 	stw	r17,192(sp)
   43940:	d9402c15 	stw	r5,176(sp)
   43944:	b023883a 	mov	r17,r22
   43948:	04c001c4 	movi	r19,7
   4394c:	a82d883a 	mov	r22,r21
   43950:	902b883a 	mov	r21,r18
   43954:	8025883a 	mov	r18,r16
   43958:	dc002d17 	ldw	r16,180(sp)
   4395c:	00000306 	br	4396c <___vfprintf_internal_r+0x104c>
   43960:	8c7ffc04 	addi	r17,r17,-16
   43964:	42000204 	addi	r8,r8,8
   43968:	e440110e 	bge	fp,r17,439b0 <___vfprintf_internal_r+0x1090>
   4396c:	18c00404 	addi	r3,r3,16
   43970:	10800044 	addi	r2,r2,1
   43974:	45000015 	stw	r20,0(r8)
   43978:	47000115 	stw	fp,4(r8)
   4397c:	d8c02015 	stw	r3,128(sp)
   43980:	d8801f15 	stw	r2,124(sp)
   43984:	98bff60e 	bge	r19,r2,43960 <__alt_data_end+0xfffd7a40>
   43988:	d9801e04 	addi	r6,sp,120
   4398c:	b80b883a 	mov	r5,r23
   43990:	8009883a 	mov	r4,r16
   43994:	0048ae00 	call	48ae0 <__sprint_r>
   43998:	103ce51e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   4399c:	8c7ffc04 	addi	r17,r17,-16
   439a0:	d8c02017 	ldw	r3,128(sp)
   439a4:	d8801f17 	ldw	r2,124(sp)
   439a8:	da000404 	addi	r8,sp,16
   439ac:	e47fef16 	blt	fp,r17,4396c <__alt_data_end+0xfffd7a4c>
   439b0:	9021883a 	mov	r16,r18
   439b4:	a825883a 	mov	r18,r21
   439b8:	b02b883a 	mov	r21,r22
   439bc:	882d883a 	mov	r22,r17
   439c0:	dc403017 	ldw	r17,192(sp)
   439c4:	d9002c17 	ldw	r4,176(sp)
   439c8:	1d87883a 	add	r3,r3,r22
   439cc:	10800044 	addi	r2,r2,1
   439d0:	41000015 	stw	r4,0(r8)
   439d4:	45800115 	stw	r22,4(r8)
   439d8:	d8c02015 	stw	r3,128(sp)
   439dc:	d8801f15 	stw	r2,124(sp)
   439e0:	010001c4 	movi	r4,7
   439e4:	20818e16 	blt	r4,r2,44020 <___vfprintf_internal_r+0x1700>
   439e8:	42000204 	addi	r8,r8,8
   439ec:	003e0f06 	br	4322c <__alt_data_end+0xfffd730c>
   439f0:	d9403317 	ldw	r5,204(sp)
   439f4:	00800044 	movi	r2,1
   439f8:	18c00044 	addi	r3,r3,1
   439fc:	1141530e 	bge	r2,r5,43f4c <___vfprintf_internal_r+0x162c>
   43a00:	dc401f17 	ldw	r17,124(sp)
   43a04:	00800044 	movi	r2,1
   43a08:	40800115 	stw	r2,4(r8)
   43a0c:	8c400044 	addi	r17,r17,1
   43a10:	44000015 	stw	r16,0(r8)
   43a14:	d8c02015 	stw	r3,128(sp)
   43a18:	dc401f15 	stw	r17,124(sp)
   43a1c:	008001c4 	movi	r2,7
   43a20:	14416b16 	blt	r2,r17,43fd0 <___vfprintf_internal_r+0x16b0>
   43a24:	42000204 	addi	r8,r8,8
   43a28:	d8803717 	ldw	r2,220(sp)
   43a2c:	d9003417 	ldw	r4,208(sp)
   43a30:	8c400044 	addi	r17,r17,1
   43a34:	10c7883a 	add	r3,r2,r3
   43a38:	40800115 	stw	r2,4(r8)
   43a3c:	41000015 	stw	r4,0(r8)
   43a40:	d8c02015 	stw	r3,128(sp)
   43a44:	dc401f15 	stw	r17,124(sp)
   43a48:	008001c4 	movi	r2,7
   43a4c:	14416916 	blt	r2,r17,43ff4 <___vfprintf_internal_r+0x16d4>
   43a50:	45800204 	addi	r22,r8,8
   43a54:	d9003617 	ldw	r4,216(sp)
   43a58:	d9403817 	ldw	r5,224(sp)
   43a5c:	000d883a 	mov	r6,zero
   43a60:	000f883a 	mov	r7,zero
   43a64:	d8c03c15 	stw	r3,240(sp)
   43a68:	004c7180 	call	4c718 <__eqdf2>
   43a6c:	d8c03c17 	ldw	r3,240(sp)
   43a70:	1000bc26 	beq	r2,zero,43d64 <___vfprintf_internal_r+0x1444>
   43a74:	d9403317 	ldw	r5,204(sp)
   43a78:	84000044 	addi	r16,r16,1
   43a7c:	8c400044 	addi	r17,r17,1
   43a80:	28bfffc4 	addi	r2,r5,-1
   43a84:	1887883a 	add	r3,r3,r2
   43a88:	b0800115 	stw	r2,4(r22)
   43a8c:	b4000015 	stw	r16,0(r22)
   43a90:	d8c02015 	stw	r3,128(sp)
   43a94:	dc401f15 	stw	r17,124(sp)
   43a98:	008001c4 	movi	r2,7
   43a9c:	14414316 	blt	r2,r17,43fac <___vfprintf_internal_r+0x168c>
   43aa0:	b5800204 	addi	r22,r22,8
   43aa4:	d9003a17 	ldw	r4,232(sp)
   43aa8:	df0022c4 	addi	fp,sp,139
   43aac:	8c400044 	addi	r17,r17,1
   43ab0:	20c7883a 	add	r3,r4,r3
   43ab4:	b7000015 	stw	fp,0(r22)
   43ab8:	b1000115 	stw	r4,4(r22)
   43abc:	d8c02015 	stw	r3,128(sp)
   43ac0:	dc401f15 	stw	r17,124(sp)
   43ac4:	008001c4 	movi	r2,7
   43ac8:	14400e16 	blt	r2,r17,43b04 <___vfprintf_internal_r+0x11e4>
   43acc:	b2000204 	addi	r8,r22,8
   43ad0:	003e1806 	br	43334 <__alt_data_end+0xfffd7414>
   43ad4:	01000174 	movhi	r4,5
   43ad8:	21020984 	addi	r4,r4,2086
   43adc:	d9002c15 	stw	r4,176(sp)
   43ae0:	d9002c17 	ldw	r4,176(sp)
   43ae4:	1c07883a 	add	r3,r3,r16
   43ae8:	44000115 	stw	r16,4(r8)
   43aec:	41000015 	stw	r4,0(r8)
   43af0:	10800044 	addi	r2,r2,1
   43af4:	d8c02015 	stw	r3,128(sp)
   43af8:	d8801f15 	stw	r2,124(sp)
   43afc:	010001c4 	movi	r4,7
   43b00:	20be0b0e 	bge	r4,r2,43330 <__alt_data_end+0xfffd7410>
   43b04:	d9002d17 	ldw	r4,180(sp)
   43b08:	d9801e04 	addi	r6,sp,120
   43b0c:	b80b883a 	mov	r5,r23
   43b10:	0048ae00 	call	48ae0 <__sprint_r>
   43b14:	103c861e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43b18:	d8c02017 	ldw	r3,128(sp)
   43b1c:	da000404 	addi	r8,sp,16
   43b20:	003e0406 	br	43334 <__alt_data_end+0xfffd7414>
   43b24:	d9002d17 	ldw	r4,180(sp)
   43b28:	d9801e04 	addi	r6,sp,120
   43b2c:	b80b883a 	mov	r5,r23
   43b30:	0048ae00 	call	48ae0 <__sprint_r>
   43b34:	103e3b26 	beq	r2,zero,43424 <__alt_data_end+0xfffd7504>
   43b38:	003c7d06 	br	42d30 <__alt_data_end+0xfffd6e10>
   43b3c:	d9002d17 	ldw	r4,180(sp)
   43b40:	d9801e04 	addi	r6,sp,120
   43b44:	b80b883a 	mov	r5,r23
   43b48:	0048ae00 	call	48ae0 <__sprint_r>
   43b4c:	103c781e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43b50:	d8c02017 	ldw	r3,128(sp)
   43b54:	da000404 	addi	r8,sp,16
   43b58:	003de906 	br	43300 <__alt_data_end+0xfffd73e0>
   43b5c:	d9002d17 	ldw	r4,180(sp)
   43b60:	d9801e04 	addi	r6,sp,120
   43b64:	b80b883a 	mov	r5,r23
   43b68:	0048ae00 	call	48ae0 <__sprint_r>
   43b6c:	103c701e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43b70:	d8c02017 	ldw	r3,128(sp)
   43b74:	da000404 	addi	r8,sp,16
   43b78:	003d9b06 	br	431e8 <__alt_data_end+0xfffd72c8>
   43b7c:	d9002d17 	ldw	r4,180(sp)
   43b80:	d9801e04 	addi	r6,sp,120
   43b84:	b80b883a 	mov	r5,r23
   43b88:	0048ae00 	call	48ae0 <__sprint_r>
   43b8c:	103c681e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43b90:	d8c02017 	ldw	r3,128(sp)
   43b94:	da000404 	addi	r8,sp,16
   43b98:	003da106 	br	43220 <__alt_data_end+0xfffd7300>
   43b9c:	d9402a17 	ldw	r5,168(sp)
   43ba0:	d8002785 	stb	zero,158(sp)
   43ba4:	283f0616 	blt	r5,zero,437c0 <__alt_data_end+0xfffd78a0>
   43ba8:	00ffdfc4 	movi	r3,-129
   43bac:	9d84b03a 	or	r2,r19,r22
   43bb0:	90e4703a 	and	r18,r18,r3
   43bb4:	103c3b26 	beq	r2,zero,42ca4 <__alt_data_end+0xfffd6d84>
   43bb8:	0039883a 	mov	fp,zero
   43bbc:	003e5806 	br	43520 <__alt_data_end+0xfffd7600>
   43bc0:	9080040c 	andi	r2,r18,16
   43bc4:	1001b326 	beq	r2,zero,44294 <___vfprintf_internal_r+0x1974>
   43bc8:	d8c02e17 	ldw	r3,184(sp)
   43bcc:	d9002a17 	ldw	r4,168(sp)
   43bd0:	d8002785 	stb	zero,158(sp)
   43bd4:	18800104 	addi	r2,r3,4
   43bd8:	1cc00017 	ldw	r19,0(r3)
   43bdc:	002d883a 	mov	r22,zero
   43be0:	2001b516 	blt	r4,zero,442b8 <___vfprintf_internal_r+0x1998>
   43be4:	00ffdfc4 	movi	r3,-129
   43be8:	d8802e15 	stw	r2,184(sp)
   43bec:	90e4703a 	and	r18,r18,r3
   43bf0:	983d0526 	beq	r19,zero,43008 <__alt_data_end+0xfffd70e8>
   43bf4:	0039883a 	mov	fp,zero
   43bf8:	003d0806 	br	4301c <__alt_data_end+0xfffd70fc>
   43bfc:	dc402617 	ldw	r17,152(sp)
   43c00:	0441d30e 	bge	zero,r17,44350 <___vfprintf_internal_r+0x1a30>
   43c04:	dc403217 	ldw	r17,200(sp)
   43c08:	d8803317 	ldw	r2,204(sp)
   43c0c:	1440010e 	bge	r2,r17,43c14 <___vfprintf_internal_r+0x12f4>
   43c10:	1023883a 	mov	r17,r2
   43c14:	04400a0e 	bge	zero,r17,43c40 <___vfprintf_internal_r+0x1320>
   43c18:	d8801f17 	ldw	r2,124(sp)
   43c1c:	1c47883a 	add	r3,r3,r17
   43c20:	44000015 	stw	r16,0(r8)
   43c24:	10800044 	addi	r2,r2,1
   43c28:	44400115 	stw	r17,4(r8)
   43c2c:	d8c02015 	stw	r3,128(sp)
   43c30:	d8801f15 	stw	r2,124(sp)
   43c34:	010001c4 	movi	r4,7
   43c38:	20826516 	blt	r4,r2,445d0 <___vfprintf_internal_r+0x1cb0>
   43c3c:	42000204 	addi	r8,r8,8
   43c40:	88026116 	blt	r17,zero,445c8 <___vfprintf_internal_r+0x1ca8>
   43c44:	d9003217 	ldw	r4,200(sp)
   43c48:	2463c83a 	sub	r17,r4,r17
   43c4c:	04407b0e 	bge	zero,r17,43e3c <___vfprintf_internal_r+0x151c>
   43c50:	05800404 	movi	r22,16
   43c54:	d8801f17 	ldw	r2,124(sp)
   43c58:	b4419d0e 	bge	r22,r17,442d0 <___vfprintf_internal_r+0x19b0>
   43c5c:	01000174 	movhi	r4,5
   43c60:	21020984 	addi	r4,r4,2086
   43c64:	d9002c15 	stw	r4,176(sp)
   43c68:	070001c4 	movi	fp,7
   43c6c:	dcc02d17 	ldw	r19,180(sp)
   43c70:	00000306 	br	43c80 <___vfprintf_internal_r+0x1360>
   43c74:	42000204 	addi	r8,r8,8
   43c78:	8c7ffc04 	addi	r17,r17,-16
   43c7c:	b441970e 	bge	r22,r17,442dc <___vfprintf_internal_r+0x19bc>
   43c80:	18c00404 	addi	r3,r3,16
   43c84:	10800044 	addi	r2,r2,1
   43c88:	45000015 	stw	r20,0(r8)
   43c8c:	45800115 	stw	r22,4(r8)
   43c90:	d8c02015 	stw	r3,128(sp)
   43c94:	d8801f15 	stw	r2,124(sp)
   43c98:	e0bff60e 	bge	fp,r2,43c74 <__alt_data_end+0xfffd7d54>
   43c9c:	d9801e04 	addi	r6,sp,120
   43ca0:	b80b883a 	mov	r5,r23
   43ca4:	9809883a 	mov	r4,r19
   43ca8:	0048ae00 	call	48ae0 <__sprint_r>
   43cac:	103c201e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43cb0:	d8c02017 	ldw	r3,128(sp)
   43cb4:	d8801f17 	ldw	r2,124(sp)
   43cb8:	da000404 	addi	r8,sp,16
   43cbc:	003fee06 	br	43c78 <__alt_data_end+0xfffd7d58>
   43cc0:	d9002d17 	ldw	r4,180(sp)
   43cc4:	d9801e04 	addi	r6,sp,120
   43cc8:	b80b883a 	mov	r5,r23
   43ccc:	0048ae00 	call	48ae0 <__sprint_r>
   43cd0:	103c171e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43cd4:	d8c02017 	ldw	r3,128(sp)
   43cd8:	df002787 	ldb	fp,158(sp)
   43cdc:	da000404 	addi	r8,sp,16
   43ce0:	003d3406 	br	431b4 <__alt_data_end+0xfffd7294>
   43ce4:	9080040c 	andi	r2,r18,16
   43ce8:	10016126 	beq	r2,zero,44270 <___vfprintf_internal_r+0x1950>
   43cec:	d9402e17 	ldw	r5,184(sp)
   43cf0:	2cc00017 	ldw	r19,0(r5)
   43cf4:	29400104 	addi	r5,r5,4
   43cf8:	d9402e15 	stw	r5,184(sp)
   43cfc:	982dd7fa 	srai	r22,r19,31
   43d00:	b005883a 	mov	r2,r22
   43d04:	003c5a06 	br	42e70 <__alt_data_end+0xfffd6f50>
   43d08:	9080040c 	andi	r2,r18,16
   43d0c:	10003526 	beq	r2,zero,43de4 <___vfprintf_internal_r+0x14c4>
   43d10:	d8c02e17 	ldw	r3,184(sp)
   43d14:	d9002a17 	ldw	r4,168(sp)
   43d18:	d8002785 	stb	zero,158(sp)
   43d1c:	18800104 	addi	r2,r3,4
   43d20:	1cc00017 	ldw	r19,0(r3)
   43d24:	002d883a 	mov	r22,zero
   43d28:	20003716 	blt	r4,zero,43e08 <___vfprintf_internal_r+0x14e8>
   43d2c:	00ffdfc4 	movi	r3,-129
   43d30:	d8802e15 	stw	r2,184(sp)
   43d34:	90e4703a 	and	r18,r18,r3
   43d38:	0039883a 	mov	fp,zero
   43d3c:	983dd426 	beq	r19,zero,43490 <__alt_data_end+0xfffd7570>
   43d40:	00800244 	movi	r2,9
   43d44:	14fc5336 	bltu	r2,r19,42e94 <__alt_data_end+0xfffd6f74>
   43d48:	d8c02817 	ldw	r3,160(sp)
   43d4c:	dc001dc4 	addi	r16,sp,119
   43d50:	9cc00c04 	addi	r19,r19,48
   43d54:	1c07c83a 	sub	r3,r3,r16
   43d58:	dcc01dc5 	stb	r19,119(sp)
   43d5c:	d8c02b15 	stw	r3,172(sp)
   43d60:	003cc606 	br	4307c <__alt_data_end+0xfffd715c>
   43d64:	d8803317 	ldw	r2,204(sp)
   43d68:	143fffc4 	addi	r16,r2,-1
   43d6c:	043f4d0e 	bge	zero,r16,43aa4 <__alt_data_end+0xfffd7b84>
   43d70:	07000404 	movi	fp,16
   43d74:	e400810e 	bge	fp,r16,43f7c <___vfprintf_internal_r+0x165c>
   43d78:	01400174 	movhi	r5,5
   43d7c:	29420984 	addi	r5,r5,2086
   43d80:	d9402c15 	stw	r5,176(sp)
   43d84:	01c001c4 	movi	r7,7
   43d88:	dcc02d17 	ldw	r19,180(sp)
   43d8c:	00000306 	br	43d9c <___vfprintf_internal_r+0x147c>
   43d90:	b5800204 	addi	r22,r22,8
   43d94:	843ffc04 	addi	r16,r16,-16
   43d98:	e4007b0e 	bge	fp,r16,43f88 <___vfprintf_internal_r+0x1668>
   43d9c:	18c00404 	addi	r3,r3,16
   43da0:	8c400044 	addi	r17,r17,1
   43da4:	b5000015 	stw	r20,0(r22)
   43da8:	b7000115 	stw	fp,4(r22)
   43dac:	d8c02015 	stw	r3,128(sp)
   43db0:	dc401f15 	stw	r17,124(sp)
   43db4:	3c7ff60e 	bge	r7,r17,43d90 <__alt_data_end+0xfffd7e70>
   43db8:	d9801e04 	addi	r6,sp,120
   43dbc:	b80b883a 	mov	r5,r23
   43dc0:	9809883a 	mov	r4,r19
   43dc4:	d9c03c15 	stw	r7,240(sp)
   43dc8:	0048ae00 	call	48ae0 <__sprint_r>
   43dcc:	d9c03c17 	ldw	r7,240(sp)
   43dd0:	103bd71e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43dd4:	d8c02017 	ldw	r3,128(sp)
   43dd8:	dc401f17 	ldw	r17,124(sp)
   43ddc:	dd800404 	addi	r22,sp,16
   43de0:	003fec06 	br	43d94 <__alt_data_end+0xfffd7e74>
   43de4:	9080100c 	andi	r2,r18,64
   43de8:	d8002785 	stb	zero,158(sp)
   43dec:	10010e26 	beq	r2,zero,44228 <___vfprintf_internal_r+0x1908>
   43df0:	d9402e17 	ldw	r5,184(sp)
   43df4:	d8c02a17 	ldw	r3,168(sp)
   43df8:	002d883a 	mov	r22,zero
   43dfc:	28800104 	addi	r2,r5,4
   43e00:	2cc0000b 	ldhu	r19,0(r5)
   43e04:	183fc90e 	bge	r3,zero,43d2c <__alt_data_end+0xfffd7e0c>
   43e08:	d8802e15 	stw	r2,184(sp)
   43e0c:	0039883a 	mov	fp,zero
   43e10:	9d84b03a 	or	r2,r19,r22
   43e14:	103c1e1e 	bne	r2,zero,42e90 <__alt_data_end+0xfffd6f70>
   43e18:	00800044 	movi	r2,1
   43e1c:	003e6c06 	br	437d0 <__alt_data_end+0xfffd78b0>
   43e20:	d9002d17 	ldw	r4,180(sp)
   43e24:	d9801e04 	addi	r6,sp,120
   43e28:	b80b883a 	mov	r5,r23
   43e2c:	0048ae00 	call	48ae0 <__sprint_r>
   43e30:	103bbf1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43e34:	d8c02017 	ldw	r3,128(sp)
   43e38:	da000404 	addi	r8,sp,16
   43e3c:	d9003217 	ldw	r4,200(sp)
   43e40:	d8802617 	ldw	r2,152(sp)
   43e44:	d9403317 	ldw	r5,204(sp)
   43e48:	8123883a 	add	r17,r16,r4
   43e4c:	11400216 	blt	r2,r5,43e58 <___vfprintf_internal_r+0x1538>
   43e50:	9100004c 	andi	r4,r18,1
   43e54:	20000d26 	beq	r4,zero,43e8c <___vfprintf_internal_r+0x156c>
   43e58:	d9003717 	ldw	r4,220(sp)
   43e5c:	d9403417 	ldw	r5,208(sp)
   43e60:	1907883a 	add	r3,r3,r4
   43e64:	d9001f17 	ldw	r4,124(sp)
   43e68:	41400015 	stw	r5,0(r8)
   43e6c:	d9403717 	ldw	r5,220(sp)
   43e70:	21000044 	addi	r4,r4,1
   43e74:	d8c02015 	stw	r3,128(sp)
   43e78:	41400115 	stw	r5,4(r8)
   43e7c:	d9001f15 	stw	r4,124(sp)
   43e80:	014001c4 	movi	r5,7
   43e84:	2901e816 	blt	r5,r4,44628 <___vfprintf_internal_r+0x1d08>
   43e88:	42000204 	addi	r8,r8,8
   43e8c:	d9003317 	ldw	r4,204(sp)
   43e90:	8121883a 	add	r16,r16,r4
   43e94:	2085c83a 	sub	r2,r4,r2
   43e98:	8461c83a 	sub	r16,r16,r17
   43e9c:	1400010e 	bge	r2,r16,43ea4 <___vfprintf_internal_r+0x1584>
   43ea0:	1021883a 	mov	r16,r2
   43ea4:	04000a0e 	bge	zero,r16,43ed0 <___vfprintf_internal_r+0x15b0>
   43ea8:	d9001f17 	ldw	r4,124(sp)
   43eac:	1c07883a 	add	r3,r3,r16
   43eb0:	44400015 	stw	r17,0(r8)
   43eb4:	21000044 	addi	r4,r4,1
   43eb8:	44000115 	stw	r16,4(r8)
   43ebc:	d8c02015 	stw	r3,128(sp)
   43ec0:	d9001f15 	stw	r4,124(sp)
   43ec4:	014001c4 	movi	r5,7
   43ec8:	2901fb16 	blt	r5,r4,446b8 <___vfprintf_internal_r+0x1d98>
   43ecc:	42000204 	addi	r8,r8,8
   43ed0:	8001f716 	blt	r16,zero,446b0 <___vfprintf_internal_r+0x1d90>
   43ed4:	1421c83a 	sub	r16,r2,r16
   43ed8:	043d160e 	bge	zero,r16,43334 <__alt_data_end+0xfffd7414>
   43edc:	04400404 	movi	r17,16
   43ee0:	d8801f17 	ldw	r2,124(sp)
   43ee4:	8c3efb0e 	bge	r17,r16,43ad4 <__alt_data_end+0xfffd7bb4>
   43ee8:	01400174 	movhi	r5,5
   43eec:	29420984 	addi	r5,r5,2086
   43ef0:	d9402c15 	stw	r5,176(sp)
   43ef4:	058001c4 	movi	r22,7
   43ef8:	dcc02d17 	ldw	r19,180(sp)
   43efc:	00000306 	br	43f0c <___vfprintf_internal_r+0x15ec>
   43f00:	42000204 	addi	r8,r8,8
   43f04:	843ffc04 	addi	r16,r16,-16
   43f08:	8c3ef50e 	bge	r17,r16,43ae0 <__alt_data_end+0xfffd7bc0>
   43f0c:	18c00404 	addi	r3,r3,16
   43f10:	10800044 	addi	r2,r2,1
   43f14:	45000015 	stw	r20,0(r8)
   43f18:	44400115 	stw	r17,4(r8)
   43f1c:	d8c02015 	stw	r3,128(sp)
   43f20:	d8801f15 	stw	r2,124(sp)
   43f24:	b0bff60e 	bge	r22,r2,43f00 <__alt_data_end+0xfffd7fe0>
   43f28:	d9801e04 	addi	r6,sp,120
   43f2c:	b80b883a 	mov	r5,r23
   43f30:	9809883a 	mov	r4,r19
   43f34:	0048ae00 	call	48ae0 <__sprint_r>
   43f38:	103b7d1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43f3c:	d8c02017 	ldw	r3,128(sp)
   43f40:	d8801f17 	ldw	r2,124(sp)
   43f44:	da000404 	addi	r8,sp,16
   43f48:	003fee06 	br	43f04 <__alt_data_end+0xfffd7fe4>
   43f4c:	9088703a 	and	r4,r18,r2
   43f50:	203eab1e 	bne	r4,zero,43a00 <__alt_data_end+0xfffd7ae0>
   43f54:	dc401f17 	ldw	r17,124(sp)
   43f58:	40800115 	stw	r2,4(r8)
   43f5c:	44000015 	stw	r16,0(r8)
   43f60:	8c400044 	addi	r17,r17,1
   43f64:	d8c02015 	stw	r3,128(sp)
   43f68:	dc401f15 	stw	r17,124(sp)
   43f6c:	008001c4 	movi	r2,7
   43f70:	14400e16 	blt	r2,r17,43fac <___vfprintf_internal_r+0x168c>
   43f74:	45800204 	addi	r22,r8,8
   43f78:	003eca06 	br	43aa4 <__alt_data_end+0xfffd7b84>
   43f7c:	01000174 	movhi	r4,5
   43f80:	21020984 	addi	r4,r4,2086
   43f84:	d9002c15 	stw	r4,176(sp)
   43f88:	d8802c17 	ldw	r2,176(sp)
   43f8c:	1c07883a 	add	r3,r3,r16
   43f90:	8c400044 	addi	r17,r17,1
   43f94:	b0800015 	stw	r2,0(r22)
   43f98:	b4000115 	stw	r16,4(r22)
   43f9c:	d8c02015 	stw	r3,128(sp)
   43fa0:	dc401f15 	stw	r17,124(sp)
   43fa4:	008001c4 	movi	r2,7
   43fa8:	147ebd0e 	bge	r2,r17,43aa0 <__alt_data_end+0xfffd7b80>
   43fac:	d9002d17 	ldw	r4,180(sp)
   43fb0:	d9801e04 	addi	r6,sp,120
   43fb4:	b80b883a 	mov	r5,r23
   43fb8:	0048ae00 	call	48ae0 <__sprint_r>
   43fbc:	103b5c1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43fc0:	d8c02017 	ldw	r3,128(sp)
   43fc4:	dc401f17 	ldw	r17,124(sp)
   43fc8:	dd800404 	addi	r22,sp,16
   43fcc:	003eb506 	br	43aa4 <__alt_data_end+0xfffd7b84>
   43fd0:	d9002d17 	ldw	r4,180(sp)
   43fd4:	d9801e04 	addi	r6,sp,120
   43fd8:	b80b883a 	mov	r5,r23
   43fdc:	0048ae00 	call	48ae0 <__sprint_r>
   43fe0:	103b531e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   43fe4:	d8c02017 	ldw	r3,128(sp)
   43fe8:	dc401f17 	ldw	r17,124(sp)
   43fec:	da000404 	addi	r8,sp,16
   43ff0:	003e8d06 	br	43a28 <__alt_data_end+0xfffd7b08>
   43ff4:	d9002d17 	ldw	r4,180(sp)
   43ff8:	d9801e04 	addi	r6,sp,120
   43ffc:	b80b883a 	mov	r5,r23
   44000:	0048ae00 	call	48ae0 <__sprint_r>
   44004:	103b4a1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44008:	d8c02017 	ldw	r3,128(sp)
   4400c:	dc401f17 	ldw	r17,124(sp)
   44010:	dd800404 	addi	r22,sp,16
   44014:	003e8f06 	br	43a54 <__alt_data_end+0xfffd7b34>
   44018:	0027883a 	mov	r19,zero
   4401c:	003f4a06 	br	43d48 <__alt_data_end+0xfffd7e28>
   44020:	d9002d17 	ldw	r4,180(sp)
   44024:	d9801e04 	addi	r6,sp,120
   44028:	b80b883a 	mov	r5,r23
   4402c:	0048ae00 	call	48ae0 <__sprint_r>
   44030:	103b3f1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44034:	d8c02017 	ldw	r3,128(sp)
   44038:	da000404 	addi	r8,sp,16
   4403c:	003c7b06 	br	4322c <__alt_data_end+0xfffd730c>
   44040:	d9402a17 	ldw	r5,168(sp)
   44044:	04e7c83a 	sub	r19,zero,r19
   44048:	07000b44 	movi	fp,45
   4404c:	9804c03a 	cmpne	r2,r19,zero
   44050:	05adc83a 	sub	r22,zero,r22
   44054:	df002785 	stb	fp,158(sp)
   44058:	b0adc83a 	sub	r22,r22,r2
   4405c:	28017b16 	blt	r5,zero,4464c <___vfprintf_internal_r+0x1d2c>
   44060:	00bfdfc4 	movi	r2,-129
   44064:	90a4703a 	and	r18,r18,r2
   44068:	003b8906 	br	42e90 <__alt_data_end+0xfffd6f70>
   4406c:	d9003617 	ldw	r4,216(sp)
   44070:	d9403817 	ldw	r5,224(sp)
   44074:	da003d15 	stw	r8,244(sp)
   44078:	00488940 	call	48894 <__fpclassifyd>
   4407c:	da003d17 	ldw	r8,244(sp)
   44080:	1000f026 	beq	r2,zero,44444 <___vfprintf_internal_r+0x1b24>
   44084:	d9002a17 	ldw	r4,168(sp)
   44088:	05bff7c4 	movi	r22,-33
   4408c:	00bfffc4 	movi	r2,-1
   44090:	8dac703a 	and	r22,r17,r22
   44094:	20820026 	beq	r4,r2,44898 <___vfprintf_internal_r+0x1f78>
   44098:	008011c4 	movi	r2,71
   4409c:	b081f726 	beq	r22,r2,4487c <___vfprintf_internal_r+0x1f5c>
   440a0:	d9003817 	ldw	r4,224(sp)
   440a4:	90c04014 	ori	r3,r18,256
   440a8:	d8c02c15 	stw	r3,176(sp)
   440ac:	20021516 	blt	r4,zero,44904 <___vfprintf_internal_r+0x1fe4>
   440b0:	dcc03817 	ldw	r19,224(sp)
   440b4:	d8002905 	stb	zero,164(sp)
   440b8:	00801984 	movi	r2,102
   440bc:	8881f926 	beq	r17,r2,448a4 <___vfprintf_internal_r+0x1f84>
   440c0:	00801184 	movi	r2,70
   440c4:	88821c26 	beq	r17,r2,44938 <___vfprintf_internal_r+0x2018>
   440c8:	00801144 	movi	r2,69
   440cc:	b081ef26 	beq	r22,r2,4488c <___vfprintf_internal_r+0x1f6c>
   440d0:	d8c02a17 	ldw	r3,168(sp)
   440d4:	d8802104 	addi	r2,sp,132
   440d8:	d8800315 	stw	r2,12(sp)
   440dc:	d9403617 	ldw	r5,216(sp)
   440e0:	d8802504 	addi	r2,sp,148
   440e4:	d9002d17 	ldw	r4,180(sp)
   440e8:	d8800215 	stw	r2,8(sp)
   440ec:	d8802604 	addi	r2,sp,152
   440f0:	d8c00015 	stw	r3,0(sp)
   440f4:	d8800115 	stw	r2,4(sp)
   440f8:	01c00084 	movi	r7,2
   440fc:	980d883a 	mov	r6,r19
   44100:	d8c03c15 	stw	r3,240(sp)
   44104:	da003d15 	stw	r8,244(sp)
   44108:	00451040 	call	45104 <_dtoa_r>
   4410c:	1021883a 	mov	r16,r2
   44110:	008019c4 	movi	r2,103
   44114:	d8c03c17 	ldw	r3,240(sp)
   44118:	da003d17 	ldw	r8,244(sp)
   4411c:	88817126 	beq	r17,r2,446e4 <___vfprintf_internal_r+0x1dc4>
   44120:	008011c4 	movi	r2,71
   44124:	88829126 	beq	r17,r2,44b6c <___vfprintf_internal_r+0x224c>
   44128:	80f9883a 	add	fp,r16,r3
   4412c:	d9003617 	ldw	r4,216(sp)
   44130:	000d883a 	mov	r6,zero
   44134:	000f883a 	mov	r7,zero
   44138:	980b883a 	mov	r5,r19
   4413c:	da003d15 	stw	r8,244(sp)
   44140:	004c7180 	call	4c718 <__eqdf2>
   44144:	da003d17 	ldw	r8,244(sp)
   44148:	10018d26 	beq	r2,zero,44780 <___vfprintf_internal_r+0x1e60>
   4414c:	d8802117 	ldw	r2,132(sp)
   44150:	1700062e 	bgeu	r2,fp,4416c <___vfprintf_internal_r+0x184c>
   44154:	01000c04 	movi	r4,48
   44158:	10c00044 	addi	r3,r2,1
   4415c:	d8c02115 	stw	r3,132(sp)
   44160:	11000005 	stb	r4,0(r2)
   44164:	d8802117 	ldw	r2,132(sp)
   44168:	173ffb36 	bltu	r2,fp,44158 <__alt_data_end+0xfffd8238>
   4416c:	1405c83a 	sub	r2,r2,r16
   44170:	d8803315 	stw	r2,204(sp)
   44174:	008011c4 	movi	r2,71
   44178:	b0817626 	beq	r22,r2,44754 <___vfprintf_internal_r+0x1e34>
   4417c:	00801944 	movi	r2,101
   44180:	1442800e 	bge	r2,r17,44b84 <___vfprintf_internal_r+0x2264>
   44184:	d8c02617 	ldw	r3,152(sp)
   44188:	00801984 	movi	r2,102
   4418c:	d8c03215 	stw	r3,200(sp)
   44190:	8881fe26 	beq	r17,r2,4498c <___vfprintf_internal_r+0x206c>
   44194:	d8c03217 	ldw	r3,200(sp)
   44198:	d9003317 	ldw	r4,204(sp)
   4419c:	1901dd16 	blt	r3,r4,44914 <___vfprintf_internal_r+0x1ff4>
   441a0:	9480004c 	andi	r18,r18,1
   441a4:	90022b1e 	bne	r18,zero,44a54 <___vfprintf_internal_r+0x2134>
   441a8:	1805883a 	mov	r2,r3
   441ac:	18028316 	blt	r3,zero,44bbc <___vfprintf_internal_r+0x229c>
   441b0:	d8c03217 	ldw	r3,200(sp)
   441b4:	044019c4 	movi	r17,103
   441b8:	d8c02b15 	stw	r3,172(sp)
   441bc:	df002907 	ldb	fp,164(sp)
   441c0:	e001531e 	bne	fp,zero,44710 <___vfprintf_internal_r+0x1df0>
   441c4:	df002783 	ldbu	fp,158(sp)
   441c8:	d8802915 	stw	r2,164(sp)
   441cc:	dc802c17 	ldw	r18,176(sp)
   441d0:	d8002a15 	stw	zero,168(sp)
   441d4:	003baf06 	br	43094 <__alt_data_end+0xfffd7174>
   441d8:	d8c02e17 	ldw	r3,184(sp)
   441dc:	d9002e17 	ldw	r4,184(sp)
   441e0:	d9402e17 	ldw	r5,184(sp)
   441e4:	18c00017 	ldw	r3,0(r3)
   441e8:	21000117 	ldw	r4,4(r4)
   441ec:	29400204 	addi	r5,r5,8
   441f0:	d8c03615 	stw	r3,216(sp)
   441f4:	d9003815 	stw	r4,224(sp)
   441f8:	d9402e15 	stw	r5,184(sp)
   441fc:	003b5006 	br	42f40 <__alt_data_end+0xfffd7020>
   44200:	ac400007 	ldb	r17,0(r21)
   44204:	003a2806 	br	42aa8 <__alt_data_end+0xfffd6b88>
   44208:	9080100c 	andi	r2,r18,64
   4420c:	1000a826 	beq	r2,zero,444b0 <___vfprintf_internal_r+0x1b90>
   44210:	d8c02e17 	ldw	r3,184(sp)
   44214:	002d883a 	mov	r22,zero
   44218:	1cc0000b 	ldhu	r19,0(r3)
   4421c:	18c00104 	addi	r3,r3,4
   44220:	d8c02e15 	stw	r3,184(sp)
   44224:	003caf06 	br	434e4 <__alt_data_end+0xfffd75c4>
   44228:	d9002e17 	ldw	r4,184(sp)
   4422c:	d9402a17 	ldw	r5,168(sp)
   44230:	002d883a 	mov	r22,zero
   44234:	20800104 	addi	r2,r4,4
   44238:	24c00017 	ldw	r19,0(r4)
   4423c:	283ebb0e 	bge	r5,zero,43d2c <__alt_data_end+0xfffd7e0c>
   44240:	003ef106 	br	43e08 <__alt_data_end+0xfffd7ee8>
   44244:	9080040c 	andi	r2,r18,16
   44248:	1000921e 	bne	r2,zero,44494 <___vfprintf_internal_r+0x1b74>
   4424c:	9480100c 	andi	r18,r18,64
   44250:	90013926 	beq	r18,zero,44738 <___vfprintf_internal_r+0x1e18>
   44254:	d9402e17 	ldw	r5,184(sp)
   44258:	d8c02f17 	ldw	r3,188(sp)
   4425c:	28800017 	ldw	r2,0(r5)
   44260:	29400104 	addi	r5,r5,4
   44264:	d9402e15 	stw	r5,184(sp)
   44268:	10c0000d 	sth	r3,0(r2)
   4426c:	0039e406 	br	42a00 <__alt_data_end+0xfffd6ae0>
   44270:	9080100c 	andi	r2,r18,64
   44274:	10008026 	beq	r2,zero,44478 <___vfprintf_internal_r+0x1b58>
   44278:	d8802e17 	ldw	r2,184(sp)
   4427c:	14c0000f 	ldh	r19,0(r2)
   44280:	10800104 	addi	r2,r2,4
   44284:	d8802e15 	stw	r2,184(sp)
   44288:	982dd7fa 	srai	r22,r19,31
   4428c:	b005883a 	mov	r2,r22
   44290:	003af706 	br	42e70 <__alt_data_end+0xfffd6f50>
   44294:	9080100c 	andi	r2,r18,64
   44298:	d8002785 	stb	zero,158(sp)
   4429c:	10008a1e 	bne	r2,zero,444c8 <___vfprintf_internal_r+0x1ba8>
   442a0:	d9002e17 	ldw	r4,184(sp)
   442a4:	d9402a17 	ldw	r5,168(sp)
   442a8:	002d883a 	mov	r22,zero
   442ac:	20800104 	addi	r2,r4,4
   442b0:	24c00017 	ldw	r19,0(r4)
   442b4:	283e4b0e 	bge	r5,zero,43be4 <__alt_data_end+0xfffd7cc4>
   442b8:	9d86b03a 	or	r3,r19,r22
   442bc:	d8802e15 	stw	r2,184(sp)
   442c0:	183e4c1e 	bne	r3,zero,43bf4 <__alt_data_end+0xfffd7cd4>
   442c4:	0039883a 	mov	fp,zero
   442c8:	0005883a 	mov	r2,zero
   442cc:	003d4006 	br	437d0 <__alt_data_end+0xfffd78b0>
   442d0:	01400174 	movhi	r5,5
   442d4:	29420984 	addi	r5,r5,2086
   442d8:	d9402c15 	stw	r5,176(sp)
   442dc:	d9402c17 	ldw	r5,176(sp)
   442e0:	1c47883a 	add	r3,r3,r17
   442e4:	10800044 	addi	r2,r2,1
   442e8:	41400015 	stw	r5,0(r8)
   442ec:	44400115 	stw	r17,4(r8)
   442f0:	d8c02015 	stw	r3,128(sp)
   442f4:	d8801f15 	stw	r2,124(sp)
   442f8:	010001c4 	movi	r4,7
   442fc:	20bec816 	blt	r4,r2,43e20 <__alt_data_end+0xfffd7f00>
   44300:	42000204 	addi	r8,r8,8
   44304:	003ecd06 	br	43e3c <__alt_data_end+0xfffd7f1c>
   44308:	d9002a17 	ldw	r4,168(sp)
   4430c:	d8002785 	stb	zero,158(sp)
   44310:	203d2d16 	blt	r4,zero,437c8 <__alt_data_end+0xfffd78a8>
   44314:	00bfdfc4 	movi	r2,-129
   44318:	90a4703a 	and	r18,r18,r2
   4431c:	003a6106 	br	42ca4 <__alt_data_end+0xfffd6d84>
   44320:	01000174 	movhi	r4,5
   44324:	21020984 	addi	r4,r4,2086
   44328:	d9002c15 	stw	r4,176(sp)
   4432c:	003bea06 	br	432d8 <__alt_data_end+0xfffd73b8>
   44330:	d9002d17 	ldw	r4,180(sp)
   44334:	d9801e04 	addi	r6,sp,120
   44338:	b80b883a 	mov	r5,r23
   4433c:	0048ae00 	call	48ae0 <__sprint_r>
   44340:	103a7b1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44344:	d8c02017 	ldw	r3,128(sp)
   44348:	da000404 	addi	r8,sp,16
   4434c:	003d4106 	br	43854 <__alt_data_end+0xfffd7934>
   44350:	d8801f17 	ldw	r2,124(sp)
   44354:	01400174 	movhi	r5,5
   44358:	01000044 	movi	r4,1
   4435c:	18c00044 	addi	r3,r3,1
   44360:	10800044 	addi	r2,r2,1
   44364:	29420904 	addi	r5,r5,2084
   44368:	41000115 	stw	r4,4(r8)
   4436c:	41400015 	stw	r5,0(r8)
   44370:	d8c02015 	stw	r3,128(sp)
   44374:	d8801f15 	stw	r2,124(sp)
   44378:	010001c4 	movi	r4,7
   4437c:	20805c16 	blt	r4,r2,444f0 <___vfprintf_internal_r+0x1bd0>
   44380:	42000204 	addi	r8,r8,8
   44384:	8800041e 	bne	r17,zero,44398 <___vfprintf_internal_r+0x1a78>
   44388:	d8803317 	ldw	r2,204(sp)
   4438c:	1000021e 	bne	r2,zero,44398 <___vfprintf_internal_r+0x1a78>
   44390:	9080004c 	andi	r2,r18,1
   44394:	103be726 	beq	r2,zero,43334 <__alt_data_end+0xfffd7414>
   44398:	d9003717 	ldw	r4,220(sp)
   4439c:	d8801f17 	ldw	r2,124(sp)
   443a0:	d9403417 	ldw	r5,208(sp)
   443a4:	20c7883a 	add	r3,r4,r3
   443a8:	10800044 	addi	r2,r2,1
   443ac:	41000115 	stw	r4,4(r8)
   443b0:	41400015 	stw	r5,0(r8)
   443b4:	d8c02015 	stw	r3,128(sp)
   443b8:	d8801f15 	stw	r2,124(sp)
   443bc:	010001c4 	movi	r4,7
   443c0:	20812116 	blt	r4,r2,44848 <___vfprintf_internal_r+0x1f28>
   443c4:	42000204 	addi	r8,r8,8
   443c8:	0463c83a 	sub	r17,zero,r17
   443cc:	0440730e 	bge	zero,r17,4459c <___vfprintf_internal_r+0x1c7c>
   443d0:	05800404 	movi	r22,16
   443d4:	b440860e 	bge	r22,r17,445f0 <___vfprintf_internal_r+0x1cd0>
   443d8:	01400174 	movhi	r5,5
   443dc:	29420984 	addi	r5,r5,2086
   443e0:	d9402c15 	stw	r5,176(sp)
   443e4:	070001c4 	movi	fp,7
   443e8:	dcc02d17 	ldw	r19,180(sp)
   443ec:	00000306 	br	443fc <___vfprintf_internal_r+0x1adc>
   443f0:	42000204 	addi	r8,r8,8
   443f4:	8c7ffc04 	addi	r17,r17,-16
   443f8:	b440800e 	bge	r22,r17,445fc <___vfprintf_internal_r+0x1cdc>
   443fc:	18c00404 	addi	r3,r3,16
   44400:	10800044 	addi	r2,r2,1
   44404:	45000015 	stw	r20,0(r8)
   44408:	45800115 	stw	r22,4(r8)
   4440c:	d8c02015 	stw	r3,128(sp)
   44410:	d8801f15 	stw	r2,124(sp)
   44414:	e0bff60e 	bge	fp,r2,443f0 <__alt_data_end+0xfffd84d0>
   44418:	d9801e04 	addi	r6,sp,120
   4441c:	b80b883a 	mov	r5,r23
   44420:	9809883a 	mov	r4,r19
   44424:	0048ae00 	call	48ae0 <__sprint_r>
   44428:	103a411e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   4442c:	d8c02017 	ldw	r3,128(sp)
   44430:	d8801f17 	ldw	r2,124(sp)
   44434:	da000404 	addi	r8,sp,16
   44438:	003fee06 	br	443f4 <__alt_data_end+0xfffd84d4>
   4443c:	00bfffc4 	movi	r2,-1
   44440:	003a3f06 	br	42d40 <__alt_data_end+0xfffd6e20>
   44444:	008011c4 	movi	r2,71
   44448:	1440b816 	blt	r2,r17,4472c <___vfprintf_internal_r+0x1e0c>
   4444c:	04000174 	movhi	r16,5
   44450:	8401fb04 	addi	r16,r16,2028
   44454:	00c000c4 	movi	r3,3
   44458:	00bfdfc4 	movi	r2,-129
   4445c:	d8c02915 	stw	r3,164(sp)
   44460:	90a4703a 	and	r18,r18,r2
   44464:	df002783 	ldbu	fp,158(sp)
   44468:	d8c02b15 	stw	r3,172(sp)
   4446c:	d8002a15 	stw	zero,168(sp)
   44470:	d8003215 	stw	zero,200(sp)
   44474:	003b0706 	br	43094 <__alt_data_end+0xfffd7174>
   44478:	d8c02e17 	ldw	r3,184(sp)
   4447c:	1cc00017 	ldw	r19,0(r3)
   44480:	18c00104 	addi	r3,r3,4
   44484:	d8c02e15 	stw	r3,184(sp)
   44488:	982dd7fa 	srai	r22,r19,31
   4448c:	b005883a 	mov	r2,r22
   44490:	003a7706 	br	42e70 <__alt_data_end+0xfffd6f50>
   44494:	d8c02e17 	ldw	r3,184(sp)
   44498:	d9002f17 	ldw	r4,188(sp)
   4449c:	18800017 	ldw	r2,0(r3)
   444a0:	18c00104 	addi	r3,r3,4
   444a4:	d8c02e15 	stw	r3,184(sp)
   444a8:	11000015 	stw	r4,0(r2)
   444ac:	00395406 	br	42a00 <__alt_data_end+0xfffd6ae0>
   444b0:	d9002e17 	ldw	r4,184(sp)
   444b4:	002d883a 	mov	r22,zero
   444b8:	24c00017 	ldw	r19,0(r4)
   444bc:	21000104 	addi	r4,r4,4
   444c0:	d9002e15 	stw	r4,184(sp)
   444c4:	003c0706 	br	434e4 <__alt_data_end+0xfffd75c4>
   444c8:	d9402e17 	ldw	r5,184(sp)
   444cc:	d8c02a17 	ldw	r3,168(sp)
   444d0:	002d883a 	mov	r22,zero
   444d4:	28800104 	addi	r2,r5,4
   444d8:	2cc0000b 	ldhu	r19,0(r5)
   444dc:	183dc10e 	bge	r3,zero,43be4 <__alt_data_end+0xfffd7cc4>
   444e0:	003f7506 	br	442b8 <__alt_data_end+0xfffd8398>
   444e4:	04000174 	movhi	r16,5
   444e8:	8401f904 	addi	r16,r16,2020
   444ec:	003aa706 	br	42f8c <__alt_data_end+0xfffd706c>
   444f0:	d9002d17 	ldw	r4,180(sp)
   444f4:	d9801e04 	addi	r6,sp,120
   444f8:	b80b883a 	mov	r5,r23
   444fc:	0048ae00 	call	48ae0 <__sprint_r>
   44500:	103a0b1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44504:	dc402617 	ldw	r17,152(sp)
   44508:	d8c02017 	ldw	r3,128(sp)
   4450c:	da000404 	addi	r8,sp,16
   44510:	003f9c06 	br	44384 <__alt_data_end+0xfffd8464>
   44514:	ac400043 	ldbu	r17,1(r21)
   44518:	84000814 	ori	r16,r16,32
   4451c:	ad400044 	addi	r21,r21,1
   44520:	8c403fcc 	andi	r17,r17,255
   44524:	8c40201c 	xori	r17,r17,128
   44528:	8c7fe004 	addi	r17,r17,-128
   4452c:	00395e06 	br	42aa8 <__alt_data_end+0xfffd6b88>
   44530:	d8c02e15 	stw	r3,184(sp)
   44534:	0039883a 	mov	fp,zero
   44538:	003e3506 	br	43e10 <__alt_data_end+0xfffd7ef0>
   4453c:	d9002d17 	ldw	r4,180(sp)
   44540:	d9801e04 	addi	r6,sp,120
   44544:	b80b883a 	mov	r5,r23
   44548:	0048ae00 	call	48ae0 <__sprint_r>
   4454c:	1039f81e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44550:	d8c02017 	ldw	r3,128(sp)
   44554:	da000404 	addi	r8,sp,16
   44558:	003cd006 	br	4389c <__alt_data_end+0xfffd797c>
   4455c:	8009883a 	mov	r4,r16
   44560:	df003d15 	stw	fp,244(sp)
   44564:	00428880 	call	42888 <strlen>
   44568:	d8802b15 	stw	r2,172(sp)
   4456c:	da003d17 	ldw	r8,244(sp)
   44570:	103c200e 	bge	r2,zero,435f4 <__alt_data_end+0xfffd76d4>
   44574:	0005883a 	mov	r2,zero
   44578:	003c1e06 	br	435f4 <__alt_data_end+0xfffd76d4>
   4457c:	d9002d17 	ldw	r4,180(sp)
   44580:	d9801e04 	addi	r6,sp,120
   44584:	b80b883a 	mov	r5,r23
   44588:	0048ae00 	call	48ae0 <__sprint_r>
   4458c:	1039e81e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   44590:	d8c02017 	ldw	r3,128(sp)
   44594:	d8801f17 	ldw	r2,124(sp)
   44598:	da000404 	addi	r8,sp,16
   4459c:	d9403317 	ldw	r5,204(sp)
   445a0:	10800044 	addi	r2,r2,1
   445a4:	44000015 	stw	r16,0(r8)
   445a8:	28c7883a 	add	r3,r5,r3
   445ac:	003b5b06 	br	4331c <__alt_data_end+0xfffd73fc>
   445b0:	01000174 	movhi	r4,5
   445b4:	21020d84 	addi	r4,r4,2102
   445b8:	d9003515 	stw	r4,212(sp)
   445bc:	003af206 	br	43188 <__alt_data_end+0xfffd7268>
   445c0:	013fffc4 	movi	r4,-1
   445c4:	003a0806 	br	42de8 <__alt_data_end+0xfffd6ec8>
   445c8:	0023883a 	mov	r17,zero
   445cc:	003d9d06 	br	43c44 <__alt_data_end+0xfffd7d24>
   445d0:	d9002d17 	ldw	r4,180(sp)
   445d4:	d9801e04 	addi	r6,sp,120
   445d8:	b80b883a 	mov	r5,r23
   445dc:	0048ae00 	call	48ae0 <__sprint_r>
   445e0:	1039d31e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   445e4:	d8c02017 	ldw	r3,128(sp)
   445e8:	da000404 	addi	r8,sp,16
   445ec:	003d9406 	br	43c40 <__alt_data_end+0xfffd7d20>
   445f0:	01000174 	movhi	r4,5
   445f4:	21020984 	addi	r4,r4,2086
   445f8:	d9002c15 	stw	r4,176(sp)
   445fc:	d9002c17 	ldw	r4,176(sp)
   44600:	1c47883a 	add	r3,r3,r17
   44604:	10800044 	addi	r2,r2,1
   44608:	41000015 	stw	r4,0(r8)
   4460c:	44400115 	stw	r17,4(r8)
   44610:	d8c02015 	stw	r3,128(sp)
   44614:	d8801f15 	stw	r2,124(sp)
   44618:	010001c4 	movi	r4,7
   4461c:	20bfd716 	blt	r4,r2,4457c <__alt_data_end+0xfffd865c>
   44620:	42000204 	addi	r8,r8,8
   44624:	003fdd06 	br	4459c <__alt_data_end+0xfffd867c>
   44628:	d9002d17 	ldw	r4,180(sp)
   4462c:	d9801e04 	addi	r6,sp,120
   44630:	b80b883a 	mov	r5,r23
   44634:	0048ae00 	call	48ae0 <__sprint_r>
   44638:	1039bd1e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   4463c:	d8802617 	ldw	r2,152(sp)
   44640:	d8c02017 	ldw	r3,128(sp)
   44644:	da000404 	addi	r8,sp,16
   44648:	003e1006 	br	43e8c <__alt_data_end+0xfffd7f6c>
   4464c:	00800044 	movi	r2,1
   44650:	10803fcc 	andi	r2,r2,255
   44654:	00c00044 	movi	r3,1
   44658:	10fa0d26 	beq	r2,r3,42e90 <__alt_data_end+0xfffd6f70>
   4465c:	00c00084 	movi	r3,2
   44660:	10fbaf26 	beq	r2,r3,43520 <__alt_data_end+0xfffd7600>
   44664:	003a6d06 	br	4301c <__alt_data_end+0xfffd70fc>
   44668:	01000174 	movhi	r4,5
   4466c:	21020d84 	addi	r4,r4,2102
   44670:	d9003515 	stw	r4,212(sp)
   44674:	003b5406 	br	433c8 <__alt_data_end+0xfffd74a8>
   44678:	d8802a17 	ldw	r2,168(sp)
   4467c:	00c00184 	movi	r3,6
   44680:	1880012e 	bgeu	r3,r2,44688 <___vfprintf_internal_r+0x1d68>
   44684:	1805883a 	mov	r2,r3
   44688:	d8802b15 	stw	r2,172(sp)
   4468c:	1000ef16 	blt	r2,zero,44a4c <___vfprintf_internal_r+0x212c>
   44690:	04000174 	movhi	r16,5
   44694:	d8802915 	stw	r2,164(sp)
   44698:	dcc02e15 	stw	r19,184(sp)
   4469c:	d8002a15 	stw	zero,168(sp)
   446a0:	d8003215 	stw	zero,200(sp)
   446a4:	84020704 	addi	r16,r16,2076
   446a8:	0039883a 	mov	fp,zero
   446ac:	003a8006 	br	430b0 <__alt_data_end+0xfffd7190>
   446b0:	0021883a 	mov	r16,zero
   446b4:	003e0706 	br	43ed4 <__alt_data_end+0xfffd7fb4>
   446b8:	d9002d17 	ldw	r4,180(sp)
   446bc:	d9801e04 	addi	r6,sp,120
   446c0:	b80b883a 	mov	r5,r23
   446c4:	0048ae00 	call	48ae0 <__sprint_r>
   446c8:	1039991e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   446cc:	d8802617 	ldw	r2,152(sp)
   446d0:	d9403317 	ldw	r5,204(sp)
   446d4:	d8c02017 	ldw	r3,128(sp)
   446d8:	da000404 	addi	r8,sp,16
   446dc:	2885c83a 	sub	r2,r5,r2
   446e0:	003dfb06 	br	43ed0 <__alt_data_end+0xfffd7fb0>
   446e4:	9080004c 	andi	r2,r18,1
   446e8:	103e8f1e 	bne	r2,zero,44128 <__alt_data_end+0xfffd8208>
   446ec:	d8802117 	ldw	r2,132(sp)
   446f0:	003e9e06 	br	4416c <__alt_data_end+0xfffd824c>
   446f4:	1025883a 	mov	r18,r2
   446f8:	0039883a 	mov	fp,zero
   446fc:	00800084 	movi	r2,2
   44700:	003fd306 	br	44650 <__alt_data_end+0xfffd8730>
   44704:	07000b44 	movi	fp,45
   44708:	df002785 	stb	fp,158(sp)
   4470c:	003a1b06 	br	42f7c <__alt_data_end+0xfffd705c>
   44710:	00c00b44 	movi	r3,45
   44714:	d8c02785 	stb	r3,158(sp)
   44718:	d8802915 	stw	r2,164(sp)
   4471c:	dc802c17 	ldw	r18,176(sp)
   44720:	d8002a15 	stw	zero,168(sp)
   44724:	07000b44 	movi	fp,45
   44728:	003a5e06 	br	430a4 <__alt_data_end+0xfffd7184>
   4472c:	04000174 	movhi	r16,5
   44730:	8401fc04 	addi	r16,r16,2032
   44734:	003f4706 	br	44454 <__alt_data_end+0xfffd8534>
   44738:	d9002e17 	ldw	r4,184(sp)
   4473c:	d9402f17 	ldw	r5,188(sp)
   44740:	20800017 	ldw	r2,0(r4)
   44744:	21000104 	addi	r4,r4,4
   44748:	d9002e15 	stw	r4,184(sp)
   4474c:	11400015 	stw	r5,0(r2)
   44750:	0038ab06 	br	42a00 <__alt_data_end+0xfffd6ae0>
   44754:	dd802617 	ldw	r22,152(sp)
   44758:	00bfff44 	movi	r2,-3
   4475c:	b0801c16 	blt	r22,r2,447d0 <___vfprintf_internal_r+0x1eb0>
   44760:	d9402a17 	ldw	r5,168(sp)
   44764:	2d801a16 	blt	r5,r22,447d0 <___vfprintf_internal_r+0x1eb0>
   44768:	dd803215 	stw	r22,200(sp)
   4476c:	003e8906 	br	44194 <__alt_data_end+0xfffd8274>
   44770:	01000174 	movhi	r4,5
   44774:	21020984 	addi	r4,r4,2086
   44778:	d9002c15 	stw	r4,176(sp)
   4477c:	003c9106 	br	439c4 <__alt_data_end+0xfffd7aa4>
   44780:	e005883a 	mov	r2,fp
   44784:	003e7906 	br	4416c <__alt_data_end+0xfffd824c>
   44788:	d9002a17 	ldw	r4,168(sp)
   4478c:	df002783 	ldbu	fp,158(sp)
   44790:	dcc02e15 	stw	r19,184(sp)
   44794:	d9002915 	stw	r4,164(sp)
   44798:	d9002b15 	stw	r4,172(sp)
   4479c:	d8002a15 	stw	zero,168(sp)
   447a0:	d8003215 	stw	zero,200(sp)
   447a4:	003a3b06 	br	43094 <__alt_data_end+0xfffd7174>
   447a8:	9080004c 	andi	r2,r18,1
   447ac:	0039883a 	mov	fp,zero
   447b0:	10000426 	beq	r2,zero,447c4 <___vfprintf_internal_r+0x1ea4>
   447b4:	00800c04 	movi	r2,48
   447b8:	dc001dc4 	addi	r16,sp,119
   447bc:	d8801dc5 	stb	r2,119(sp)
   447c0:	003b6406 	br	43554 <__alt_data_end+0xfffd7634>
   447c4:	d8002b15 	stw	zero,172(sp)
   447c8:	dc001e04 	addi	r16,sp,120
   447cc:	003a2b06 	br	4307c <__alt_data_end+0xfffd715c>
   447d0:	8c7fff84 	addi	r17,r17,-2
   447d4:	b5bfffc4 	addi	r22,r22,-1
   447d8:	dd802615 	stw	r22,152(sp)
   447dc:	dc4022c5 	stb	r17,139(sp)
   447e0:	b000bf16 	blt	r22,zero,44ae0 <___vfprintf_internal_r+0x21c0>
   447e4:	00800ac4 	movi	r2,43
   447e8:	d8802305 	stb	r2,140(sp)
   447ec:	00800244 	movi	r2,9
   447f0:	15807016 	blt	r2,r22,449b4 <___vfprintf_internal_r+0x2094>
   447f4:	00800c04 	movi	r2,48
   447f8:	b5800c04 	addi	r22,r22,48
   447fc:	d8802345 	stb	r2,141(sp)
   44800:	dd802385 	stb	r22,142(sp)
   44804:	d88023c4 	addi	r2,sp,143
   44808:	df0022c4 	addi	fp,sp,139
   4480c:	d8c03317 	ldw	r3,204(sp)
   44810:	1739c83a 	sub	fp,r2,fp
   44814:	d9003317 	ldw	r4,204(sp)
   44818:	e0c7883a 	add	r3,fp,r3
   4481c:	df003a15 	stw	fp,232(sp)
   44820:	d8c02b15 	stw	r3,172(sp)
   44824:	00800044 	movi	r2,1
   44828:	1100b30e 	bge	r2,r4,44af8 <___vfprintf_internal_r+0x21d8>
   4482c:	d8c02b17 	ldw	r3,172(sp)
   44830:	18c00044 	addi	r3,r3,1
   44834:	d8c02b15 	stw	r3,172(sp)
   44838:	1805883a 	mov	r2,r3
   4483c:	1800ac16 	blt	r3,zero,44af0 <___vfprintf_internal_r+0x21d0>
   44840:	d8003215 	stw	zero,200(sp)
   44844:	003e5d06 	br	441bc <__alt_data_end+0xfffd829c>
   44848:	d9002d17 	ldw	r4,180(sp)
   4484c:	d9801e04 	addi	r6,sp,120
   44850:	b80b883a 	mov	r5,r23
   44854:	0048ae00 	call	48ae0 <__sprint_r>
   44858:	1039351e 	bne	r2,zero,42d30 <__alt_data_end+0xfffd6e10>
   4485c:	dc402617 	ldw	r17,152(sp)
   44860:	d8c02017 	ldw	r3,128(sp)
   44864:	d8801f17 	ldw	r2,124(sp)
   44868:	da000404 	addi	r8,sp,16
   4486c:	003ed606 	br	443c8 <__alt_data_end+0xfffd84a8>
   44870:	182b883a 	mov	r21,r3
   44874:	d8002a15 	stw	zero,168(sp)
   44878:	00388c06 	br	42aac <__alt_data_end+0xfffd6b8c>
   4487c:	d8802a17 	ldw	r2,168(sp)
   44880:	103e071e 	bne	r2,zero,440a0 <__alt_data_end+0xfffd8180>
   44884:	dc002a15 	stw	r16,168(sp)
   44888:	003e0506 	br	440a0 <__alt_data_end+0xfffd8180>
   4488c:	d9002a17 	ldw	r4,168(sp)
   44890:	20c00044 	addi	r3,r4,1
   44894:	003e0f06 	br	440d4 <__alt_data_end+0xfffd81b4>
   44898:	01400184 	movi	r5,6
   4489c:	d9402a15 	stw	r5,168(sp)
   448a0:	003dff06 	br	440a0 <__alt_data_end+0xfffd8180>
   448a4:	d8802104 	addi	r2,sp,132
   448a8:	d8800315 	stw	r2,12(sp)
   448ac:	d8802504 	addi	r2,sp,148
   448b0:	d8800215 	stw	r2,8(sp)
   448b4:	d8802604 	addi	r2,sp,152
   448b8:	d8800115 	stw	r2,4(sp)
   448bc:	d8802a17 	ldw	r2,168(sp)
   448c0:	d9403617 	ldw	r5,216(sp)
   448c4:	d9002d17 	ldw	r4,180(sp)
   448c8:	d8800015 	stw	r2,0(sp)
   448cc:	01c000c4 	movi	r7,3
   448d0:	980d883a 	mov	r6,r19
   448d4:	da003d15 	stw	r8,244(sp)
   448d8:	00451040 	call	45104 <_dtoa_r>
   448dc:	d8c02a17 	ldw	r3,168(sp)
   448e0:	da003d17 	ldw	r8,244(sp)
   448e4:	1021883a 	mov	r16,r2
   448e8:	10f9883a 	add	fp,r2,r3
   448ec:	81000007 	ldb	r4,0(r16)
   448f0:	00800c04 	movi	r2,48
   448f4:	20805e26 	beq	r4,r2,44a70 <___vfprintf_internal_r+0x2150>
   448f8:	d8c02617 	ldw	r3,152(sp)
   448fc:	e0f9883a 	add	fp,fp,r3
   44900:	003e0a06 	br	4412c <__alt_data_end+0xfffd820c>
   44904:	00c00b44 	movi	r3,45
   44908:	24e0003c 	xorhi	r19,r4,32768
   4490c:	d8c02905 	stb	r3,164(sp)
   44910:	003de906 	br	440b8 <__alt_data_end+0xfffd8198>
   44914:	d8c03217 	ldw	r3,200(sp)
   44918:	00c07a0e 	bge	zero,r3,44b04 <___vfprintf_internal_r+0x21e4>
   4491c:	00800044 	movi	r2,1
   44920:	d9003317 	ldw	r4,204(sp)
   44924:	1105883a 	add	r2,r2,r4
   44928:	d8802b15 	stw	r2,172(sp)
   4492c:	10004e16 	blt	r2,zero,44a68 <___vfprintf_internal_r+0x2148>
   44930:	044019c4 	movi	r17,103
   44934:	003e2106 	br	441bc <__alt_data_end+0xfffd829c>
   44938:	d9002a17 	ldw	r4,168(sp)
   4493c:	d8802104 	addi	r2,sp,132
   44940:	d8800315 	stw	r2,12(sp)
   44944:	d9000015 	stw	r4,0(sp)
   44948:	d8802504 	addi	r2,sp,148
   4494c:	d9403617 	ldw	r5,216(sp)
   44950:	d9002d17 	ldw	r4,180(sp)
   44954:	d8800215 	stw	r2,8(sp)
   44958:	d8802604 	addi	r2,sp,152
   4495c:	d8800115 	stw	r2,4(sp)
   44960:	01c000c4 	movi	r7,3
   44964:	980d883a 	mov	r6,r19
   44968:	da003d15 	stw	r8,244(sp)
   4496c:	00451040 	call	45104 <_dtoa_r>
   44970:	d8c02a17 	ldw	r3,168(sp)
   44974:	da003d17 	ldw	r8,244(sp)
   44978:	1021883a 	mov	r16,r2
   4497c:	00801184 	movi	r2,70
   44980:	80f9883a 	add	fp,r16,r3
   44984:	88bfd926 	beq	r17,r2,448ec <__alt_data_end+0xfffd89cc>
   44988:	003de806 	br	4412c <__alt_data_end+0xfffd820c>
   4498c:	d9002a17 	ldw	r4,168(sp)
   44990:	00c04d0e 	bge	zero,r3,44ac8 <___vfprintf_internal_r+0x21a8>
   44994:	2000441e 	bne	r4,zero,44aa8 <___vfprintf_internal_r+0x2188>
   44998:	9480004c 	andi	r18,r18,1
   4499c:	9000421e 	bne	r18,zero,44aa8 <___vfprintf_internal_r+0x2188>
   449a0:	1805883a 	mov	r2,r3
   449a4:	18006f16 	blt	r3,zero,44b64 <___vfprintf_internal_r+0x2244>
   449a8:	d8c03217 	ldw	r3,200(sp)
   449ac:	d8c02b15 	stw	r3,172(sp)
   449b0:	003e0206 	br	441bc <__alt_data_end+0xfffd829c>
   449b4:	df0022c4 	addi	fp,sp,139
   449b8:	dc002a15 	stw	r16,168(sp)
   449bc:	4027883a 	mov	r19,r8
   449c0:	e021883a 	mov	r16,fp
   449c4:	b009883a 	mov	r4,r22
   449c8:	01400284 	movi	r5,10
   449cc:	004b3440 	call	4b344 <__modsi3>
   449d0:	10800c04 	addi	r2,r2,48
   449d4:	843fffc4 	addi	r16,r16,-1
   449d8:	b009883a 	mov	r4,r22
   449dc:	01400284 	movi	r5,10
   449e0:	80800005 	stb	r2,0(r16)
   449e4:	004b2c00 	call	4b2c0 <__divsi3>
   449e8:	102d883a 	mov	r22,r2
   449ec:	00800244 	movi	r2,9
   449f0:	15bff416 	blt	r2,r22,449c4 <__alt_data_end+0xfffd8aa4>
   449f4:	9811883a 	mov	r8,r19
   449f8:	b0800c04 	addi	r2,r22,48
   449fc:	8027883a 	mov	r19,r16
   44a00:	997fffc4 	addi	r5,r19,-1
   44a04:	98bfffc5 	stb	r2,-1(r19)
   44a08:	dc002a17 	ldw	r16,168(sp)
   44a0c:	2f006d2e 	bgeu	r5,fp,44bc4 <___vfprintf_internal_r+0x22a4>
   44a10:	d9c02384 	addi	r7,sp,142
   44a14:	3ccfc83a 	sub	r7,r7,r19
   44a18:	d9002344 	addi	r4,sp,141
   44a1c:	e1cf883a 	add	r7,fp,r7
   44a20:	00000106 	br	44a28 <___vfprintf_internal_r+0x2108>
   44a24:	28800003 	ldbu	r2,0(r5)
   44a28:	20800005 	stb	r2,0(r4)
   44a2c:	21000044 	addi	r4,r4,1
   44a30:	29400044 	addi	r5,r5,1
   44a34:	393ffb1e 	bne	r7,r4,44a24 <__alt_data_end+0xfffd8b04>
   44a38:	d8802304 	addi	r2,sp,140
   44a3c:	14c5c83a 	sub	r2,r2,r19
   44a40:	d8c02344 	addi	r3,sp,141
   44a44:	1885883a 	add	r2,r3,r2
   44a48:	003f7006 	br	4480c <__alt_data_end+0xfffd88ec>
   44a4c:	0005883a 	mov	r2,zero
   44a50:	003f0f06 	br	44690 <__alt_data_end+0xfffd8770>
   44a54:	d8c03217 	ldw	r3,200(sp)
   44a58:	18c00044 	addi	r3,r3,1
   44a5c:	d8c02b15 	stw	r3,172(sp)
   44a60:	1805883a 	mov	r2,r3
   44a64:	183fb20e 	bge	r3,zero,44930 <__alt_data_end+0xfffd8a10>
   44a68:	0005883a 	mov	r2,zero
   44a6c:	003fb006 	br	44930 <__alt_data_end+0xfffd8a10>
   44a70:	d9003617 	ldw	r4,216(sp)
   44a74:	000d883a 	mov	r6,zero
   44a78:	000f883a 	mov	r7,zero
   44a7c:	980b883a 	mov	r5,r19
   44a80:	d8c03c15 	stw	r3,240(sp)
   44a84:	da003d15 	stw	r8,244(sp)
   44a88:	004c7180 	call	4c718 <__eqdf2>
   44a8c:	d8c03c17 	ldw	r3,240(sp)
   44a90:	da003d17 	ldw	r8,244(sp)
   44a94:	103f9826 	beq	r2,zero,448f8 <__alt_data_end+0xfffd89d8>
   44a98:	00800044 	movi	r2,1
   44a9c:	10c7c83a 	sub	r3,r2,r3
   44aa0:	d8c02615 	stw	r3,152(sp)
   44aa4:	003f9506 	br	448fc <__alt_data_end+0xfffd89dc>
   44aa8:	d9002a17 	ldw	r4,168(sp)
   44aac:	d8c03217 	ldw	r3,200(sp)
   44ab0:	20800044 	addi	r2,r4,1
   44ab4:	1885883a 	add	r2,r3,r2
   44ab8:	d8802b15 	stw	r2,172(sp)
   44abc:	103dbf0e 	bge	r2,zero,441bc <__alt_data_end+0xfffd829c>
   44ac0:	0005883a 	mov	r2,zero
   44ac4:	003dbd06 	br	441bc <__alt_data_end+0xfffd829c>
   44ac8:	2000201e 	bne	r4,zero,44b4c <___vfprintf_internal_r+0x222c>
   44acc:	9480004c 	andi	r18,r18,1
   44ad0:	90001e1e 	bne	r18,zero,44b4c <___vfprintf_internal_r+0x222c>
   44ad4:	00800044 	movi	r2,1
   44ad8:	d8802b15 	stw	r2,172(sp)
   44adc:	003db706 	br	441bc <__alt_data_end+0xfffd829c>
   44ae0:	00800b44 	movi	r2,45
   44ae4:	05adc83a 	sub	r22,zero,r22
   44ae8:	d8802305 	stb	r2,140(sp)
   44aec:	003f3f06 	br	447ec <__alt_data_end+0xfffd88cc>
   44af0:	0005883a 	mov	r2,zero
   44af4:	003f5206 	br	44840 <__alt_data_end+0xfffd8920>
   44af8:	90a4703a 	and	r18,r18,r2
   44afc:	903f4e26 	beq	r18,zero,44838 <__alt_data_end+0xfffd8918>
   44b00:	003f4a06 	br	4482c <__alt_data_end+0xfffd890c>
   44b04:	00800084 	movi	r2,2
   44b08:	10c5c83a 	sub	r2,r2,r3
   44b0c:	003f8406 	br	44920 <__alt_data_end+0xfffd8a00>
   44b10:	d9402e17 	ldw	r5,184(sp)
   44b14:	d9002e17 	ldw	r4,184(sp)
   44b18:	ac400043 	ldbu	r17,1(r21)
   44b1c:	29400017 	ldw	r5,0(r5)
   44b20:	20800104 	addi	r2,r4,4
   44b24:	d8802e15 	stw	r2,184(sp)
   44b28:	d9402a15 	stw	r5,168(sp)
   44b2c:	182b883a 	mov	r21,r3
   44b30:	283e7b0e 	bge	r5,zero,44520 <__alt_data_end+0xfffd8600>
   44b34:	8c403fcc 	andi	r17,r17,255
   44b38:	017fffc4 	movi	r5,-1
   44b3c:	8c40201c 	xori	r17,r17,128
   44b40:	d9402a15 	stw	r5,168(sp)
   44b44:	8c7fe004 	addi	r17,r17,-128
   44b48:	0037d706 	br	42aa8 <__alt_data_end+0xfffd6b88>
   44b4c:	d8c02a17 	ldw	r3,168(sp)
   44b50:	18c00084 	addi	r3,r3,2
   44b54:	d8c02b15 	stw	r3,172(sp)
   44b58:	1805883a 	mov	r2,r3
   44b5c:	183d970e 	bge	r3,zero,441bc <__alt_data_end+0xfffd829c>
   44b60:	003fd706 	br	44ac0 <__alt_data_end+0xfffd8ba0>
   44b64:	0005883a 	mov	r2,zero
   44b68:	003f8f06 	br	449a8 <__alt_data_end+0xfffd8a88>
   44b6c:	9080004c 	andi	r2,r18,1
   44b70:	103f821e 	bne	r2,zero,4497c <__alt_data_end+0xfffd8a5c>
   44b74:	d8802117 	ldw	r2,132(sp)
   44b78:	1405c83a 	sub	r2,r2,r16
   44b7c:	d8803315 	stw	r2,204(sp)
   44b80:	b47ef426 	beq	r22,r17,44754 <__alt_data_end+0xfffd8834>
   44b84:	dd802617 	ldw	r22,152(sp)
   44b88:	003f1206 	br	447d4 <__alt_data_end+0xfffd88b4>
   44b8c:	d8c02b03 	ldbu	r3,172(sp)
   44b90:	d8c02785 	stb	r3,158(sp)
   44b94:	0038df06 	br	42f14 <__alt_data_end+0xfffd6ff4>
   44b98:	d8c02b03 	ldbu	r3,172(sp)
   44b9c:	d8c02785 	stb	r3,158(sp)
   44ba0:	0038aa06 	br	42e4c <__alt_data_end+0xfffd6f2c>
   44ba4:	d8c02b03 	ldbu	r3,172(sp)
   44ba8:	d8c02785 	stb	r3,158(sp)
   44bac:	003a4306 	br	434bc <__alt_data_end+0xfffd759c>
   44bb0:	d8c02b03 	ldbu	r3,172(sp)
   44bb4:	d8c02785 	stb	r3,158(sp)
   44bb8:	003af506 	br	43790 <__alt_data_end+0xfffd7870>
   44bbc:	0005883a 	mov	r2,zero
   44bc0:	003d7b06 	br	441b0 <__alt_data_end+0xfffd8290>
   44bc4:	d8802344 	addi	r2,sp,141
   44bc8:	003f1006 	br	4480c <__alt_data_end+0xfffd88ec>
   44bcc:	d8c02b03 	ldbu	r3,172(sp)
   44bd0:	d8c02785 	stb	r3,158(sp)
   44bd4:	0038fd06 	br	42fcc <__alt_data_end+0xfffd70ac>
   44bd8:	d8c02b03 	ldbu	r3,172(sp)
   44bdc:	d8c02785 	stb	r3,158(sp)
   44be0:	003a9706 	br	43640 <__alt_data_end+0xfffd7720>
   44be4:	d8c02b03 	ldbu	r3,172(sp)
   44be8:	d8c02785 	stb	r3,158(sp)
   44bec:	003a1806 	br	43450 <__alt_data_end+0xfffd7530>
   44bf0:	d8c02b03 	ldbu	r3,172(sp)
   44bf4:	d8c02785 	stb	r3,158(sp)
   44bf8:	003abe06 	br	436f4 <__alt_data_end+0xfffd77d4>

00044bfc <__vfprintf_internal>:
   44bfc:	00800174 	movhi	r2,5
   44c00:	10897204 	addi	r2,r2,9672
   44c04:	300f883a 	mov	r7,r6
   44c08:	280d883a 	mov	r6,r5
   44c0c:	200b883a 	mov	r5,r4
   44c10:	11000017 	ldw	r4,0(r2)
   44c14:	00429201 	jmpi	42920 <___vfprintf_internal_r>

00044c18 <__sbprintf>:
   44c18:	2880030b 	ldhu	r2,12(r5)
   44c1c:	2ac01917 	ldw	r11,100(r5)
   44c20:	2a80038b 	ldhu	r10,14(r5)
   44c24:	2a400717 	ldw	r9,28(r5)
   44c28:	2a000917 	ldw	r8,36(r5)
   44c2c:	defee204 	addi	sp,sp,-1144
   44c30:	00c10004 	movi	r3,1024
   44c34:	dc011a15 	stw	r16,1128(sp)
   44c38:	10bfff4c 	andi	r2,r2,65533
   44c3c:	2821883a 	mov	r16,r5
   44c40:	d8cb883a 	add	r5,sp,r3
   44c44:	dc811c15 	stw	r18,1136(sp)
   44c48:	dc411b15 	stw	r17,1132(sp)
   44c4c:	dfc11d15 	stw	ra,1140(sp)
   44c50:	2025883a 	mov	r18,r4
   44c54:	d881030d 	sth	r2,1036(sp)
   44c58:	dac11915 	stw	r11,1124(sp)
   44c5c:	da81038d 	sth	r10,1038(sp)
   44c60:	da410715 	stw	r9,1052(sp)
   44c64:	da010915 	stw	r8,1060(sp)
   44c68:	dec10015 	stw	sp,1024(sp)
   44c6c:	dec10415 	stw	sp,1040(sp)
   44c70:	d8c10215 	stw	r3,1032(sp)
   44c74:	d8c10515 	stw	r3,1044(sp)
   44c78:	d8010615 	stw	zero,1048(sp)
   44c7c:	00429200 	call	42920 <___vfprintf_internal_r>
   44c80:	1023883a 	mov	r17,r2
   44c84:	10000416 	blt	r2,zero,44c98 <__sbprintf+0x80>
   44c88:	d9410004 	addi	r5,sp,1024
   44c8c:	9009883a 	mov	r4,r18
   44c90:	00407380 	call	40738 <_fflush_r>
   44c94:	10000d1e 	bne	r2,zero,44ccc <__sbprintf+0xb4>
   44c98:	d881030b 	ldhu	r2,1036(sp)
   44c9c:	1080100c 	andi	r2,r2,64
   44ca0:	10000326 	beq	r2,zero,44cb0 <__sbprintf+0x98>
   44ca4:	8080030b 	ldhu	r2,12(r16)
   44ca8:	10801014 	ori	r2,r2,64
   44cac:	8080030d 	sth	r2,12(r16)
   44cb0:	8805883a 	mov	r2,r17
   44cb4:	dfc11d17 	ldw	ra,1140(sp)
   44cb8:	dc811c17 	ldw	r18,1136(sp)
   44cbc:	dc411b17 	ldw	r17,1132(sp)
   44cc0:	dc011a17 	ldw	r16,1128(sp)
   44cc4:	dec11e04 	addi	sp,sp,1144
   44cc8:	f800283a 	ret
   44ccc:	047fffc4 	movi	r17,-1
   44cd0:	003ff106 	br	44c98 <__alt_data_end+0xfffd8d78>

00044cd4 <_write_r>:
   44cd4:	defffd04 	addi	sp,sp,-12
   44cd8:	2805883a 	mov	r2,r5
   44cdc:	dc000015 	stw	r16,0(sp)
   44ce0:	04000174 	movhi	r16,5
   44ce4:	dc400115 	stw	r17,4(sp)
   44ce8:	300b883a 	mov	r5,r6
   44cec:	84104704 	addi	r16,r16,16668
   44cf0:	2023883a 	mov	r17,r4
   44cf4:	380d883a 	mov	r6,r7
   44cf8:	1009883a 	mov	r4,r2
   44cfc:	dfc00215 	stw	ra,8(sp)
   44d00:	80000015 	stw	zero,0(r16)
   44d04:	004e8580 	call	4e858 <write>
   44d08:	00ffffc4 	movi	r3,-1
   44d0c:	10c00526 	beq	r2,r3,44d24 <_write_r+0x50>
   44d10:	dfc00217 	ldw	ra,8(sp)
   44d14:	dc400117 	ldw	r17,4(sp)
   44d18:	dc000017 	ldw	r16,0(sp)
   44d1c:	dec00304 	addi	sp,sp,12
   44d20:	f800283a 	ret
   44d24:	80c00017 	ldw	r3,0(r16)
   44d28:	183ff926 	beq	r3,zero,44d10 <__alt_data_end+0xfffd8df0>
   44d2c:	88c00015 	stw	r3,0(r17)
   44d30:	003ff706 	br	44d10 <__alt_data_end+0xfffd8df0>

00044d34 <__swsetup_r>:
   44d34:	00800174 	movhi	r2,5
   44d38:	defffd04 	addi	sp,sp,-12
   44d3c:	10897204 	addi	r2,r2,9672
   44d40:	dc400115 	stw	r17,4(sp)
   44d44:	2023883a 	mov	r17,r4
   44d48:	11000017 	ldw	r4,0(r2)
   44d4c:	dc000015 	stw	r16,0(sp)
   44d50:	dfc00215 	stw	ra,8(sp)
   44d54:	2821883a 	mov	r16,r5
   44d58:	20000226 	beq	r4,zero,44d64 <__swsetup_r+0x30>
   44d5c:	20800e17 	ldw	r2,56(r4)
   44d60:	10003126 	beq	r2,zero,44e28 <__swsetup_r+0xf4>
   44d64:	8080030b 	ldhu	r2,12(r16)
   44d68:	10c0020c 	andi	r3,r2,8
   44d6c:	1009883a 	mov	r4,r2
   44d70:	18000f26 	beq	r3,zero,44db0 <__swsetup_r+0x7c>
   44d74:	80c00417 	ldw	r3,16(r16)
   44d78:	18001526 	beq	r3,zero,44dd0 <__swsetup_r+0x9c>
   44d7c:	1100004c 	andi	r4,r2,1
   44d80:	20001c1e 	bne	r4,zero,44df4 <__swsetup_r+0xc0>
   44d84:	1080008c 	andi	r2,r2,2
   44d88:	1000291e 	bne	r2,zero,44e30 <__swsetup_r+0xfc>
   44d8c:	80800517 	ldw	r2,20(r16)
   44d90:	80800215 	stw	r2,8(r16)
   44d94:	18001c26 	beq	r3,zero,44e08 <__swsetup_r+0xd4>
   44d98:	0005883a 	mov	r2,zero
   44d9c:	dfc00217 	ldw	ra,8(sp)
   44da0:	dc400117 	ldw	r17,4(sp)
   44da4:	dc000017 	ldw	r16,0(sp)
   44da8:	dec00304 	addi	sp,sp,12
   44dac:	f800283a 	ret
   44db0:	2080040c 	andi	r2,r4,16
   44db4:	10002e26 	beq	r2,zero,44e70 <__swsetup_r+0x13c>
   44db8:	2080010c 	andi	r2,r4,4
   44dbc:	10001e1e 	bne	r2,zero,44e38 <__swsetup_r+0x104>
   44dc0:	80c00417 	ldw	r3,16(r16)
   44dc4:	20800214 	ori	r2,r4,8
   44dc8:	8080030d 	sth	r2,12(r16)
   44dcc:	183feb1e 	bne	r3,zero,44d7c <__alt_data_end+0xfffd8e5c>
   44dd0:	1100a00c 	andi	r4,r2,640
   44dd4:	01408004 	movi	r5,512
   44dd8:	217fe826 	beq	r4,r5,44d7c <__alt_data_end+0xfffd8e5c>
   44ddc:	800b883a 	mov	r5,r16
   44de0:	8809883a 	mov	r4,r17
   44de4:	004185c0 	call	4185c <__smakebuf_r>
   44de8:	8080030b 	ldhu	r2,12(r16)
   44dec:	80c00417 	ldw	r3,16(r16)
   44df0:	003fe206 	br	44d7c <__alt_data_end+0xfffd8e5c>
   44df4:	80800517 	ldw	r2,20(r16)
   44df8:	80000215 	stw	zero,8(r16)
   44dfc:	0085c83a 	sub	r2,zero,r2
   44e00:	80800615 	stw	r2,24(r16)
   44e04:	183fe41e 	bne	r3,zero,44d98 <__alt_data_end+0xfffd8e78>
   44e08:	80c0030b 	ldhu	r3,12(r16)
   44e0c:	0005883a 	mov	r2,zero
   44e10:	1900200c 	andi	r4,r3,128
   44e14:	203fe126 	beq	r4,zero,44d9c <__alt_data_end+0xfffd8e7c>
   44e18:	18c01014 	ori	r3,r3,64
   44e1c:	80c0030d 	sth	r3,12(r16)
   44e20:	00bfffc4 	movi	r2,-1
   44e24:	003fdd06 	br	44d9c <__alt_data_end+0xfffd8e7c>
   44e28:	0040b240 	call	40b24 <__sinit>
   44e2c:	003fcd06 	br	44d64 <__alt_data_end+0xfffd8e44>
   44e30:	0005883a 	mov	r2,zero
   44e34:	003fd606 	br	44d90 <__alt_data_end+0xfffd8e70>
   44e38:	81400c17 	ldw	r5,48(r16)
   44e3c:	28000626 	beq	r5,zero,44e58 <__swsetup_r+0x124>
   44e40:	80801004 	addi	r2,r16,64
   44e44:	28800326 	beq	r5,r2,44e54 <__swsetup_r+0x120>
   44e48:	8809883a 	mov	r4,r17
   44e4c:	0040df00 	call	40df0 <_free_r>
   44e50:	8100030b 	ldhu	r4,12(r16)
   44e54:	80000c15 	stw	zero,48(r16)
   44e58:	80c00417 	ldw	r3,16(r16)
   44e5c:	00bff6c4 	movi	r2,-37
   44e60:	1108703a 	and	r4,r2,r4
   44e64:	80000115 	stw	zero,4(r16)
   44e68:	80c00015 	stw	r3,0(r16)
   44e6c:	003fd506 	br	44dc4 <__alt_data_end+0xfffd8ea4>
   44e70:	00800244 	movi	r2,9
   44e74:	88800015 	stw	r2,0(r17)
   44e78:	20801014 	ori	r2,r4,64
   44e7c:	8080030d 	sth	r2,12(r16)
   44e80:	00bfffc4 	movi	r2,-1
   44e84:	003fc506 	br	44d9c <__alt_data_end+0xfffd8e7c>

00044e88 <_close_r>:
   44e88:	defffd04 	addi	sp,sp,-12
   44e8c:	dc000015 	stw	r16,0(sp)
   44e90:	04000174 	movhi	r16,5
   44e94:	dc400115 	stw	r17,4(sp)
   44e98:	84104704 	addi	r16,r16,16668
   44e9c:	2023883a 	mov	r17,r4
   44ea0:	2809883a 	mov	r4,r5
   44ea4:	dfc00215 	stw	ra,8(sp)
   44ea8:	80000015 	stw	zero,0(r16)
   44eac:	004dd7c0 	call	4dd7c <close>
   44eb0:	00ffffc4 	movi	r3,-1
   44eb4:	10c00526 	beq	r2,r3,44ecc <_close_r+0x44>
   44eb8:	dfc00217 	ldw	ra,8(sp)
   44ebc:	dc400117 	ldw	r17,4(sp)
   44ec0:	dc000017 	ldw	r16,0(sp)
   44ec4:	dec00304 	addi	sp,sp,12
   44ec8:	f800283a 	ret
   44ecc:	80c00017 	ldw	r3,0(r16)
   44ed0:	183ff926 	beq	r3,zero,44eb8 <__alt_data_end+0xfffd8f98>
   44ed4:	88c00015 	stw	r3,0(r17)
   44ed8:	003ff706 	br	44eb8 <__alt_data_end+0xfffd8f98>

00044edc <quorem>:
   44edc:	defff204 	addi	sp,sp,-56
   44ee0:	ddc00b15 	stw	r23,44(sp)
   44ee4:	20800417 	ldw	r2,16(r4)
   44ee8:	2dc00417 	ldw	r23,16(r5)
   44eec:	dfc00d15 	stw	ra,52(sp)
   44ef0:	df000c15 	stw	fp,48(sp)
   44ef4:	dd800a15 	stw	r22,40(sp)
   44ef8:	dd400915 	stw	r21,36(sp)
   44efc:	dd000815 	stw	r20,32(sp)
   44f00:	dcc00715 	stw	r19,28(sp)
   44f04:	dc800615 	stw	r18,24(sp)
   44f08:	dc400515 	stw	r17,20(sp)
   44f0c:	dc000415 	stw	r16,16(sp)
   44f10:	15c07a16 	blt	r2,r23,450fc <quorem+0x220>
   44f14:	bdffffc4 	addi	r23,r23,-1
   44f18:	bde9883a 	add	r20,r23,r23
   44f1c:	28c00504 	addi	r3,r5,20
   44f20:	a529883a 	add	r20,r20,r20
   44f24:	1d39883a 	add	fp,r3,r20
   44f28:	24c00504 	addi	r19,r4,20
   44f2c:	d9400215 	stw	r5,8(sp)
   44f30:	9d29883a 	add	r20,r19,r20
   44f34:	e1400017 	ldw	r5,0(fp)
   44f38:	d9000015 	stw	r4,0(sp)
   44f3c:	a1000017 	ldw	r4,0(r20)
   44f40:	29400044 	addi	r5,r5,1
   44f44:	d8c00115 	stw	r3,4(sp)
   44f48:	dd000315 	stw	r20,12(sp)
   44f4c:	004b3b80 	call	4b3b8 <__udivsi3>
   44f50:	1025883a 	mov	r18,r2
   44f54:	10003026 	beq	r2,zero,45018 <quorem+0x13c>
   44f58:	dc400117 	ldw	r17,4(sp)
   44f5c:	9829883a 	mov	r20,r19
   44f60:	002d883a 	mov	r22,zero
   44f64:	0021883a 	mov	r16,zero
   44f68:	8d400017 	ldw	r21,0(r17)
   44f6c:	900b883a 	mov	r5,r18
   44f70:	8c400104 	addi	r17,r17,4
   44f74:	a93fffcc 	andi	r4,r21,65535
   44f78:	004b4740 	call	4b474 <__mulsi3>
   44f7c:	a808d43a 	srli	r4,r21,16
   44f80:	900b883a 	mov	r5,r18
   44f84:	15ad883a 	add	r22,r2,r22
   44f88:	004b4740 	call	4b474 <__mulsi3>
   44f8c:	a1000017 	ldw	r4,0(r20)
   44f90:	b00cd43a 	srli	r6,r22,16
   44f94:	b0ffffcc 	andi	r3,r22,65535
   44f98:	217fffcc 	andi	r5,r4,65535
   44f9c:	2c21883a 	add	r16,r5,r16
   44fa0:	80c7c83a 	sub	r3,r16,r3
   44fa4:	2008d43a 	srli	r4,r4,16
   44fa8:	1185883a 	add	r2,r2,r6
   44fac:	1821d43a 	srai	r16,r3,16
   44fb0:	117fffcc 	andi	r5,r2,65535
   44fb4:	2149c83a 	sub	r4,r4,r5
   44fb8:	2421883a 	add	r16,r4,r16
   44fbc:	8008943a 	slli	r4,r16,16
   44fc0:	18ffffcc 	andi	r3,r3,65535
   44fc4:	102cd43a 	srli	r22,r2,16
   44fc8:	20c8b03a 	or	r4,r4,r3
   44fcc:	a1000015 	stw	r4,0(r20)
   44fd0:	8021d43a 	srai	r16,r16,16
   44fd4:	a5000104 	addi	r20,r20,4
   44fd8:	e47fe32e 	bgeu	fp,r17,44f68 <__alt_data_end+0xfffd9048>
   44fdc:	d8c00317 	ldw	r3,12(sp)
   44fe0:	18800017 	ldw	r2,0(r3)
   44fe4:	10000c1e 	bne	r2,zero,45018 <quorem+0x13c>
   44fe8:	18bfff04 	addi	r2,r3,-4
   44fec:	9880082e 	bgeu	r19,r2,45010 <quorem+0x134>
   44ff0:	18ffff17 	ldw	r3,-4(r3)
   44ff4:	18000326 	beq	r3,zero,45004 <quorem+0x128>
   44ff8:	00000506 	br	45010 <quorem+0x134>
   44ffc:	10c00017 	ldw	r3,0(r2)
   45000:	1800031e 	bne	r3,zero,45010 <quorem+0x134>
   45004:	10bfff04 	addi	r2,r2,-4
   45008:	bdffffc4 	addi	r23,r23,-1
   4500c:	98bffb36 	bltu	r19,r2,44ffc <__alt_data_end+0xfffd90dc>
   45010:	d8c00017 	ldw	r3,0(sp)
   45014:	1dc00415 	stw	r23,16(r3)
   45018:	d9400217 	ldw	r5,8(sp)
   4501c:	d9000017 	ldw	r4,0(sp)
   45020:	0047b9c0 	call	47b9c <__mcmp>
   45024:	10002816 	blt	r2,zero,450c8 <quorem+0x1ec>
   45028:	dc400117 	ldw	r17,4(sp)
   4502c:	94800044 	addi	r18,r18,1
   45030:	980d883a 	mov	r6,r19
   45034:	0007883a 	mov	r3,zero
   45038:	31000017 	ldw	r4,0(r6)
   4503c:	89400017 	ldw	r5,0(r17)
   45040:	31800104 	addi	r6,r6,4
   45044:	20bfffcc 	andi	r2,r4,65535
   45048:	10c7883a 	add	r3,r2,r3
   4504c:	28bfffcc 	andi	r2,r5,65535
   45050:	1885c83a 	sub	r2,r3,r2
   45054:	280ad43a 	srli	r5,r5,16
   45058:	2008d43a 	srli	r4,r4,16
   4505c:	1007d43a 	srai	r3,r2,16
   45060:	10bfffcc 	andi	r2,r2,65535
   45064:	2149c83a 	sub	r4,r4,r5
   45068:	20c9883a 	add	r4,r4,r3
   4506c:	200a943a 	slli	r5,r4,16
   45070:	8c400104 	addi	r17,r17,4
   45074:	2007d43a 	srai	r3,r4,16
   45078:	2884b03a 	or	r2,r5,r2
   4507c:	30bfff15 	stw	r2,-4(r6)
   45080:	e47fed2e 	bgeu	fp,r17,45038 <__alt_data_end+0xfffd9118>
   45084:	bdc5883a 	add	r2,r23,r23
   45088:	1085883a 	add	r2,r2,r2
   4508c:	9887883a 	add	r3,r19,r2
   45090:	18800017 	ldw	r2,0(r3)
   45094:	10000c1e 	bne	r2,zero,450c8 <quorem+0x1ec>
   45098:	18bfff04 	addi	r2,r3,-4
   4509c:	9880082e 	bgeu	r19,r2,450c0 <quorem+0x1e4>
   450a0:	18ffff17 	ldw	r3,-4(r3)
   450a4:	18000326 	beq	r3,zero,450b4 <quorem+0x1d8>
   450a8:	00000506 	br	450c0 <quorem+0x1e4>
   450ac:	10c00017 	ldw	r3,0(r2)
   450b0:	1800031e 	bne	r3,zero,450c0 <quorem+0x1e4>
   450b4:	10bfff04 	addi	r2,r2,-4
   450b8:	bdffffc4 	addi	r23,r23,-1
   450bc:	98bffb36 	bltu	r19,r2,450ac <__alt_data_end+0xfffd918c>
   450c0:	d8c00017 	ldw	r3,0(sp)
   450c4:	1dc00415 	stw	r23,16(r3)
   450c8:	9005883a 	mov	r2,r18
   450cc:	dfc00d17 	ldw	ra,52(sp)
   450d0:	df000c17 	ldw	fp,48(sp)
   450d4:	ddc00b17 	ldw	r23,44(sp)
   450d8:	dd800a17 	ldw	r22,40(sp)
   450dc:	dd400917 	ldw	r21,36(sp)
   450e0:	dd000817 	ldw	r20,32(sp)
   450e4:	dcc00717 	ldw	r19,28(sp)
   450e8:	dc800617 	ldw	r18,24(sp)
   450ec:	dc400517 	ldw	r17,20(sp)
   450f0:	dc000417 	ldw	r16,16(sp)
   450f4:	dec00e04 	addi	sp,sp,56
   450f8:	f800283a 	ret
   450fc:	0005883a 	mov	r2,zero
   45100:	003ff206 	br	450cc <__alt_data_end+0xfffd91ac>

00045104 <_dtoa_r>:
   45104:	20801017 	ldw	r2,64(r4)
   45108:	deffde04 	addi	sp,sp,-136
   4510c:	df002015 	stw	fp,128(sp)
   45110:	dcc01b15 	stw	r19,108(sp)
   45114:	dc801a15 	stw	r18,104(sp)
   45118:	dc401915 	stw	r17,100(sp)
   4511c:	dc001815 	stw	r16,96(sp)
   45120:	dfc02115 	stw	ra,132(sp)
   45124:	ddc01f15 	stw	r23,124(sp)
   45128:	dd801e15 	stw	r22,120(sp)
   4512c:	dd401d15 	stw	r21,116(sp)
   45130:	dd001c15 	stw	r20,112(sp)
   45134:	d9c00315 	stw	r7,12(sp)
   45138:	2039883a 	mov	fp,r4
   4513c:	3023883a 	mov	r17,r6
   45140:	2825883a 	mov	r18,r5
   45144:	dc002417 	ldw	r16,144(sp)
   45148:	3027883a 	mov	r19,r6
   4514c:	10000826 	beq	r2,zero,45170 <_dtoa_r+0x6c>
   45150:	21801117 	ldw	r6,68(r4)
   45154:	00c00044 	movi	r3,1
   45158:	100b883a 	mov	r5,r2
   4515c:	1986983a 	sll	r3,r3,r6
   45160:	11800115 	stw	r6,4(r2)
   45164:	10c00215 	stw	r3,8(r2)
   45168:	00472c00 	call	472c0 <_Bfree>
   4516c:	e0001015 	stw	zero,64(fp)
   45170:	88002e16 	blt	r17,zero,4522c <_dtoa_r+0x128>
   45174:	80000015 	stw	zero,0(r16)
   45178:	889ffc2c 	andhi	r2,r17,32752
   4517c:	00dffc34 	movhi	r3,32752
   45180:	10c01c26 	beq	r2,r3,451f4 <_dtoa_r+0xf0>
   45184:	000d883a 	mov	r6,zero
   45188:	000f883a 	mov	r7,zero
   4518c:	9009883a 	mov	r4,r18
   45190:	980b883a 	mov	r5,r19
   45194:	004c7180 	call	4c718 <__eqdf2>
   45198:	10002b1e 	bne	r2,zero,45248 <_dtoa_r+0x144>
   4519c:	d9c02317 	ldw	r7,140(sp)
   451a0:	00800044 	movi	r2,1
   451a4:	38800015 	stw	r2,0(r7)
   451a8:	d8802517 	ldw	r2,148(sp)
   451ac:	10019e26 	beq	r2,zero,45828 <_dtoa_r+0x724>
   451b0:	d8c02517 	ldw	r3,148(sp)
   451b4:	00800174 	movhi	r2,5
   451b8:	10820944 	addi	r2,r2,2085
   451bc:	18800015 	stw	r2,0(r3)
   451c0:	10bfffc4 	addi	r2,r2,-1
   451c4:	dfc02117 	ldw	ra,132(sp)
   451c8:	df002017 	ldw	fp,128(sp)
   451cc:	ddc01f17 	ldw	r23,124(sp)
   451d0:	dd801e17 	ldw	r22,120(sp)
   451d4:	dd401d17 	ldw	r21,116(sp)
   451d8:	dd001c17 	ldw	r20,112(sp)
   451dc:	dcc01b17 	ldw	r19,108(sp)
   451e0:	dc801a17 	ldw	r18,104(sp)
   451e4:	dc401917 	ldw	r17,100(sp)
   451e8:	dc001817 	ldw	r16,96(sp)
   451ec:	dec02204 	addi	sp,sp,136
   451f0:	f800283a 	ret
   451f4:	d8c02317 	ldw	r3,140(sp)
   451f8:	0089c3c4 	movi	r2,9999
   451fc:	18800015 	stw	r2,0(r3)
   45200:	90017726 	beq	r18,zero,457e0 <_dtoa_r+0x6dc>
   45204:	00800174 	movhi	r2,5
   45208:	10821504 	addi	r2,r2,2132
   4520c:	d9002517 	ldw	r4,148(sp)
   45210:	203fec26 	beq	r4,zero,451c4 <__alt_data_end+0xfffd92a4>
   45214:	10c000c7 	ldb	r3,3(r2)
   45218:	1801781e 	bne	r3,zero,457fc <_dtoa_r+0x6f8>
   4521c:	10c000c4 	addi	r3,r2,3
   45220:	d9802517 	ldw	r6,148(sp)
   45224:	30c00015 	stw	r3,0(r6)
   45228:	003fe606 	br	451c4 <__alt_data_end+0xfffd92a4>
   4522c:	04e00034 	movhi	r19,32768
   45230:	9cffffc4 	addi	r19,r19,-1
   45234:	00800044 	movi	r2,1
   45238:	8ce6703a 	and	r19,r17,r19
   4523c:	80800015 	stw	r2,0(r16)
   45240:	9823883a 	mov	r17,r19
   45244:	003fcc06 	br	45178 <__alt_data_end+0xfffd9258>
   45248:	d8800204 	addi	r2,sp,8
   4524c:	d8800015 	stw	r2,0(sp)
   45250:	d9c00104 	addi	r7,sp,4
   45254:	900b883a 	mov	r5,r18
   45258:	980d883a 	mov	r6,r19
   4525c:	e009883a 	mov	r4,fp
   45260:	8820d53a 	srli	r16,r17,20
   45264:	0047f680 	call	47f68 <__d2b>
   45268:	d8800915 	stw	r2,36(sp)
   4526c:	8001651e 	bne	r16,zero,45804 <_dtoa_r+0x700>
   45270:	dd800217 	ldw	r22,8(sp)
   45274:	dc000117 	ldw	r16,4(sp)
   45278:	00800804 	movi	r2,32
   4527c:	b421883a 	add	r16,r22,r16
   45280:	80c10c84 	addi	r3,r16,1074
   45284:	10c2d10e 	bge	r2,r3,45dcc <_dtoa_r+0xcc8>
   45288:	00801004 	movi	r2,64
   4528c:	81010484 	addi	r4,r16,1042
   45290:	10c7c83a 	sub	r3,r2,r3
   45294:	9108d83a 	srl	r4,r18,r4
   45298:	88e2983a 	sll	r17,r17,r3
   4529c:	2448b03a 	or	r4,r4,r17
   452a0:	004dc340 	call	4dc34 <__floatunsidf>
   452a4:	017f8434 	movhi	r5,65040
   452a8:	01800044 	movi	r6,1
   452ac:	1009883a 	mov	r4,r2
   452b0:	194b883a 	add	r5,r3,r5
   452b4:	843fffc4 	addi	r16,r16,-1
   452b8:	d9801115 	stw	r6,68(sp)
   452bc:	000d883a 	mov	r6,zero
   452c0:	01cffe34 	movhi	r7,16376
   452c4:	004d1dc0 	call	4d1dc <__subdf3>
   452c8:	0198dbf4 	movhi	r6,25455
   452cc:	01cff4f4 	movhi	r7,16339
   452d0:	3190d844 	addi	r6,r6,17249
   452d4:	39e1e9c4 	addi	r7,r7,-30809
   452d8:	1009883a 	mov	r4,r2
   452dc:	180b883a 	mov	r5,r3
   452e0:	004c9700 	call	4c970 <__muldf3>
   452e4:	01a2d874 	movhi	r6,35681
   452e8:	01cff1f4 	movhi	r7,16327
   452ec:	31b22cc4 	addi	r6,r6,-14157
   452f0:	39e28a04 	addi	r7,r7,-30168
   452f4:	180b883a 	mov	r5,r3
   452f8:	1009883a 	mov	r4,r2
   452fc:	004b49c0 	call	4b49c <__adddf3>
   45300:	8009883a 	mov	r4,r16
   45304:	1029883a 	mov	r20,r2
   45308:	1823883a 	mov	r17,r3
   4530c:	004db580 	call	4db58 <__floatsidf>
   45310:	019427f4 	movhi	r6,20639
   45314:	01cff4f4 	movhi	r7,16339
   45318:	319e7ec4 	addi	r6,r6,31227
   4531c:	39d104c4 	addi	r7,r7,17427
   45320:	1009883a 	mov	r4,r2
   45324:	180b883a 	mov	r5,r3
   45328:	004c9700 	call	4c970 <__muldf3>
   4532c:	100d883a 	mov	r6,r2
   45330:	180f883a 	mov	r7,r3
   45334:	a009883a 	mov	r4,r20
   45338:	880b883a 	mov	r5,r17
   4533c:	004b49c0 	call	4b49c <__adddf3>
   45340:	1009883a 	mov	r4,r2
   45344:	180b883a 	mov	r5,r3
   45348:	1029883a 	mov	r20,r2
   4534c:	1823883a 	mov	r17,r3
   45350:	004dad80 	call	4dad8 <__fixdfsi>
   45354:	000d883a 	mov	r6,zero
   45358:	000f883a 	mov	r7,zero
   4535c:	a009883a 	mov	r4,r20
   45360:	880b883a 	mov	r5,r17
   45364:	d8800515 	stw	r2,20(sp)
   45368:	004c87c0 	call	4c87c <__ledf2>
   4536c:	10028716 	blt	r2,zero,45d8c <_dtoa_r+0xc88>
   45370:	d8c00517 	ldw	r3,20(sp)
   45374:	00800584 	movi	r2,22
   45378:	10c27536 	bltu	r2,r3,45d50 <_dtoa_r+0xc4c>
   4537c:	180490fa 	slli	r2,r3,3
   45380:	00c00174 	movhi	r3,5
   45384:	18c23004 	addi	r3,r3,2240
   45388:	1885883a 	add	r2,r3,r2
   4538c:	11000017 	ldw	r4,0(r2)
   45390:	11400117 	ldw	r5,4(r2)
   45394:	900d883a 	mov	r6,r18
   45398:	980f883a 	mov	r7,r19
   4539c:	004c7a00 	call	4c7a0 <__gedf2>
   453a0:	00828d0e 	bge	zero,r2,45dd8 <_dtoa_r+0xcd4>
   453a4:	d9000517 	ldw	r4,20(sp)
   453a8:	d8000e15 	stw	zero,56(sp)
   453ac:	213fffc4 	addi	r4,r4,-1
   453b0:	d9000515 	stw	r4,20(sp)
   453b4:	b42dc83a 	sub	r22,r22,r16
   453b8:	b5bfffc4 	addi	r22,r22,-1
   453bc:	b0026f16 	blt	r22,zero,45d7c <_dtoa_r+0xc78>
   453c0:	d8000815 	stw	zero,32(sp)
   453c4:	d9c00517 	ldw	r7,20(sp)
   453c8:	38026416 	blt	r7,zero,45d5c <_dtoa_r+0xc58>
   453cc:	b1ed883a 	add	r22,r22,r7
   453d0:	d9c00d15 	stw	r7,52(sp)
   453d4:	d8000a15 	stw	zero,40(sp)
   453d8:	d9800317 	ldw	r6,12(sp)
   453dc:	00800244 	movi	r2,9
   453e0:	11811436 	bltu	r2,r6,45834 <_dtoa_r+0x730>
   453e4:	00800144 	movi	r2,5
   453e8:	1184e10e 	bge	r2,r6,46770 <_dtoa_r+0x166c>
   453ec:	31bfff04 	addi	r6,r6,-4
   453f0:	d9800315 	stw	r6,12(sp)
   453f4:	0023883a 	mov	r17,zero
   453f8:	d9800317 	ldw	r6,12(sp)
   453fc:	008000c4 	movi	r2,3
   45400:	30836726 	beq	r6,r2,461a0 <_dtoa_r+0x109c>
   45404:	1183410e 	bge	r2,r6,4610c <_dtoa_r+0x1008>
   45408:	d9c00317 	ldw	r7,12(sp)
   4540c:	00800104 	movi	r2,4
   45410:	38827c26 	beq	r7,r2,45e04 <_dtoa_r+0xd00>
   45414:	00800144 	movi	r2,5
   45418:	3884c41e 	bne	r7,r2,4672c <_dtoa_r+0x1628>
   4541c:	00800044 	movi	r2,1
   45420:	d8800b15 	stw	r2,44(sp)
   45424:	d8c00517 	ldw	r3,20(sp)
   45428:	d9002217 	ldw	r4,136(sp)
   4542c:	1907883a 	add	r3,r3,r4
   45430:	19800044 	addi	r6,r3,1
   45434:	d8c00c15 	stw	r3,48(sp)
   45438:	d9800615 	stw	r6,24(sp)
   4543c:	0183a40e 	bge	zero,r6,462d0 <_dtoa_r+0x11cc>
   45440:	d9800617 	ldw	r6,24(sp)
   45444:	3021883a 	mov	r16,r6
   45448:	e0001115 	stw	zero,68(fp)
   4544c:	008005c4 	movi	r2,23
   45450:	1184c92e 	bgeu	r2,r6,46778 <_dtoa_r+0x1674>
   45454:	00c00044 	movi	r3,1
   45458:	00800104 	movi	r2,4
   4545c:	1085883a 	add	r2,r2,r2
   45460:	11000504 	addi	r4,r2,20
   45464:	180b883a 	mov	r5,r3
   45468:	18c00044 	addi	r3,r3,1
   4546c:	313ffb2e 	bgeu	r6,r4,4545c <__alt_data_end+0xfffd953c>
   45470:	e1401115 	stw	r5,68(fp)
   45474:	e009883a 	mov	r4,fp
   45478:	00472180 	call	47218 <_Balloc>
   4547c:	d8800715 	stw	r2,28(sp)
   45480:	e0801015 	stw	r2,64(fp)
   45484:	00800384 	movi	r2,14
   45488:	1400f736 	bltu	r2,r16,45868 <_dtoa_r+0x764>
   4548c:	8800f626 	beq	r17,zero,45868 <_dtoa_r+0x764>
   45490:	d9c00517 	ldw	r7,20(sp)
   45494:	01c39a0e 	bge	zero,r7,46300 <_dtoa_r+0x11fc>
   45498:	388003cc 	andi	r2,r7,15
   4549c:	100490fa 	slli	r2,r2,3
   454a0:	382bd13a 	srai	r21,r7,4
   454a4:	00c00174 	movhi	r3,5
   454a8:	18c23004 	addi	r3,r3,2240
   454ac:	1885883a 	add	r2,r3,r2
   454b0:	a8c0040c 	andi	r3,r21,16
   454b4:	12400017 	ldw	r9,0(r2)
   454b8:	12000117 	ldw	r8,4(r2)
   454bc:	18037926 	beq	r3,zero,462a4 <_dtoa_r+0x11a0>
   454c0:	00800174 	movhi	r2,5
   454c4:	10822604 	addi	r2,r2,2200
   454c8:	11800817 	ldw	r6,32(r2)
   454cc:	11c00917 	ldw	r7,36(r2)
   454d0:	9009883a 	mov	r4,r18
   454d4:	980b883a 	mov	r5,r19
   454d8:	da001715 	stw	r8,92(sp)
   454dc:	da401615 	stw	r9,88(sp)
   454e0:	004bd480 	call	4bd48 <__divdf3>
   454e4:	da001717 	ldw	r8,92(sp)
   454e8:	da401617 	ldw	r9,88(sp)
   454ec:	ad4003cc 	andi	r21,r21,15
   454f0:	040000c4 	movi	r16,3
   454f4:	1023883a 	mov	r17,r2
   454f8:	1829883a 	mov	r20,r3
   454fc:	a8001126 	beq	r21,zero,45544 <_dtoa_r+0x440>
   45500:	05c00174 	movhi	r23,5
   45504:	bdc22604 	addi	r23,r23,2200
   45508:	4805883a 	mov	r2,r9
   4550c:	4007883a 	mov	r3,r8
   45510:	a980004c 	andi	r6,r21,1
   45514:	1009883a 	mov	r4,r2
   45518:	a82bd07a 	srai	r21,r21,1
   4551c:	180b883a 	mov	r5,r3
   45520:	30000426 	beq	r6,zero,45534 <_dtoa_r+0x430>
   45524:	b9800017 	ldw	r6,0(r23)
   45528:	b9c00117 	ldw	r7,4(r23)
   4552c:	84000044 	addi	r16,r16,1
   45530:	004c9700 	call	4c970 <__muldf3>
   45534:	bdc00204 	addi	r23,r23,8
   45538:	a83ff51e 	bne	r21,zero,45510 <__alt_data_end+0xfffd95f0>
   4553c:	1013883a 	mov	r9,r2
   45540:	1811883a 	mov	r8,r3
   45544:	480d883a 	mov	r6,r9
   45548:	400f883a 	mov	r7,r8
   4554c:	8809883a 	mov	r4,r17
   45550:	a00b883a 	mov	r5,r20
   45554:	004bd480 	call	4bd48 <__divdf3>
   45558:	d8800f15 	stw	r2,60(sp)
   4555c:	d8c01015 	stw	r3,64(sp)
   45560:	d8c00e17 	ldw	r3,56(sp)
   45564:	18000626 	beq	r3,zero,45580 <_dtoa_r+0x47c>
   45568:	d9000f17 	ldw	r4,60(sp)
   4556c:	d9401017 	ldw	r5,64(sp)
   45570:	000d883a 	mov	r6,zero
   45574:	01cffc34 	movhi	r7,16368
   45578:	004c87c0 	call	4c87c <__ledf2>
   4557c:	10040b16 	blt	r2,zero,465ac <_dtoa_r+0x14a8>
   45580:	8009883a 	mov	r4,r16
   45584:	004db580 	call	4db58 <__floatsidf>
   45588:	d9800f17 	ldw	r6,60(sp)
   4558c:	d9c01017 	ldw	r7,64(sp)
   45590:	1009883a 	mov	r4,r2
   45594:	180b883a 	mov	r5,r3
   45598:	004c9700 	call	4c970 <__muldf3>
   4559c:	000d883a 	mov	r6,zero
   455a0:	01d00734 	movhi	r7,16412
   455a4:	1009883a 	mov	r4,r2
   455a8:	180b883a 	mov	r5,r3
   455ac:	004b49c0 	call	4b49c <__adddf3>
   455b0:	1021883a 	mov	r16,r2
   455b4:	d8800617 	ldw	r2,24(sp)
   455b8:	047f3034 	movhi	r17,64704
   455bc:	1c63883a 	add	r17,r3,r17
   455c0:	10031826 	beq	r2,zero,46224 <_dtoa_r+0x1120>
   455c4:	d8c00517 	ldw	r3,20(sp)
   455c8:	db000617 	ldw	r12,24(sp)
   455cc:	d8c01315 	stw	r3,76(sp)
   455d0:	d9000b17 	ldw	r4,44(sp)
   455d4:	20038f26 	beq	r4,zero,46414 <_dtoa_r+0x1310>
   455d8:	60bfffc4 	addi	r2,r12,-1
   455dc:	100490fa 	slli	r2,r2,3
   455e0:	00c00174 	movhi	r3,5
   455e4:	18c23004 	addi	r3,r3,2240
   455e8:	1885883a 	add	r2,r3,r2
   455ec:	11800017 	ldw	r6,0(r2)
   455f0:	11c00117 	ldw	r7,4(r2)
   455f4:	d8800717 	ldw	r2,28(sp)
   455f8:	0009883a 	mov	r4,zero
   455fc:	014ff834 	movhi	r5,16352
   45600:	db001615 	stw	r12,88(sp)
   45604:	15c00044 	addi	r23,r2,1
   45608:	004bd480 	call	4bd48 <__divdf3>
   4560c:	800d883a 	mov	r6,r16
   45610:	880f883a 	mov	r7,r17
   45614:	1009883a 	mov	r4,r2
   45618:	180b883a 	mov	r5,r3
   4561c:	004d1dc0 	call	4d1dc <__subdf3>
   45620:	d9401017 	ldw	r5,64(sp)
   45624:	d9000f17 	ldw	r4,60(sp)
   45628:	102b883a 	mov	r21,r2
   4562c:	d8c01215 	stw	r3,72(sp)
   45630:	004dad80 	call	4dad8 <__fixdfsi>
   45634:	1009883a 	mov	r4,r2
   45638:	1029883a 	mov	r20,r2
   4563c:	004db580 	call	4db58 <__floatsidf>
   45640:	d9000f17 	ldw	r4,60(sp)
   45644:	d9401017 	ldw	r5,64(sp)
   45648:	100d883a 	mov	r6,r2
   4564c:	180f883a 	mov	r7,r3
   45650:	004d1dc0 	call	4d1dc <__subdf3>
   45654:	1823883a 	mov	r17,r3
   45658:	d8c00717 	ldw	r3,28(sp)
   4565c:	d9401217 	ldw	r5,72(sp)
   45660:	a2000c04 	addi	r8,r20,48
   45664:	1021883a 	mov	r16,r2
   45668:	1a000005 	stb	r8,0(r3)
   4566c:	800d883a 	mov	r6,r16
   45670:	880f883a 	mov	r7,r17
   45674:	a809883a 	mov	r4,r21
   45678:	4029883a 	mov	r20,r8
   4567c:	004c7a00 	call	4c7a0 <__gedf2>
   45680:	00841d16 	blt	zero,r2,466f8 <_dtoa_r+0x15f4>
   45684:	800d883a 	mov	r6,r16
   45688:	880f883a 	mov	r7,r17
   4568c:	0009883a 	mov	r4,zero
   45690:	014ffc34 	movhi	r5,16368
   45694:	004d1dc0 	call	4d1dc <__subdf3>
   45698:	d9401217 	ldw	r5,72(sp)
   4569c:	100d883a 	mov	r6,r2
   456a0:	180f883a 	mov	r7,r3
   456a4:	a809883a 	mov	r4,r21
   456a8:	004c7a00 	call	4c7a0 <__gedf2>
   456ac:	db001617 	ldw	r12,88(sp)
   456b0:	00840e16 	blt	zero,r2,466ec <_dtoa_r+0x15e8>
   456b4:	00800044 	movi	r2,1
   456b8:	13006b0e 	bge	r2,r12,45868 <_dtoa_r+0x764>
   456bc:	d9000717 	ldw	r4,28(sp)
   456c0:	dd800f15 	stw	r22,60(sp)
   456c4:	dcc01015 	stw	r19,64(sp)
   456c8:	2319883a 	add	r12,r4,r12
   456cc:	dcc01217 	ldw	r19,72(sp)
   456d0:	602d883a 	mov	r22,r12
   456d4:	dc801215 	stw	r18,72(sp)
   456d8:	b825883a 	mov	r18,r23
   456dc:	00000906 	br	45704 <_dtoa_r+0x600>
   456e0:	004d1dc0 	call	4d1dc <__subdf3>
   456e4:	a80d883a 	mov	r6,r21
   456e8:	980f883a 	mov	r7,r19
   456ec:	1009883a 	mov	r4,r2
   456f0:	180b883a 	mov	r5,r3
   456f4:	004c87c0 	call	4c87c <__ledf2>
   456f8:	1003e816 	blt	r2,zero,4669c <_dtoa_r+0x1598>
   456fc:	b825883a 	mov	r18,r23
   45700:	bd83e926 	beq	r23,r22,466a8 <_dtoa_r+0x15a4>
   45704:	a809883a 	mov	r4,r21
   45708:	980b883a 	mov	r5,r19
   4570c:	000d883a 	mov	r6,zero
   45710:	01d00934 	movhi	r7,16420
   45714:	004c9700 	call	4c970 <__muldf3>
   45718:	000d883a 	mov	r6,zero
   4571c:	01d00934 	movhi	r7,16420
   45720:	8009883a 	mov	r4,r16
   45724:	880b883a 	mov	r5,r17
   45728:	102b883a 	mov	r21,r2
   4572c:	1827883a 	mov	r19,r3
   45730:	004c9700 	call	4c970 <__muldf3>
   45734:	180b883a 	mov	r5,r3
   45738:	1009883a 	mov	r4,r2
   4573c:	1821883a 	mov	r16,r3
   45740:	1023883a 	mov	r17,r2
   45744:	004dad80 	call	4dad8 <__fixdfsi>
   45748:	1009883a 	mov	r4,r2
   4574c:	1029883a 	mov	r20,r2
   45750:	004db580 	call	4db58 <__floatsidf>
   45754:	8809883a 	mov	r4,r17
   45758:	800b883a 	mov	r5,r16
   4575c:	100d883a 	mov	r6,r2
   45760:	180f883a 	mov	r7,r3
   45764:	004d1dc0 	call	4d1dc <__subdf3>
   45768:	a5000c04 	addi	r20,r20,48
   4576c:	a80d883a 	mov	r6,r21
   45770:	980f883a 	mov	r7,r19
   45774:	1009883a 	mov	r4,r2
   45778:	180b883a 	mov	r5,r3
   4577c:	95000005 	stb	r20,0(r18)
   45780:	1021883a 	mov	r16,r2
   45784:	1823883a 	mov	r17,r3
   45788:	004c87c0 	call	4c87c <__ledf2>
   4578c:	bdc00044 	addi	r23,r23,1
   45790:	800d883a 	mov	r6,r16
   45794:	880f883a 	mov	r7,r17
   45798:	0009883a 	mov	r4,zero
   4579c:	014ffc34 	movhi	r5,16368
   457a0:	103fcf0e 	bge	r2,zero,456e0 <__alt_data_end+0xfffd97c0>
   457a4:	d8c01317 	ldw	r3,76(sp)
   457a8:	d8c00515 	stw	r3,20(sp)
   457ac:	d9400917 	ldw	r5,36(sp)
   457b0:	e009883a 	mov	r4,fp
   457b4:	00472c00 	call	472c0 <_Bfree>
   457b8:	d9000517 	ldw	r4,20(sp)
   457bc:	d9802317 	ldw	r6,140(sp)
   457c0:	d9c02517 	ldw	r7,148(sp)
   457c4:	b8000005 	stb	zero,0(r23)
   457c8:	20800044 	addi	r2,r4,1
   457cc:	30800015 	stw	r2,0(r6)
   457d0:	3802aa26 	beq	r7,zero,4627c <_dtoa_r+0x1178>
   457d4:	3dc00015 	stw	r23,0(r7)
   457d8:	d8800717 	ldw	r2,28(sp)
   457dc:	003e7906 	br	451c4 <__alt_data_end+0xfffd92a4>
   457e0:	00800434 	movhi	r2,16
   457e4:	10bfffc4 	addi	r2,r2,-1
   457e8:	88a2703a 	and	r17,r17,r2
   457ec:	883e851e 	bne	r17,zero,45204 <__alt_data_end+0xfffd92e4>
   457f0:	00800174 	movhi	r2,5
   457f4:	10821204 	addi	r2,r2,2120
   457f8:	003e8406 	br	4520c <__alt_data_end+0xfffd92ec>
   457fc:	10c00204 	addi	r3,r2,8
   45800:	003e8706 	br	45220 <__alt_data_end+0xfffd9300>
   45804:	01400434 	movhi	r5,16
   45808:	297fffc4 	addi	r5,r5,-1
   4580c:	994a703a 	and	r5,r19,r5
   45810:	9009883a 	mov	r4,r18
   45814:	843f0044 	addi	r16,r16,-1023
   45818:	294ffc34 	orhi	r5,r5,16368
   4581c:	dd800217 	ldw	r22,8(sp)
   45820:	d8001115 	stw	zero,68(sp)
   45824:	003ea506 	br	452bc <__alt_data_end+0xfffd939c>
   45828:	00800174 	movhi	r2,5
   4582c:	10820904 	addi	r2,r2,2084
   45830:	003e6406 	br	451c4 <__alt_data_end+0xfffd92a4>
   45834:	e0001115 	stw	zero,68(fp)
   45838:	000b883a 	mov	r5,zero
   4583c:	e009883a 	mov	r4,fp
   45840:	00472180 	call	47218 <_Balloc>
   45844:	01bfffc4 	movi	r6,-1
   45848:	01c00044 	movi	r7,1
   4584c:	d8800715 	stw	r2,28(sp)
   45850:	d9800c15 	stw	r6,48(sp)
   45854:	e0801015 	stw	r2,64(fp)
   45858:	d8000315 	stw	zero,12(sp)
   4585c:	d9c00b15 	stw	r7,44(sp)
   45860:	d9800615 	stw	r6,24(sp)
   45864:	d8002215 	stw	zero,136(sp)
   45868:	d8800117 	ldw	r2,4(sp)
   4586c:	10008916 	blt	r2,zero,45a94 <_dtoa_r+0x990>
   45870:	d9000517 	ldw	r4,20(sp)
   45874:	00c00384 	movi	r3,14
   45878:	19008616 	blt	r3,r4,45a94 <_dtoa_r+0x990>
   4587c:	200490fa 	slli	r2,r4,3
   45880:	00c00174 	movhi	r3,5
   45884:	d9802217 	ldw	r6,136(sp)
   45888:	18c23004 	addi	r3,r3,2240
   4588c:	1885883a 	add	r2,r3,r2
   45890:	14000017 	ldw	r16,0(r2)
   45894:	14400117 	ldw	r17,4(r2)
   45898:	30016316 	blt	r6,zero,45e28 <_dtoa_r+0xd24>
   4589c:	800d883a 	mov	r6,r16
   458a0:	880f883a 	mov	r7,r17
   458a4:	9009883a 	mov	r4,r18
   458a8:	980b883a 	mov	r5,r19
   458ac:	004bd480 	call	4bd48 <__divdf3>
   458b0:	180b883a 	mov	r5,r3
   458b4:	1009883a 	mov	r4,r2
   458b8:	004dad80 	call	4dad8 <__fixdfsi>
   458bc:	1009883a 	mov	r4,r2
   458c0:	102b883a 	mov	r21,r2
   458c4:	004db580 	call	4db58 <__floatsidf>
   458c8:	800d883a 	mov	r6,r16
   458cc:	880f883a 	mov	r7,r17
   458d0:	1009883a 	mov	r4,r2
   458d4:	180b883a 	mov	r5,r3
   458d8:	004c9700 	call	4c970 <__muldf3>
   458dc:	100d883a 	mov	r6,r2
   458e0:	180f883a 	mov	r7,r3
   458e4:	9009883a 	mov	r4,r18
   458e8:	980b883a 	mov	r5,r19
   458ec:	004d1dc0 	call	4d1dc <__subdf3>
   458f0:	d9c00717 	ldw	r7,28(sp)
   458f4:	1009883a 	mov	r4,r2
   458f8:	a8800c04 	addi	r2,r21,48
   458fc:	38800005 	stb	r2,0(r7)
   45900:	3dc00044 	addi	r23,r7,1
   45904:	d9c00617 	ldw	r7,24(sp)
   45908:	01800044 	movi	r6,1
   4590c:	180b883a 	mov	r5,r3
   45910:	2005883a 	mov	r2,r4
   45914:	39803826 	beq	r7,r6,459f8 <_dtoa_r+0x8f4>
   45918:	000d883a 	mov	r6,zero
   4591c:	01d00934 	movhi	r7,16420
   45920:	004c9700 	call	4c970 <__muldf3>
   45924:	000d883a 	mov	r6,zero
   45928:	000f883a 	mov	r7,zero
   4592c:	1009883a 	mov	r4,r2
   45930:	180b883a 	mov	r5,r3
   45934:	1025883a 	mov	r18,r2
   45938:	1827883a 	mov	r19,r3
   4593c:	004c7180 	call	4c718 <__eqdf2>
   45940:	103f9a26 	beq	r2,zero,457ac <__alt_data_end+0xfffd988c>
   45944:	d9c00617 	ldw	r7,24(sp)
   45948:	d8c00717 	ldw	r3,28(sp)
   4594c:	b829883a 	mov	r20,r23
   45950:	38bfffc4 	addi	r2,r7,-1
   45954:	18ad883a 	add	r22,r3,r2
   45958:	00000a06 	br	45984 <_dtoa_r+0x880>
   4595c:	004c9700 	call	4c970 <__muldf3>
   45960:	000d883a 	mov	r6,zero
   45964:	000f883a 	mov	r7,zero
   45968:	1009883a 	mov	r4,r2
   4596c:	180b883a 	mov	r5,r3
   45970:	1025883a 	mov	r18,r2
   45974:	1827883a 	mov	r19,r3
   45978:	b829883a 	mov	r20,r23
   4597c:	004c7180 	call	4c718 <__eqdf2>
   45980:	103f8a26 	beq	r2,zero,457ac <__alt_data_end+0xfffd988c>
   45984:	800d883a 	mov	r6,r16
   45988:	880f883a 	mov	r7,r17
   4598c:	9009883a 	mov	r4,r18
   45990:	980b883a 	mov	r5,r19
   45994:	004bd480 	call	4bd48 <__divdf3>
   45998:	180b883a 	mov	r5,r3
   4599c:	1009883a 	mov	r4,r2
   459a0:	004dad80 	call	4dad8 <__fixdfsi>
   459a4:	1009883a 	mov	r4,r2
   459a8:	102b883a 	mov	r21,r2
   459ac:	004db580 	call	4db58 <__floatsidf>
   459b0:	800d883a 	mov	r6,r16
   459b4:	880f883a 	mov	r7,r17
   459b8:	1009883a 	mov	r4,r2
   459bc:	180b883a 	mov	r5,r3
   459c0:	004c9700 	call	4c970 <__muldf3>
   459c4:	100d883a 	mov	r6,r2
   459c8:	180f883a 	mov	r7,r3
   459cc:	9009883a 	mov	r4,r18
   459d0:	980b883a 	mov	r5,r19
   459d4:	004d1dc0 	call	4d1dc <__subdf3>
   459d8:	aa000c04 	addi	r8,r21,48
   459dc:	a2000005 	stb	r8,0(r20)
   459e0:	000d883a 	mov	r6,zero
   459e4:	01d00934 	movhi	r7,16420
   459e8:	1009883a 	mov	r4,r2
   459ec:	180b883a 	mov	r5,r3
   459f0:	a5c00044 	addi	r23,r20,1
   459f4:	b53fd91e 	bne	r22,r20,4595c <__alt_data_end+0xfffd9a3c>
   459f8:	100d883a 	mov	r6,r2
   459fc:	180f883a 	mov	r7,r3
   45a00:	1009883a 	mov	r4,r2
   45a04:	180b883a 	mov	r5,r3
   45a08:	004b49c0 	call	4b49c <__adddf3>
   45a0c:	100d883a 	mov	r6,r2
   45a10:	180f883a 	mov	r7,r3
   45a14:	8009883a 	mov	r4,r16
   45a18:	880b883a 	mov	r5,r17
   45a1c:	1027883a 	mov	r19,r2
   45a20:	1825883a 	mov	r18,r3
   45a24:	004c87c0 	call	4c87c <__ledf2>
   45a28:	10000816 	blt	r2,zero,45a4c <_dtoa_r+0x948>
   45a2c:	980d883a 	mov	r6,r19
   45a30:	900f883a 	mov	r7,r18
   45a34:	8009883a 	mov	r4,r16
   45a38:	880b883a 	mov	r5,r17
   45a3c:	004c7180 	call	4c718 <__eqdf2>
   45a40:	103f5a1e 	bne	r2,zero,457ac <__alt_data_end+0xfffd988c>
   45a44:	ad40004c 	andi	r21,r21,1
   45a48:	a83f5826 	beq	r21,zero,457ac <__alt_data_end+0xfffd988c>
   45a4c:	bd3fffc3 	ldbu	r20,-1(r23)
   45a50:	b8bfffc4 	addi	r2,r23,-1
   45a54:	1007883a 	mov	r3,r2
   45a58:	01400e44 	movi	r5,57
   45a5c:	d9800717 	ldw	r6,28(sp)
   45a60:	00000506 	br	45a78 <_dtoa_r+0x974>
   45a64:	18ffffc4 	addi	r3,r3,-1
   45a68:	11824726 	beq	r2,r6,46388 <_dtoa_r+0x1284>
   45a6c:	1d000003 	ldbu	r20,0(r3)
   45a70:	102f883a 	mov	r23,r2
   45a74:	10bfffc4 	addi	r2,r2,-1
   45a78:	a1003fcc 	andi	r4,r20,255
   45a7c:	2100201c 	xori	r4,r4,128
   45a80:	213fe004 	addi	r4,r4,-128
   45a84:	217ff726 	beq	r4,r5,45a64 <__alt_data_end+0xfffd9b44>
   45a88:	a2000044 	addi	r8,r20,1
   45a8c:	12000005 	stb	r8,0(r2)
   45a90:	003f4606 	br	457ac <__alt_data_end+0xfffd988c>
   45a94:	d9000b17 	ldw	r4,44(sp)
   45a98:	2000c826 	beq	r4,zero,45dbc <_dtoa_r+0xcb8>
   45a9c:	d9800317 	ldw	r6,12(sp)
   45aa0:	00c00044 	movi	r3,1
   45aa4:	1980f90e 	bge	r3,r6,45e8c <_dtoa_r+0xd88>
   45aa8:	d8800617 	ldw	r2,24(sp)
   45aac:	d8c00a17 	ldw	r3,40(sp)
   45ab0:	157fffc4 	addi	r21,r2,-1
   45ab4:	1d41f316 	blt	r3,r21,46284 <_dtoa_r+0x1180>
   45ab8:	1d6bc83a 	sub	r21,r3,r21
   45abc:	d9c00617 	ldw	r7,24(sp)
   45ac0:	3802aa16 	blt	r7,zero,4656c <_dtoa_r+0x1468>
   45ac4:	dd000817 	ldw	r20,32(sp)
   45ac8:	d8800617 	ldw	r2,24(sp)
   45acc:	d8c00817 	ldw	r3,32(sp)
   45ad0:	01400044 	movi	r5,1
   45ad4:	e009883a 	mov	r4,fp
   45ad8:	1887883a 	add	r3,r3,r2
   45adc:	d8c00815 	stw	r3,32(sp)
   45ae0:	b0ad883a 	add	r22,r22,r2
   45ae4:	004764c0 	call	4764c <__i2b>
   45ae8:	1023883a 	mov	r17,r2
   45aec:	a0000826 	beq	r20,zero,45b10 <_dtoa_r+0xa0c>
   45af0:	0580070e 	bge	zero,r22,45b10 <_dtoa_r+0xa0c>
   45af4:	a005883a 	mov	r2,r20
   45af8:	b500b916 	blt	r22,r20,45de0 <_dtoa_r+0xcdc>
   45afc:	d9000817 	ldw	r4,32(sp)
   45b00:	a0a9c83a 	sub	r20,r20,r2
   45b04:	b0adc83a 	sub	r22,r22,r2
   45b08:	2089c83a 	sub	r4,r4,r2
   45b0c:	d9000815 	stw	r4,32(sp)
   45b10:	d9800a17 	ldw	r6,40(sp)
   45b14:	0181810e 	bge	zero,r6,4611c <_dtoa_r+0x1018>
   45b18:	d9c00b17 	ldw	r7,44(sp)
   45b1c:	3800b326 	beq	r7,zero,45dec <_dtoa_r+0xce8>
   45b20:	a800b226 	beq	r21,zero,45dec <_dtoa_r+0xce8>
   45b24:	880b883a 	mov	r5,r17
   45b28:	a80d883a 	mov	r6,r21
   45b2c:	e009883a 	mov	r4,fp
   45b30:	00479140 	call	47914 <__pow5mult>
   45b34:	d9800917 	ldw	r6,36(sp)
   45b38:	100b883a 	mov	r5,r2
   45b3c:	e009883a 	mov	r4,fp
   45b40:	1023883a 	mov	r17,r2
   45b44:	00476880 	call	47688 <__multiply>
   45b48:	1021883a 	mov	r16,r2
   45b4c:	d8800a17 	ldw	r2,40(sp)
   45b50:	d9400917 	ldw	r5,36(sp)
   45b54:	e009883a 	mov	r4,fp
   45b58:	1545c83a 	sub	r2,r2,r21
   45b5c:	d8800a15 	stw	r2,40(sp)
   45b60:	00472c00 	call	472c0 <_Bfree>
   45b64:	d8c00a17 	ldw	r3,40(sp)
   45b68:	18009f1e 	bne	r3,zero,45de8 <_dtoa_r+0xce4>
   45b6c:	05c00044 	movi	r23,1
   45b70:	e009883a 	mov	r4,fp
   45b74:	b80b883a 	mov	r5,r23
   45b78:	004764c0 	call	4764c <__i2b>
   45b7c:	d9000d17 	ldw	r4,52(sp)
   45b80:	102b883a 	mov	r21,r2
   45b84:	2000ce26 	beq	r4,zero,45ec0 <_dtoa_r+0xdbc>
   45b88:	200d883a 	mov	r6,r4
   45b8c:	100b883a 	mov	r5,r2
   45b90:	e009883a 	mov	r4,fp
   45b94:	00479140 	call	47914 <__pow5mult>
   45b98:	d9800317 	ldw	r6,12(sp)
   45b9c:	102b883a 	mov	r21,r2
   45ba0:	b981810e 	bge	r23,r6,461a8 <_dtoa_r+0x10a4>
   45ba4:	0027883a 	mov	r19,zero
   45ba8:	a8800417 	ldw	r2,16(r21)
   45bac:	05c00804 	movi	r23,32
   45bb0:	10800104 	addi	r2,r2,4
   45bb4:	1085883a 	add	r2,r2,r2
   45bb8:	1085883a 	add	r2,r2,r2
   45bbc:	a885883a 	add	r2,r21,r2
   45bc0:	11000017 	ldw	r4,0(r2)
   45bc4:	00475340 	call	47534 <__hi0bits>
   45bc8:	b885c83a 	sub	r2,r23,r2
   45bcc:	1585883a 	add	r2,r2,r22
   45bd0:	108007cc 	andi	r2,r2,31
   45bd4:	1000b326 	beq	r2,zero,45ea4 <_dtoa_r+0xda0>
   45bd8:	00c00804 	movi	r3,32
   45bdc:	1887c83a 	sub	r3,r3,r2
   45be0:	01000104 	movi	r4,4
   45be4:	20c2cd0e 	bge	r4,r3,4671c <_dtoa_r+0x1618>
   45be8:	00c00704 	movi	r3,28
   45bec:	1885c83a 	sub	r2,r3,r2
   45bf0:	d8c00817 	ldw	r3,32(sp)
   45bf4:	a0a9883a 	add	r20,r20,r2
   45bf8:	b0ad883a 	add	r22,r22,r2
   45bfc:	1887883a 	add	r3,r3,r2
   45c00:	d8c00815 	stw	r3,32(sp)
   45c04:	d9800817 	ldw	r6,32(sp)
   45c08:	0180040e 	bge	zero,r6,45c1c <_dtoa_r+0xb18>
   45c0c:	800b883a 	mov	r5,r16
   45c10:	e009883a 	mov	r4,fp
   45c14:	0047a540 	call	47a54 <__lshift>
   45c18:	1021883a 	mov	r16,r2
   45c1c:	0580050e 	bge	zero,r22,45c34 <_dtoa_r+0xb30>
   45c20:	a80b883a 	mov	r5,r21
   45c24:	b00d883a 	mov	r6,r22
   45c28:	e009883a 	mov	r4,fp
   45c2c:	0047a540 	call	47a54 <__lshift>
   45c30:	102b883a 	mov	r21,r2
   45c34:	d9c00e17 	ldw	r7,56(sp)
   45c38:	3801211e 	bne	r7,zero,460c0 <_dtoa_r+0xfbc>
   45c3c:	d9800617 	ldw	r6,24(sp)
   45c40:	0181380e 	bge	zero,r6,46124 <_dtoa_r+0x1020>
   45c44:	d8c00b17 	ldw	r3,44(sp)
   45c48:	1800ab1e 	bne	r3,zero,45ef8 <_dtoa_r+0xdf4>
   45c4c:	dc800717 	ldw	r18,28(sp)
   45c50:	dcc00617 	ldw	r19,24(sp)
   45c54:	9029883a 	mov	r20,r18
   45c58:	00000206 	br	45c64 <_dtoa_r+0xb60>
   45c5c:	00472e80 	call	472e8 <__multadd>
   45c60:	1021883a 	mov	r16,r2
   45c64:	a80b883a 	mov	r5,r21
   45c68:	8009883a 	mov	r4,r16
   45c6c:	0044edc0 	call	44edc <quorem>
   45c70:	10800c04 	addi	r2,r2,48
   45c74:	90800005 	stb	r2,0(r18)
   45c78:	94800044 	addi	r18,r18,1
   45c7c:	9507c83a 	sub	r3,r18,r20
   45c80:	000f883a 	mov	r7,zero
   45c84:	01800284 	movi	r6,10
   45c88:	800b883a 	mov	r5,r16
   45c8c:	e009883a 	mov	r4,fp
   45c90:	1cfff216 	blt	r3,r19,45c5c <__alt_data_end+0xfffd9d3c>
   45c94:	1011883a 	mov	r8,r2
   45c98:	d8800617 	ldw	r2,24(sp)
   45c9c:	0082370e 	bge	zero,r2,4657c <_dtoa_r+0x1478>
   45ca0:	d9000717 	ldw	r4,28(sp)
   45ca4:	0025883a 	mov	r18,zero
   45ca8:	20af883a 	add	r23,r4,r2
   45cac:	01800044 	movi	r6,1
   45cb0:	800b883a 	mov	r5,r16
   45cb4:	e009883a 	mov	r4,fp
   45cb8:	da001715 	stw	r8,92(sp)
   45cbc:	0047a540 	call	47a54 <__lshift>
   45cc0:	a80b883a 	mov	r5,r21
   45cc4:	1009883a 	mov	r4,r2
   45cc8:	d8800915 	stw	r2,36(sp)
   45ccc:	0047b9c0 	call	47b9c <__mcmp>
   45cd0:	da001717 	ldw	r8,92(sp)
   45cd4:	0081800e 	bge	zero,r2,462d8 <_dtoa_r+0x11d4>
   45cd8:	b93fffc3 	ldbu	r4,-1(r23)
   45cdc:	b8bfffc4 	addi	r2,r23,-1
   45ce0:	1007883a 	mov	r3,r2
   45ce4:	01800e44 	movi	r6,57
   45ce8:	d9c00717 	ldw	r7,28(sp)
   45cec:	00000506 	br	45d04 <_dtoa_r+0xc00>
   45cf0:	18ffffc4 	addi	r3,r3,-1
   45cf4:	11c12326 	beq	r2,r7,46184 <_dtoa_r+0x1080>
   45cf8:	19000003 	ldbu	r4,0(r3)
   45cfc:	102f883a 	mov	r23,r2
   45d00:	10bfffc4 	addi	r2,r2,-1
   45d04:	21403fcc 	andi	r5,r4,255
   45d08:	2940201c 	xori	r5,r5,128
   45d0c:	297fe004 	addi	r5,r5,-128
   45d10:	29bff726 	beq	r5,r6,45cf0 <__alt_data_end+0xfffd9dd0>
   45d14:	21000044 	addi	r4,r4,1
   45d18:	11000005 	stb	r4,0(r2)
   45d1c:	a80b883a 	mov	r5,r21
   45d20:	e009883a 	mov	r4,fp
   45d24:	00472c00 	call	472c0 <_Bfree>
   45d28:	883ea026 	beq	r17,zero,457ac <__alt_data_end+0xfffd988c>
   45d2c:	90000426 	beq	r18,zero,45d40 <_dtoa_r+0xc3c>
   45d30:	94400326 	beq	r18,r17,45d40 <_dtoa_r+0xc3c>
   45d34:	900b883a 	mov	r5,r18
   45d38:	e009883a 	mov	r4,fp
   45d3c:	00472c00 	call	472c0 <_Bfree>
   45d40:	880b883a 	mov	r5,r17
   45d44:	e009883a 	mov	r4,fp
   45d48:	00472c00 	call	472c0 <_Bfree>
   45d4c:	003e9706 	br	457ac <__alt_data_end+0xfffd988c>
   45d50:	01800044 	movi	r6,1
   45d54:	d9800e15 	stw	r6,56(sp)
   45d58:	003d9606 	br	453b4 <__alt_data_end+0xfffd9494>
   45d5c:	d8800817 	ldw	r2,32(sp)
   45d60:	d8c00517 	ldw	r3,20(sp)
   45d64:	d8000d15 	stw	zero,52(sp)
   45d68:	10c5c83a 	sub	r2,r2,r3
   45d6c:	00c9c83a 	sub	r4,zero,r3
   45d70:	d8800815 	stw	r2,32(sp)
   45d74:	d9000a15 	stw	r4,40(sp)
   45d78:	003d9706 	br	453d8 <__alt_data_end+0xfffd94b8>
   45d7c:	05adc83a 	sub	r22,zero,r22
   45d80:	dd800815 	stw	r22,32(sp)
   45d84:	002d883a 	mov	r22,zero
   45d88:	003d8e06 	br	453c4 <__alt_data_end+0xfffd94a4>
   45d8c:	d9000517 	ldw	r4,20(sp)
   45d90:	004db580 	call	4db58 <__floatsidf>
   45d94:	100d883a 	mov	r6,r2
   45d98:	180f883a 	mov	r7,r3
   45d9c:	a009883a 	mov	r4,r20
   45da0:	880b883a 	mov	r5,r17
   45da4:	004c7180 	call	4c718 <__eqdf2>
   45da8:	103d7126 	beq	r2,zero,45370 <__alt_data_end+0xfffd9450>
   45dac:	d9c00517 	ldw	r7,20(sp)
   45db0:	39ffffc4 	addi	r7,r7,-1
   45db4:	d9c00515 	stw	r7,20(sp)
   45db8:	003d6d06 	br	45370 <__alt_data_end+0xfffd9450>
   45dbc:	dd400a17 	ldw	r21,40(sp)
   45dc0:	dd000817 	ldw	r20,32(sp)
   45dc4:	0023883a 	mov	r17,zero
   45dc8:	003f4806 	br	45aec <__alt_data_end+0xfffd9bcc>
   45dcc:	10e3c83a 	sub	r17,r2,r3
   45dd0:	9448983a 	sll	r4,r18,r17
   45dd4:	003d3206 	br	452a0 <__alt_data_end+0xfffd9380>
   45dd8:	d8000e15 	stw	zero,56(sp)
   45ddc:	003d7506 	br	453b4 <__alt_data_end+0xfffd9494>
   45de0:	b005883a 	mov	r2,r22
   45de4:	003f4506 	br	45afc <__alt_data_end+0xfffd9bdc>
   45de8:	dc000915 	stw	r16,36(sp)
   45dec:	d9800a17 	ldw	r6,40(sp)
   45df0:	d9400917 	ldw	r5,36(sp)
   45df4:	e009883a 	mov	r4,fp
   45df8:	00479140 	call	47914 <__pow5mult>
   45dfc:	1021883a 	mov	r16,r2
   45e00:	003f5a06 	br	45b6c <__alt_data_end+0xfffd9c4c>
   45e04:	01c00044 	movi	r7,1
   45e08:	d9c00b15 	stw	r7,44(sp)
   45e0c:	d8802217 	ldw	r2,136(sp)
   45e10:	0081280e 	bge	zero,r2,462b4 <_dtoa_r+0x11b0>
   45e14:	100d883a 	mov	r6,r2
   45e18:	1021883a 	mov	r16,r2
   45e1c:	d8800c15 	stw	r2,48(sp)
   45e20:	d8800615 	stw	r2,24(sp)
   45e24:	003d8806 	br	45448 <__alt_data_end+0xfffd9528>
   45e28:	d8800617 	ldw	r2,24(sp)
   45e2c:	00be9b16 	blt	zero,r2,4589c <__alt_data_end+0xfffd997c>
   45e30:	10010f1e 	bne	r2,zero,46270 <_dtoa_r+0x116c>
   45e34:	880b883a 	mov	r5,r17
   45e38:	000d883a 	mov	r6,zero
   45e3c:	01d00534 	movhi	r7,16404
   45e40:	8009883a 	mov	r4,r16
   45e44:	004c9700 	call	4c970 <__muldf3>
   45e48:	900d883a 	mov	r6,r18
   45e4c:	980f883a 	mov	r7,r19
   45e50:	1009883a 	mov	r4,r2
   45e54:	180b883a 	mov	r5,r3
   45e58:	004c7a00 	call	4c7a0 <__gedf2>
   45e5c:	002b883a 	mov	r21,zero
   45e60:	0023883a 	mov	r17,zero
   45e64:	1000bf16 	blt	r2,zero,46164 <_dtoa_r+0x1060>
   45e68:	d9802217 	ldw	r6,136(sp)
   45e6c:	ddc00717 	ldw	r23,28(sp)
   45e70:	018c303a 	nor	r6,zero,r6
   45e74:	d9800515 	stw	r6,20(sp)
   45e78:	a80b883a 	mov	r5,r21
   45e7c:	e009883a 	mov	r4,fp
   45e80:	00472c00 	call	472c0 <_Bfree>
   45e84:	883e4926 	beq	r17,zero,457ac <__alt_data_end+0xfffd988c>
   45e88:	003fad06 	br	45d40 <__alt_data_end+0xfffd9e20>
   45e8c:	d9c01117 	ldw	r7,68(sp)
   45e90:	3801bc26 	beq	r7,zero,46584 <_dtoa_r+0x1480>
   45e94:	10810cc4 	addi	r2,r2,1075
   45e98:	dd400a17 	ldw	r21,40(sp)
   45e9c:	dd000817 	ldw	r20,32(sp)
   45ea0:	003f0a06 	br	45acc <__alt_data_end+0xfffd9bac>
   45ea4:	00800704 	movi	r2,28
   45ea8:	d9000817 	ldw	r4,32(sp)
   45eac:	a0a9883a 	add	r20,r20,r2
   45eb0:	b0ad883a 	add	r22,r22,r2
   45eb4:	2089883a 	add	r4,r4,r2
   45eb8:	d9000815 	stw	r4,32(sp)
   45ebc:	003f5106 	br	45c04 <__alt_data_end+0xfffd9ce4>
   45ec0:	d8c00317 	ldw	r3,12(sp)
   45ec4:	b8c1fc0e 	bge	r23,r3,466b8 <_dtoa_r+0x15b4>
   45ec8:	0027883a 	mov	r19,zero
   45ecc:	b805883a 	mov	r2,r23
   45ed0:	003f3e06 	br	45bcc <__alt_data_end+0xfffd9cac>
   45ed4:	880b883a 	mov	r5,r17
   45ed8:	e009883a 	mov	r4,fp
   45edc:	000f883a 	mov	r7,zero
   45ee0:	01800284 	movi	r6,10
   45ee4:	00472e80 	call	472e8 <__multadd>
   45ee8:	d9000c17 	ldw	r4,48(sp)
   45eec:	1023883a 	mov	r17,r2
   45ef0:	0102040e 	bge	zero,r4,46704 <_dtoa_r+0x1600>
   45ef4:	d9000615 	stw	r4,24(sp)
   45ef8:	0500050e 	bge	zero,r20,45f10 <_dtoa_r+0xe0c>
   45efc:	880b883a 	mov	r5,r17
   45f00:	a00d883a 	mov	r6,r20
   45f04:	e009883a 	mov	r4,fp
   45f08:	0047a540 	call	47a54 <__lshift>
   45f0c:	1023883a 	mov	r17,r2
   45f10:	9801241e 	bne	r19,zero,463a4 <_dtoa_r+0x12a0>
   45f14:	8829883a 	mov	r20,r17
   45f18:	d9000617 	ldw	r4,24(sp)
   45f1c:	dcc00717 	ldw	r19,28(sp)
   45f20:	9480004c 	andi	r18,r18,1
   45f24:	20bfffc4 	addi	r2,r4,-1
   45f28:	9885883a 	add	r2,r19,r2
   45f2c:	d8800415 	stw	r2,16(sp)
   45f30:	dc800615 	stw	r18,24(sp)
   45f34:	a80b883a 	mov	r5,r21
   45f38:	8009883a 	mov	r4,r16
   45f3c:	0044edc0 	call	44edc <quorem>
   45f40:	880b883a 	mov	r5,r17
   45f44:	8009883a 	mov	r4,r16
   45f48:	102f883a 	mov	r23,r2
   45f4c:	0047b9c0 	call	47b9c <__mcmp>
   45f50:	a80b883a 	mov	r5,r21
   45f54:	a00d883a 	mov	r6,r20
   45f58:	e009883a 	mov	r4,fp
   45f5c:	102d883a 	mov	r22,r2
   45f60:	0047bfc0 	call	47bfc <__mdiff>
   45f64:	1007883a 	mov	r3,r2
   45f68:	10800317 	ldw	r2,12(r2)
   45f6c:	bc800c04 	addi	r18,r23,48
   45f70:	180b883a 	mov	r5,r3
   45f74:	10004e1e 	bne	r2,zero,460b0 <_dtoa_r+0xfac>
   45f78:	8009883a 	mov	r4,r16
   45f7c:	d8c01615 	stw	r3,88(sp)
   45f80:	0047b9c0 	call	47b9c <__mcmp>
   45f84:	d8c01617 	ldw	r3,88(sp)
   45f88:	e009883a 	mov	r4,fp
   45f8c:	d8801615 	stw	r2,88(sp)
   45f90:	180b883a 	mov	r5,r3
   45f94:	00472c00 	call	472c0 <_Bfree>
   45f98:	d8801617 	ldw	r2,88(sp)
   45f9c:	1000041e 	bne	r2,zero,45fb0 <_dtoa_r+0xeac>
   45fa0:	d9800317 	ldw	r6,12(sp)
   45fa4:	3000021e 	bne	r6,zero,45fb0 <_dtoa_r+0xeac>
   45fa8:	d8c00617 	ldw	r3,24(sp)
   45fac:	18003726 	beq	r3,zero,4608c <_dtoa_r+0xf88>
   45fb0:	b0002016 	blt	r22,zero,46034 <_dtoa_r+0xf30>
   45fb4:	b000041e 	bne	r22,zero,45fc8 <_dtoa_r+0xec4>
   45fb8:	d9000317 	ldw	r4,12(sp)
   45fbc:	2000021e 	bne	r4,zero,45fc8 <_dtoa_r+0xec4>
   45fc0:	d8c00617 	ldw	r3,24(sp)
   45fc4:	18001b26 	beq	r3,zero,46034 <_dtoa_r+0xf30>
   45fc8:	00810716 	blt	zero,r2,463e8 <_dtoa_r+0x12e4>
   45fcc:	d8c00417 	ldw	r3,16(sp)
   45fd0:	9d800044 	addi	r22,r19,1
   45fd4:	9c800005 	stb	r18,0(r19)
   45fd8:	b02f883a 	mov	r23,r22
   45fdc:	98c10626 	beq	r19,r3,463f8 <_dtoa_r+0x12f4>
   45fe0:	800b883a 	mov	r5,r16
   45fe4:	000f883a 	mov	r7,zero
   45fe8:	01800284 	movi	r6,10
   45fec:	e009883a 	mov	r4,fp
   45ff0:	00472e80 	call	472e8 <__multadd>
   45ff4:	1021883a 	mov	r16,r2
   45ff8:	000f883a 	mov	r7,zero
   45ffc:	01800284 	movi	r6,10
   46000:	880b883a 	mov	r5,r17
   46004:	e009883a 	mov	r4,fp
   46008:	8d002526 	beq	r17,r20,460a0 <_dtoa_r+0xf9c>
   4600c:	00472e80 	call	472e8 <__multadd>
   46010:	a00b883a 	mov	r5,r20
   46014:	000f883a 	mov	r7,zero
   46018:	01800284 	movi	r6,10
   4601c:	e009883a 	mov	r4,fp
   46020:	1023883a 	mov	r17,r2
   46024:	00472e80 	call	472e8 <__multadd>
   46028:	1029883a 	mov	r20,r2
   4602c:	b027883a 	mov	r19,r22
   46030:	003fc006 	br	45f34 <__alt_data_end+0xfffda014>
   46034:	9011883a 	mov	r8,r18
   46038:	00800e0e 	bge	zero,r2,46074 <_dtoa_r+0xf70>
   4603c:	800b883a 	mov	r5,r16
   46040:	01800044 	movi	r6,1
   46044:	e009883a 	mov	r4,fp
   46048:	da001715 	stw	r8,92(sp)
   4604c:	0047a540 	call	47a54 <__lshift>
   46050:	a80b883a 	mov	r5,r21
   46054:	1009883a 	mov	r4,r2
   46058:	1021883a 	mov	r16,r2
   4605c:	0047b9c0 	call	47b9c <__mcmp>
   46060:	da001717 	ldw	r8,92(sp)
   46064:	0081960e 	bge	zero,r2,466c0 <_dtoa_r+0x15bc>
   46068:	00800e44 	movi	r2,57
   4606c:	40817026 	beq	r8,r2,46630 <_dtoa_r+0x152c>
   46070:	ba000c44 	addi	r8,r23,49
   46074:	8825883a 	mov	r18,r17
   46078:	9dc00044 	addi	r23,r19,1
   4607c:	9a000005 	stb	r8,0(r19)
   46080:	a023883a 	mov	r17,r20
   46084:	dc000915 	stw	r16,36(sp)
   46088:	003f2406 	br	45d1c <__alt_data_end+0xfffd9dfc>
   4608c:	00800e44 	movi	r2,57
   46090:	9011883a 	mov	r8,r18
   46094:	90816626 	beq	r18,r2,46630 <_dtoa_r+0x152c>
   46098:	05bff516 	blt	zero,r22,46070 <__alt_data_end+0xfffda150>
   4609c:	003ff506 	br	46074 <__alt_data_end+0xfffda154>
   460a0:	00472e80 	call	472e8 <__multadd>
   460a4:	1023883a 	mov	r17,r2
   460a8:	1029883a 	mov	r20,r2
   460ac:	003fdf06 	br	4602c <__alt_data_end+0xfffda10c>
   460b0:	e009883a 	mov	r4,fp
   460b4:	00472c00 	call	472c0 <_Bfree>
   460b8:	00800044 	movi	r2,1
   460bc:	003fbc06 	br	45fb0 <__alt_data_end+0xfffda090>
   460c0:	a80b883a 	mov	r5,r21
   460c4:	8009883a 	mov	r4,r16
   460c8:	0047b9c0 	call	47b9c <__mcmp>
   460cc:	103edb0e 	bge	r2,zero,45c3c <__alt_data_end+0xfffd9d1c>
   460d0:	800b883a 	mov	r5,r16
   460d4:	000f883a 	mov	r7,zero
   460d8:	01800284 	movi	r6,10
   460dc:	e009883a 	mov	r4,fp
   460e0:	00472e80 	call	472e8 <__multadd>
   460e4:	1021883a 	mov	r16,r2
   460e8:	d8800517 	ldw	r2,20(sp)
   460ec:	d8c00b17 	ldw	r3,44(sp)
   460f0:	10bfffc4 	addi	r2,r2,-1
   460f4:	d8800515 	stw	r2,20(sp)
   460f8:	183f761e 	bne	r3,zero,45ed4 <__alt_data_end+0xfffd9fb4>
   460fc:	d9000c17 	ldw	r4,48(sp)
   46100:	0101730e 	bge	zero,r4,466d0 <_dtoa_r+0x15cc>
   46104:	d9000615 	stw	r4,24(sp)
   46108:	003ed006 	br	45c4c <__alt_data_end+0xfffd9d2c>
   4610c:	00800084 	movi	r2,2
   46110:	3081861e 	bne	r6,r2,4672c <_dtoa_r+0x1628>
   46114:	d8000b15 	stw	zero,44(sp)
   46118:	003f3c06 	br	45e0c <__alt_data_end+0xfffd9eec>
   4611c:	dc000917 	ldw	r16,36(sp)
   46120:	003e9206 	br	45b6c <__alt_data_end+0xfffd9c4c>
   46124:	d9c00317 	ldw	r7,12(sp)
   46128:	00800084 	movi	r2,2
   4612c:	11fec50e 	bge	r2,r7,45c44 <__alt_data_end+0xfffd9d24>
   46130:	d9000617 	ldw	r4,24(sp)
   46134:	20013c1e 	bne	r4,zero,46628 <_dtoa_r+0x1524>
   46138:	a80b883a 	mov	r5,r21
   4613c:	000f883a 	mov	r7,zero
   46140:	01800144 	movi	r6,5
   46144:	e009883a 	mov	r4,fp
   46148:	00472e80 	call	472e8 <__multadd>
   4614c:	100b883a 	mov	r5,r2
   46150:	8009883a 	mov	r4,r16
   46154:	102b883a 	mov	r21,r2
   46158:	0047b9c0 	call	47b9c <__mcmp>
   4615c:	dc000915 	stw	r16,36(sp)
   46160:	00bf410e 	bge	zero,r2,45e68 <__alt_data_end+0xfffd9f48>
   46164:	d9c00717 	ldw	r7,28(sp)
   46168:	00800c44 	movi	r2,49
   4616c:	38800005 	stb	r2,0(r7)
   46170:	d8800517 	ldw	r2,20(sp)
   46174:	3dc00044 	addi	r23,r7,1
   46178:	10800044 	addi	r2,r2,1
   4617c:	d8800515 	stw	r2,20(sp)
   46180:	003f3d06 	br	45e78 <__alt_data_end+0xfffd9f58>
   46184:	d9800517 	ldw	r6,20(sp)
   46188:	d9c00717 	ldw	r7,28(sp)
   4618c:	00800c44 	movi	r2,49
   46190:	31800044 	addi	r6,r6,1
   46194:	d9800515 	stw	r6,20(sp)
   46198:	38800005 	stb	r2,0(r7)
   4619c:	003edf06 	br	45d1c <__alt_data_end+0xfffd9dfc>
   461a0:	d8000b15 	stw	zero,44(sp)
   461a4:	003c9f06 	br	45424 <__alt_data_end+0xfffd9504>
   461a8:	903e7e1e 	bne	r18,zero,45ba4 <__alt_data_end+0xfffd9c84>
   461ac:	00800434 	movhi	r2,16
   461b0:	10bfffc4 	addi	r2,r2,-1
   461b4:	9884703a 	and	r2,r19,r2
   461b8:	1000ea1e 	bne	r2,zero,46564 <_dtoa_r+0x1460>
   461bc:	9cdffc2c 	andhi	r19,r19,32752
   461c0:	9800e826 	beq	r19,zero,46564 <_dtoa_r+0x1460>
   461c4:	d9c00817 	ldw	r7,32(sp)
   461c8:	b5800044 	addi	r22,r22,1
   461cc:	04c00044 	movi	r19,1
   461d0:	39c00044 	addi	r7,r7,1
   461d4:	d9c00815 	stw	r7,32(sp)
   461d8:	d8800d17 	ldw	r2,52(sp)
   461dc:	103e721e 	bne	r2,zero,45ba8 <__alt_data_end+0xfffd9c88>
   461e0:	00800044 	movi	r2,1
   461e4:	003e7906 	br	45bcc <__alt_data_end+0xfffd9cac>
   461e8:	8009883a 	mov	r4,r16
   461ec:	004db580 	call	4db58 <__floatsidf>
   461f0:	d9800f17 	ldw	r6,60(sp)
   461f4:	d9c01017 	ldw	r7,64(sp)
   461f8:	1009883a 	mov	r4,r2
   461fc:	180b883a 	mov	r5,r3
   46200:	004c9700 	call	4c970 <__muldf3>
   46204:	000d883a 	mov	r6,zero
   46208:	01d00734 	movhi	r7,16412
   4620c:	1009883a 	mov	r4,r2
   46210:	180b883a 	mov	r5,r3
   46214:	004b49c0 	call	4b49c <__adddf3>
   46218:	047f3034 	movhi	r17,64704
   4621c:	1021883a 	mov	r16,r2
   46220:	1c63883a 	add	r17,r3,r17
   46224:	d9000f17 	ldw	r4,60(sp)
   46228:	d9401017 	ldw	r5,64(sp)
   4622c:	000d883a 	mov	r6,zero
   46230:	01d00534 	movhi	r7,16404
   46234:	004d1dc0 	call	4d1dc <__subdf3>
   46238:	800d883a 	mov	r6,r16
   4623c:	880f883a 	mov	r7,r17
   46240:	1009883a 	mov	r4,r2
   46244:	180b883a 	mov	r5,r3
   46248:	102b883a 	mov	r21,r2
   4624c:	1829883a 	mov	r20,r3
   46250:	004c7a00 	call	4c7a0 <__gedf2>
   46254:	00806c16 	blt	zero,r2,46408 <_dtoa_r+0x1304>
   46258:	89e0003c 	xorhi	r7,r17,32768
   4625c:	800d883a 	mov	r6,r16
   46260:	a809883a 	mov	r4,r21
   46264:	a00b883a 	mov	r5,r20
   46268:	004c87c0 	call	4c87c <__ledf2>
   4626c:	103d7e0e 	bge	r2,zero,45868 <__alt_data_end+0xfffd9948>
   46270:	002b883a 	mov	r21,zero
   46274:	0023883a 	mov	r17,zero
   46278:	003efb06 	br	45e68 <__alt_data_end+0xfffd9f48>
   4627c:	d8800717 	ldw	r2,28(sp)
   46280:	003bd006 	br	451c4 <__alt_data_end+0xfffd92a4>
   46284:	d9000a17 	ldw	r4,40(sp)
   46288:	d9800d17 	ldw	r6,52(sp)
   4628c:	dd400a15 	stw	r21,40(sp)
   46290:	a905c83a 	sub	r2,r21,r4
   46294:	308d883a 	add	r6,r6,r2
   46298:	d9800d15 	stw	r6,52(sp)
   4629c:	002b883a 	mov	r21,zero
   462a0:	003e0606 	br	45abc <__alt_data_end+0xfffd9b9c>
   462a4:	9023883a 	mov	r17,r18
   462a8:	9829883a 	mov	r20,r19
   462ac:	04000084 	movi	r16,2
   462b0:	003c9206 	br	454fc <__alt_data_end+0xfffd95dc>
   462b4:	04000044 	movi	r16,1
   462b8:	dc000c15 	stw	r16,48(sp)
   462bc:	dc000615 	stw	r16,24(sp)
   462c0:	dc002215 	stw	r16,136(sp)
   462c4:	e0001115 	stw	zero,68(fp)
   462c8:	000b883a 	mov	r5,zero
   462cc:	003c6906 	br	45474 <__alt_data_end+0xfffd9554>
   462d0:	3021883a 	mov	r16,r6
   462d4:	003ffb06 	br	462c4 <__alt_data_end+0xfffda3a4>
   462d8:	1000021e 	bne	r2,zero,462e4 <_dtoa_r+0x11e0>
   462dc:	4200004c 	andi	r8,r8,1
   462e0:	403e7d1e 	bne	r8,zero,45cd8 <__alt_data_end+0xfffd9db8>
   462e4:	01000c04 	movi	r4,48
   462e8:	00000106 	br	462f0 <_dtoa_r+0x11ec>
   462ec:	102f883a 	mov	r23,r2
   462f0:	b8bfffc4 	addi	r2,r23,-1
   462f4:	10c00007 	ldb	r3,0(r2)
   462f8:	193ffc26 	beq	r3,r4,462ec <__alt_data_end+0xfffda3cc>
   462fc:	003e8706 	br	45d1c <__alt_data_end+0xfffd9dfc>
   46300:	d8800517 	ldw	r2,20(sp)
   46304:	00a3c83a 	sub	r17,zero,r2
   46308:	8800a426 	beq	r17,zero,4659c <_dtoa_r+0x1498>
   4630c:	888003cc 	andi	r2,r17,15
   46310:	100490fa 	slli	r2,r2,3
   46314:	00c00174 	movhi	r3,5
   46318:	18c23004 	addi	r3,r3,2240
   4631c:	1885883a 	add	r2,r3,r2
   46320:	11800017 	ldw	r6,0(r2)
   46324:	11c00117 	ldw	r7,4(r2)
   46328:	9009883a 	mov	r4,r18
   4632c:	980b883a 	mov	r5,r19
   46330:	8823d13a 	srai	r17,r17,4
   46334:	004c9700 	call	4c970 <__muldf3>
   46338:	d8800f15 	stw	r2,60(sp)
   4633c:	d8c01015 	stw	r3,64(sp)
   46340:	8800e826 	beq	r17,zero,466e4 <_dtoa_r+0x15e0>
   46344:	05000174 	movhi	r20,5
   46348:	a5022604 	addi	r20,r20,2200
   4634c:	04000084 	movi	r16,2
   46350:	8980004c 	andi	r6,r17,1
   46354:	1009883a 	mov	r4,r2
   46358:	8823d07a 	srai	r17,r17,1
   4635c:	180b883a 	mov	r5,r3
   46360:	30000426 	beq	r6,zero,46374 <_dtoa_r+0x1270>
   46364:	a1800017 	ldw	r6,0(r20)
   46368:	a1c00117 	ldw	r7,4(r20)
   4636c:	84000044 	addi	r16,r16,1
   46370:	004c9700 	call	4c970 <__muldf3>
   46374:	a5000204 	addi	r20,r20,8
   46378:	883ff51e 	bne	r17,zero,46350 <__alt_data_end+0xfffda430>
   4637c:	d8800f15 	stw	r2,60(sp)
   46380:	d8c01015 	stw	r3,64(sp)
   46384:	003c7606 	br	45560 <__alt_data_end+0xfffd9640>
   46388:	00c00c04 	movi	r3,48
   4638c:	10c00005 	stb	r3,0(r2)
   46390:	d8c00517 	ldw	r3,20(sp)
   46394:	bd3fffc3 	ldbu	r20,-1(r23)
   46398:	18c00044 	addi	r3,r3,1
   4639c:	d8c00515 	stw	r3,20(sp)
   463a0:	003db906 	br	45a88 <__alt_data_end+0xfffd9b68>
   463a4:	89400117 	ldw	r5,4(r17)
   463a8:	e009883a 	mov	r4,fp
   463ac:	00472180 	call	47218 <_Balloc>
   463b0:	89800417 	ldw	r6,16(r17)
   463b4:	89400304 	addi	r5,r17,12
   463b8:	11000304 	addi	r4,r2,12
   463bc:	31800084 	addi	r6,r6,2
   463c0:	318d883a 	add	r6,r6,r6
   463c4:	318d883a 	add	r6,r6,r6
   463c8:	1027883a 	mov	r19,r2
   463cc:	0046f740 	call	46f74 <memcpy>
   463d0:	01800044 	movi	r6,1
   463d4:	980b883a 	mov	r5,r19
   463d8:	e009883a 	mov	r4,fp
   463dc:	0047a540 	call	47a54 <__lshift>
   463e0:	1029883a 	mov	r20,r2
   463e4:	003ecc06 	br	45f18 <__alt_data_end+0xfffd9ff8>
   463e8:	00800e44 	movi	r2,57
   463ec:	90809026 	beq	r18,r2,46630 <_dtoa_r+0x152c>
   463f0:	92000044 	addi	r8,r18,1
   463f4:	003f1f06 	br	46074 <__alt_data_end+0xfffda154>
   463f8:	9011883a 	mov	r8,r18
   463fc:	8825883a 	mov	r18,r17
   46400:	a023883a 	mov	r17,r20
   46404:	003e2906 	br	45cac <__alt_data_end+0xfffd9d8c>
   46408:	002b883a 	mov	r21,zero
   4640c:	0023883a 	mov	r17,zero
   46410:	003f5406 	br	46164 <__alt_data_end+0xfffda244>
   46414:	61bfffc4 	addi	r6,r12,-1
   46418:	300490fa 	slli	r2,r6,3
   4641c:	00c00174 	movhi	r3,5
   46420:	18c23004 	addi	r3,r3,2240
   46424:	1885883a 	add	r2,r3,r2
   46428:	11000017 	ldw	r4,0(r2)
   4642c:	11400117 	ldw	r5,4(r2)
   46430:	d8800717 	ldw	r2,28(sp)
   46434:	880f883a 	mov	r7,r17
   46438:	d9801215 	stw	r6,72(sp)
   4643c:	800d883a 	mov	r6,r16
   46440:	db001615 	stw	r12,88(sp)
   46444:	15c00044 	addi	r23,r2,1
   46448:	004c9700 	call	4c970 <__muldf3>
   4644c:	d9401017 	ldw	r5,64(sp)
   46450:	d9000f17 	ldw	r4,60(sp)
   46454:	d8c01515 	stw	r3,84(sp)
   46458:	d8801415 	stw	r2,80(sp)
   4645c:	004dad80 	call	4dad8 <__fixdfsi>
   46460:	1009883a 	mov	r4,r2
   46464:	1021883a 	mov	r16,r2
   46468:	004db580 	call	4db58 <__floatsidf>
   4646c:	d9000f17 	ldw	r4,60(sp)
   46470:	d9401017 	ldw	r5,64(sp)
   46474:	100d883a 	mov	r6,r2
   46478:	180f883a 	mov	r7,r3
   4647c:	004d1dc0 	call	4d1dc <__subdf3>
   46480:	1829883a 	mov	r20,r3
   46484:	d8c00717 	ldw	r3,28(sp)
   46488:	84000c04 	addi	r16,r16,48
   4648c:	1023883a 	mov	r17,r2
   46490:	1c000005 	stb	r16,0(r3)
   46494:	db001617 	ldw	r12,88(sp)
   46498:	00800044 	movi	r2,1
   4649c:	60802226 	beq	r12,r2,46528 <_dtoa_r+0x1424>
   464a0:	d9c00717 	ldw	r7,28(sp)
   464a4:	8805883a 	mov	r2,r17
   464a8:	b82b883a 	mov	r21,r23
   464ac:	3b19883a 	add	r12,r7,r12
   464b0:	6023883a 	mov	r17,r12
   464b4:	a007883a 	mov	r3,r20
   464b8:	dc800f15 	stw	r18,60(sp)
   464bc:	000d883a 	mov	r6,zero
   464c0:	01d00934 	movhi	r7,16420
   464c4:	1009883a 	mov	r4,r2
   464c8:	180b883a 	mov	r5,r3
   464cc:	004c9700 	call	4c970 <__muldf3>
   464d0:	180b883a 	mov	r5,r3
   464d4:	1009883a 	mov	r4,r2
   464d8:	1829883a 	mov	r20,r3
   464dc:	1025883a 	mov	r18,r2
   464e0:	004dad80 	call	4dad8 <__fixdfsi>
   464e4:	1009883a 	mov	r4,r2
   464e8:	1021883a 	mov	r16,r2
   464ec:	004db580 	call	4db58 <__floatsidf>
   464f0:	100d883a 	mov	r6,r2
   464f4:	180f883a 	mov	r7,r3
   464f8:	9009883a 	mov	r4,r18
   464fc:	a00b883a 	mov	r5,r20
   46500:	84000c04 	addi	r16,r16,48
   46504:	004d1dc0 	call	4d1dc <__subdf3>
   46508:	ad400044 	addi	r21,r21,1
   4650c:	ac3fffc5 	stb	r16,-1(r21)
   46510:	ac7fea1e 	bne	r21,r17,464bc <__alt_data_end+0xfffda59c>
   46514:	1023883a 	mov	r17,r2
   46518:	d8801217 	ldw	r2,72(sp)
   4651c:	dc800f17 	ldw	r18,60(sp)
   46520:	1829883a 	mov	r20,r3
   46524:	b8af883a 	add	r23,r23,r2
   46528:	d9001417 	ldw	r4,80(sp)
   4652c:	d9401517 	ldw	r5,84(sp)
   46530:	000d883a 	mov	r6,zero
   46534:	01cff834 	movhi	r7,16352
   46538:	004b49c0 	call	4b49c <__adddf3>
   4653c:	880d883a 	mov	r6,r17
   46540:	a00f883a 	mov	r7,r20
   46544:	1009883a 	mov	r4,r2
   46548:	180b883a 	mov	r5,r3
   4654c:	004c87c0 	call	4c87c <__ledf2>
   46550:	10003e0e 	bge	r2,zero,4664c <_dtoa_r+0x1548>
   46554:	d9001317 	ldw	r4,76(sp)
   46558:	bd3fffc3 	ldbu	r20,-1(r23)
   4655c:	d9000515 	stw	r4,20(sp)
   46560:	003d3b06 	br	45a50 <__alt_data_end+0xfffd9b30>
   46564:	0027883a 	mov	r19,zero
   46568:	003f1b06 	br	461d8 <__alt_data_end+0xfffda2b8>
   4656c:	d8800817 	ldw	r2,32(sp)
   46570:	11e9c83a 	sub	r20,r2,r7
   46574:	0005883a 	mov	r2,zero
   46578:	003d5406 	br	45acc <__alt_data_end+0xfffd9bac>
   4657c:	00800044 	movi	r2,1
   46580:	003dc706 	br	45ca0 <__alt_data_end+0xfffd9d80>
   46584:	d8c00217 	ldw	r3,8(sp)
   46588:	00800d84 	movi	r2,54
   4658c:	dd400a17 	ldw	r21,40(sp)
   46590:	10c5c83a 	sub	r2,r2,r3
   46594:	dd000817 	ldw	r20,32(sp)
   46598:	003d4c06 	br	45acc <__alt_data_end+0xfffd9bac>
   4659c:	dc800f15 	stw	r18,60(sp)
   465a0:	dcc01015 	stw	r19,64(sp)
   465a4:	04000084 	movi	r16,2
   465a8:	003bed06 	br	45560 <__alt_data_end+0xfffd9640>
   465ac:	d9000617 	ldw	r4,24(sp)
   465b0:	203f0d26 	beq	r4,zero,461e8 <__alt_data_end+0xfffda2c8>
   465b4:	d9800c17 	ldw	r6,48(sp)
   465b8:	01bcab0e 	bge	zero,r6,45868 <__alt_data_end+0xfffd9948>
   465bc:	d9401017 	ldw	r5,64(sp)
   465c0:	d9000f17 	ldw	r4,60(sp)
   465c4:	000d883a 	mov	r6,zero
   465c8:	01d00934 	movhi	r7,16420
   465cc:	004c9700 	call	4c970 <__muldf3>
   465d0:	81000044 	addi	r4,r16,1
   465d4:	d8800f15 	stw	r2,60(sp)
   465d8:	d8c01015 	stw	r3,64(sp)
   465dc:	004db580 	call	4db58 <__floatsidf>
   465e0:	d9800f17 	ldw	r6,60(sp)
   465e4:	d9c01017 	ldw	r7,64(sp)
   465e8:	1009883a 	mov	r4,r2
   465ec:	180b883a 	mov	r5,r3
   465f0:	004c9700 	call	4c970 <__muldf3>
   465f4:	01d00734 	movhi	r7,16412
   465f8:	000d883a 	mov	r6,zero
   465fc:	1009883a 	mov	r4,r2
   46600:	180b883a 	mov	r5,r3
   46604:	004b49c0 	call	4b49c <__adddf3>
   46608:	d9c00517 	ldw	r7,20(sp)
   4660c:	047f3034 	movhi	r17,64704
   46610:	1021883a 	mov	r16,r2
   46614:	39ffffc4 	addi	r7,r7,-1
   46618:	d9c01315 	stw	r7,76(sp)
   4661c:	1c63883a 	add	r17,r3,r17
   46620:	db000c17 	ldw	r12,48(sp)
   46624:	003bea06 	br	455d0 <__alt_data_end+0xfffd96b0>
   46628:	dc000915 	stw	r16,36(sp)
   4662c:	003e0e06 	br	45e68 <__alt_data_end+0xfffd9f48>
   46630:	01000e44 	movi	r4,57
   46634:	8825883a 	mov	r18,r17
   46638:	9dc00044 	addi	r23,r19,1
   4663c:	99000005 	stb	r4,0(r19)
   46640:	a023883a 	mov	r17,r20
   46644:	dc000915 	stw	r16,36(sp)
   46648:	003da406 	br	45cdc <__alt_data_end+0xfffd9dbc>
   4664c:	d9801417 	ldw	r6,80(sp)
   46650:	d9c01517 	ldw	r7,84(sp)
   46654:	0009883a 	mov	r4,zero
   46658:	014ff834 	movhi	r5,16352
   4665c:	004d1dc0 	call	4d1dc <__subdf3>
   46660:	880d883a 	mov	r6,r17
   46664:	a00f883a 	mov	r7,r20
   46668:	1009883a 	mov	r4,r2
   4666c:	180b883a 	mov	r5,r3
   46670:	004c7a00 	call	4c7a0 <__gedf2>
   46674:	00bc7c0e 	bge	zero,r2,45868 <__alt_data_end+0xfffd9948>
   46678:	01000c04 	movi	r4,48
   4667c:	00000106 	br	46684 <_dtoa_r+0x1580>
   46680:	102f883a 	mov	r23,r2
   46684:	b8bfffc4 	addi	r2,r23,-1
   46688:	10c00007 	ldb	r3,0(r2)
   4668c:	193ffc26 	beq	r3,r4,46680 <__alt_data_end+0xfffda760>
   46690:	d9801317 	ldw	r6,76(sp)
   46694:	d9800515 	stw	r6,20(sp)
   46698:	003c4406 	br	457ac <__alt_data_end+0xfffd988c>
   4669c:	d9801317 	ldw	r6,76(sp)
   466a0:	d9800515 	stw	r6,20(sp)
   466a4:	003cea06 	br	45a50 <__alt_data_end+0xfffd9b30>
   466a8:	dd800f17 	ldw	r22,60(sp)
   466ac:	dcc01017 	ldw	r19,64(sp)
   466b0:	dc801217 	ldw	r18,72(sp)
   466b4:	003c6c06 	br	45868 <__alt_data_end+0xfffd9948>
   466b8:	903e031e 	bne	r18,zero,45ec8 <__alt_data_end+0xfffd9fa8>
   466bc:	003ebb06 	br	461ac <__alt_data_end+0xfffda28c>
   466c0:	103e6c1e 	bne	r2,zero,46074 <__alt_data_end+0xfffda154>
   466c4:	4080004c 	andi	r2,r8,1
   466c8:	103e6a26 	beq	r2,zero,46074 <__alt_data_end+0xfffda154>
   466cc:	003e6606 	br	46068 <__alt_data_end+0xfffda148>
   466d0:	d8c00317 	ldw	r3,12(sp)
   466d4:	00800084 	movi	r2,2
   466d8:	10c02916 	blt	r2,r3,46780 <_dtoa_r+0x167c>
   466dc:	d9000c17 	ldw	r4,48(sp)
   466e0:	003e8806 	br	46104 <__alt_data_end+0xfffda1e4>
   466e4:	04000084 	movi	r16,2
   466e8:	003b9d06 	br	45560 <__alt_data_end+0xfffd9640>
   466ec:	d9001317 	ldw	r4,76(sp)
   466f0:	d9000515 	stw	r4,20(sp)
   466f4:	003cd606 	br	45a50 <__alt_data_end+0xfffd9b30>
   466f8:	d8801317 	ldw	r2,76(sp)
   466fc:	d8800515 	stw	r2,20(sp)
   46700:	003c2a06 	br	457ac <__alt_data_end+0xfffd988c>
   46704:	d9800317 	ldw	r6,12(sp)
   46708:	00800084 	movi	r2,2
   4670c:	11801516 	blt	r2,r6,46764 <_dtoa_r+0x1660>
   46710:	d9c00c17 	ldw	r7,48(sp)
   46714:	d9c00615 	stw	r7,24(sp)
   46718:	003df706 	br	45ef8 <__alt_data_end+0xfffd9fd8>
   4671c:	193d3926 	beq	r3,r4,45c04 <__alt_data_end+0xfffd9ce4>
   46720:	00c00f04 	movi	r3,60
   46724:	1885c83a 	sub	r2,r3,r2
   46728:	003ddf06 	br	45ea8 <__alt_data_end+0xfffd9f88>
   4672c:	e009883a 	mov	r4,fp
   46730:	e0001115 	stw	zero,68(fp)
   46734:	000b883a 	mov	r5,zero
   46738:	00472180 	call	47218 <_Balloc>
   4673c:	d8800715 	stw	r2,28(sp)
   46740:	d8c00717 	ldw	r3,28(sp)
   46744:	00bfffc4 	movi	r2,-1
   46748:	01000044 	movi	r4,1
   4674c:	d8800c15 	stw	r2,48(sp)
   46750:	e0c01015 	stw	r3,64(fp)
   46754:	d9000b15 	stw	r4,44(sp)
   46758:	d8800615 	stw	r2,24(sp)
   4675c:	d8002215 	stw	zero,136(sp)
   46760:	003c4106 	br	45868 <__alt_data_end+0xfffd9948>
   46764:	d8c00c17 	ldw	r3,48(sp)
   46768:	d8c00615 	stw	r3,24(sp)
   4676c:	003e7006 	br	46130 <__alt_data_end+0xfffda210>
   46770:	04400044 	movi	r17,1
   46774:	003b2006 	br	453f8 <__alt_data_end+0xfffd94d8>
   46778:	000b883a 	mov	r5,zero
   4677c:	003b3d06 	br	45474 <__alt_data_end+0xfffd9554>
   46780:	d8800c17 	ldw	r2,48(sp)
   46784:	d8800615 	stw	r2,24(sp)
   46788:	003e6906 	br	46130 <__alt_data_end+0xfffda210>

0004678c <__sflags>:
   4678c:	28800007 	ldb	r2,0(r5)
   46790:	00c01c84 	movi	r3,114
   46794:	10c02426 	beq	r2,r3,46828 <__sflags+0x9c>
   46798:	00c01dc4 	movi	r3,119
   4679c:	10c01e26 	beq	r2,r3,46818 <__sflags+0x8c>
   467a0:	00c01844 	movi	r3,97
   467a4:	10c00426 	beq	r2,r3,467b8 <__sflags+0x2c>
   467a8:	00800584 	movi	r2,22
   467ac:	20800015 	stw	r2,0(r4)
   467b0:	0005883a 	mov	r2,zero
   467b4:	f800283a 	ret
   467b8:	02c08204 	movi	r11,520
   467bc:	01000044 	movi	r4,1
   467c0:	00804204 	movi	r2,264
   467c4:	01c00ac4 	movi	r7,43
   467c8:	02bff8c4 	movi	r10,-29
   467cc:	027fff04 	movi	r9,-4
   467d0:	02001e04 	movi	r8,120
   467d4:	29400044 	addi	r5,r5,1
   467d8:	28c00007 	ldb	r3,0(r5)
   467dc:	18000626 	beq	r3,zero,467f8 <__sflags+0x6c>
   467e0:	19c00826 	beq	r3,r7,46804 <__sflags+0x78>
   467e4:	1a3ffb1e 	bne	r3,r8,467d4 <__alt_data_end+0xfffda8b4>
   467e8:	29400044 	addi	r5,r5,1
   467ec:	28c00007 	ldb	r3,0(r5)
   467f0:	21020014 	ori	r4,r4,2048
   467f4:	183ffa1e 	bne	r3,zero,467e0 <__alt_data_end+0xfffda8c0>
   467f8:	22c8b03a 	or	r4,r4,r11
   467fc:	31000015 	stw	r4,0(r6)
   46800:	f800283a 	ret
   46804:	1284703a 	and	r2,r2,r10
   46808:	2248703a 	and	r4,r4,r9
   4680c:	10800414 	ori	r2,r2,16
   46810:	21000094 	ori	r4,r4,2
   46814:	003fef06 	br	467d4 <__alt_data_end+0xfffda8b4>
   46818:	02c18004 	movi	r11,1536
   4681c:	01000044 	movi	r4,1
   46820:	00800204 	movi	r2,8
   46824:	003fe706 	br	467c4 <__alt_data_end+0xfffda8a4>
   46828:	0017883a 	mov	r11,zero
   4682c:	0009883a 	mov	r4,zero
   46830:	00800104 	movi	r2,4
   46834:	003fe306 	br	467c4 <__alt_data_end+0xfffda8a4>

00046838 <__sfvwrite_r>:
   46838:	30800217 	ldw	r2,8(r6)
   4683c:	10006726 	beq	r2,zero,469dc <__sfvwrite_r+0x1a4>
   46840:	28c0030b 	ldhu	r3,12(r5)
   46844:	defff404 	addi	sp,sp,-48
   46848:	dd400715 	stw	r21,28(sp)
   4684c:	dd000615 	stw	r20,24(sp)
   46850:	dc000215 	stw	r16,8(sp)
   46854:	dfc00b15 	stw	ra,44(sp)
   46858:	df000a15 	stw	fp,40(sp)
   4685c:	ddc00915 	stw	r23,36(sp)
   46860:	dd800815 	stw	r22,32(sp)
   46864:	dcc00515 	stw	r19,20(sp)
   46868:	dc800415 	stw	r18,16(sp)
   4686c:	dc400315 	stw	r17,12(sp)
   46870:	1880020c 	andi	r2,r3,8
   46874:	2821883a 	mov	r16,r5
   46878:	202b883a 	mov	r21,r4
   4687c:	3029883a 	mov	r20,r6
   46880:	10002726 	beq	r2,zero,46920 <__sfvwrite_r+0xe8>
   46884:	28800417 	ldw	r2,16(r5)
   46888:	10002526 	beq	r2,zero,46920 <__sfvwrite_r+0xe8>
   4688c:	1880008c 	andi	r2,r3,2
   46890:	a4400017 	ldw	r17,0(r20)
   46894:	10002a26 	beq	r2,zero,46940 <__sfvwrite_r+0x108>
   46898:	05a00034 	movhi	r22,32768
   4689c:	0027883a 	mov	r19,zero
   468a0:	0025883a 	mov	r18,zero
   468a4:	b5bf0004 	addi	r22,r22,-1024
   468a8:	980d883a 	mov	r6,r19
   468ac:	a809883a 	mov	r4,r21
   468b0:	90004626 	beq	r18,zero,469cc <__sfvwrite_r+0x194>
   468b4:	900f883a 	mov	r7,r18
   468b8:	b480022e 	bgeu	r22,r18,468c4 <__sfvwrite_r+0x8c>
   468bc:	01e00034 	movhi	r7,32768
   468c0:	39ff0004 	addi	r7,r7,-1024
   468c4:	80800917 	ldw	r2,36(r16)
   468c8:	81400717 	ldw	r5,28(r16)
   468cc:	103ee83a 	callr	r2
   468d0:	00805a0e 	bge	zero,r2,46a3c <__sfvwrite_r+0x204>
   468d4:	a0c00217 	ldw	r3,8(r20)
   468d8:	98a7883a 	add	r19,r19,r2
   468dc:	90a5c83a 	sub	r18,r18,r2
   468e0:	1885c83a 	sub	r2,r3,r2
   468e4:	a0800215 	stw	r2,8(r20)
   468e8:	103fef1e 	bne	r2,zero,468a8 <__alt_data_end+0xfffda988>
   468ec:	0005883a 	mov	r2,zero
   468f0:	dfc00b17 	ldw	ra,44(sp)
   468f4:	df000a17 	ldw	fp,40(sp)
   468f8:	ddc00917 	ldw	r23,36(sp)
   468fc:	dd800817 	ldw	r22,32(sp)
   46900:	dd400717 	ldw	r21,28(sp)
   46904:	dd000617 	ldw	r20,24(sp)
   46908:	dcc00517 	ldw	r19,20(sp)
   4690c:	dc800417 	ldw	r18,16(sp)
   46910:	dc400317 	ldw	r17,12(sp)
   46914:	dc000217 	ldw	r16,8(sp)
   46918:	dec00c04 	addi	sp,sp,48
   4691c:	f800283a 	ret
   46920:	800b883a 	mov	r5,r16
   46924:	a809883a 	mov	r4,r21
   46928:	0044d340 	call	44d34 <__swsetup_r>
   4692c:	1000ee1e 	bne	r2,zero,46ce8 <__sfvwrite_r+0x4b0>
   46930:	80c0030b 	ldhu	r3,12(r16)
   46934:	a4400017 	ldw	r17,0(r20)
   46938:	1880008c 	andi	r2,r3,2
   4693c:	103fd61e 	bne	r2,zero,46898 <__alt_data_end+0xfffda978>
   46940:	1880004c 	andi	r2,r3,1
   46944:	1000421e 	bne	r2,zero,46a50 <__sfvwrite_r+0x218>
   46948:	0039883a 	mov	fp,zero
   4694c:	0025883a 	mov	r18,zero
   46950:	90001a26 	beq	r18,zero,469bc <__sfvwrite_r+0x184>
   46954:	1880800c 	andi	r2,r3,512
   46958:	84c00217 	ldw	r19,8(r16)
   4695c:	10002126 	beq	r2,zero,469e4 <__sfvwrite_r+0x1ac>
   46960:	982f883a 	mov	r23,r19
   46964:	94c09636 	bltu	r18,r19,46bc0 <__sfvwrite_r+0x388>
   46968:	1881200c 	andi	r2,r3,1152
   4696c:	1000a11e 	bne	r2,zero,46bf4 <__sfvwrite_r+0x3bc>
   46970:	81000017 	ldw	r4,0(r16)
   46974:	b80d883a 	mov	r6,r23
   46978:	e00b883a 	mov	r5,fp
   4697c:	00470bc0 	call	470bc <memmove>
   46980:	80c00217 	ldw	r3,8(r16)
   46984:	81000017 	ldw	r4,0(r16)
   46988:	9005883a 	mov	r2,r18
   4698c:	1ce7c83a 	sub	r19,r3,r19
   46990:	25cf883a 	add	r7,r4,r23
   46994:	84c00215 	stw	r19,8(r16)
   46998:	81c00015 	stw	r7,0(r16)
   4699c:	a0c00217 	ldw	r3,8(r20)
   469a0:	e0b9883a 	add	fp,fp,r2
   469a4:	90a5c83a 	sub	r18,r18,r2
   469a8:	18a7c83a 	sub	r19,r3,r2
   469ac:	a4c00215 	stw	r19,8(r20)
   469b0:	983fce26 	beq	r19,zero,468ec <__alt_data_end+0xfffda9cc>
   469b4:	80c0030b 	ldhu	r3,12(r16)
   469b8:	903fe61e 	bne	r18,zero,46954 <__alt_data_end+0xfffdaa34>
   469bc:	8f000017 	ldw	fp,0(r17)
   469c0:	8c800117 	ldw	r18,4(r17)
   469c4:	8c400204 	addi	r17,r17,8
   469c8:	003fe106 	br	46950 <__alt_data_end+0xfffdaa30>
   469cc:	8cc00017 	ldw	r19,0(r17)
   469d0:	8c800117 	ldw	r18,4(r17)
   469d4:	8c400204 	addi	r17,r17,8
   469d8:	003fb306 	br	468a8 <__alt_data_end+0xfffda988>
   469dc:	0005883a 	mov	r2,zero
   469e0:	f800283a 	ret
   469e4:	81000017 	ldw	r4,0(r16)
   469e8:	80800417 	ldw	r2,16(r16)
   469ec:	11005a36 	bltu	r2,r4,46b58 <__sfvwrite_r+0x320>
   469f0:	85c00517 	ldw	r23,20(r16)
   469f4:	95c05836 	bltu	r18,r23,46b58 <__sfvwrite_r+0x320>
   469f8:	00a00034 	movhi	r2,32768
   469fc:	10bfffc4 	addi	r2,r2,-1
   46a00:	9009883a 	mov	r4,r18
   46a04:	1480012e 	bgeu	r2,r18,46a0c <__sfvwrite_r+0x1d4>
   46a08:	1009883a 	mov	r4,r2
   46a0c:	b80b883a 	mov	r5,r23
   46a10:	004b2c00 	call	4b2c0 <__divsi3>
   46a14:	b80b883a 	mov	r5,r23
   46a18:	1009883a 	mov	r4,r2
   46a1c:	004b4740 	call	4b474 <__mulsi3>
   46a20:	81400717 	ldw	r5,28(r16)
   46a24:	80c00917 	ldw	r3,36(r16)
   46a28:	100f883a 	mov	r7,r2
   46a2c:	e00d883a 	mov	r6,fp
   46a30:	a809883a 	mov	r4,r21
   46a34:	183ee83a 	callr	r3
   46a38:	00bfd816 	blt	zero,r2,4699c <__alt_data_end+0xfffdaa7c>
   46a3c:	8080030b 	ldhu	r2,12(r16)
   46a40:	10801014 	ori	r2,r2,64
   46a44:	8080030d 	sth	r2,12(r16)
   46a48:	00bfffc4 	movi	r2,-1
   46a4c:	003fa806 	br	468f0 <__alt_data_end+0xfffda9d0>
   46a50:	0027883a 	mov	r19,zero
   46a54:	0011883a 	mov	r8,zero
   46a58:	0039883a 	mov	fp,zero
   46a5c:	0025883a 	mov	r18,zero
   46a60:	90001f26 	beq	r18,zero,46ae0 <__sfvwrite_r+0x2a8>
   46a64:	40005a26 	beq	r8,zero,46bd0 <__sfvwrite_r+0x398>
   46a68:	982d883a 	mov	r22,r19
   46a6c:	94c0012e 	bgeu	r18,r19,46a74 <__sfvwrite_r+0x23c>
   46a70:	902d883a 	mov	r22,r18
   46a74:	81000017 	ldw	r4,0(r16)
   46a78:	80800417 	ldw	r2,16(r16)
   46a7c:	b02f883a 	mov	r23,r22
   46a80:	81c00517 	ldw	r7,20(r16)
   46a84:	1100032e 	bgeu	r2,r4,46a94 <__sfvwrite_r+0x25c>
   46a88:	80c00217 	ldw	r3,8(r16)
   46a8c:	38c7883a 	add	r3,r7,r3
   46a90:	1d801816 	blt	r3,r22,46af4 <__sfvwrite_r+0x2bc>
   46a94:	b1c03e16 	blt	r22,r7,46b90 <__sfvwrite_r+0x358>
   46a98:	80800917 	ldw	r2,36(r16)
   46a9c:	81400717 	ldw	r5,28(r16)
   46aa0:	e00d883a 	mov	r6,fp
   46aa4:	da000115 	stw	r8,4(sp)
   46aa8:	a809883a 	mov	r4,r21
   46aac:	103ee83a 	callr	r2
   46ab0:	102f883a 	mov	r23,r2
   46ab4:	da000117 	ldw	r8,4(sp)
   46ab8:	00bfe00e 	bge	zero,r2,46a3c <__alt_data_end+0xfffdab1c>
   46abc:	9de7c83a 	sub	r19,r19,r23
   46ac0:	98001f26 	beq	r19,zero,46b40 <__sfvwrite_r+0x308>
   46ac4:	a0800217 	ldw	r2,8(r20)
   46ac8:	e5f9883a 	add	fp,fp,r23
   46acc:	95e5c83a 	sub	r18,r18,r23
   46ad0:	15efc83a 	sub	r23,r2,r23
   46ad4:	a5c00215 	stw	r23,8(r20)
   46ad8:	b83f8426 	beq	r23,zero,468ec <__alt_data_end+0xfffda9cc>
   46adc:	903fe11e 	bne	r18,zero,46a64 <__alt_data_end+0xfffdab44>
   46ae0:	8f000017 	ldw	fp,0(r17)
   46ae4:	8c800117 	ldw	r18,4(r17)
   46ae8:	0011883a 	mov	r8,zero
   46aec:	8c400204 	addi	r17,r17,8
   46af0:	003fdb06 	br	46a60 <__alt_data_end+0xfffdab40>
   46af4:	180d883a 	mov	r6,r3
   46af8:	e00b883a 	mov	r5,fp
   46afc:	da000115 	stw	r8,4(sp)
   46b00:	d8c00015 	stw	r3,0(sp)
   46b04:	00470bc0 	call	470bc <memmove>
   46b08:	d8c00017 	ldw	r3,0(sp)
   46b0c:	80800017 	ldw	r2,0(r16)
   46b10:	800b883a 	mov	r5,r16
   46b14:	a809883a 	mov	r4,r21
   46b18:	10c5883a 	add	r2,r2,r3
   46b1c:	80800015 	stw	r2,0(r16)
   46b20:	d8c00015 	stw	r3,0(sp)
   46b24:	00407380 	call	40738 <_fflush_r>
   46b28:	d8c00017 	ldw	r3,0(sp)
   46b2c:	da000117 	ldw	r8,4(sp)
   46b30:	103fc21e 	bne	r2,zero,46a3c <__alt_data_end+0xfffdab1c>
   46b34:	182f883a 	mov	r23,r3
   46b38:	9de7c83a 	sub	r19,r19,r23
   46b3c:	983fe11e 	bne	r19,zero,46ac4 <__alt_data_end+0xfffdaba4>
   46b40:	800b883a 	mov	r5,r16
   46b44:	a809883a 	mov	r4,r21
   46b48:	00407380 	call	40738 <_fflush_r>
   46b4c:	103fbb1e 	bne	r2,zero,46a3c <__alt_data_end+0xfffdab1c>
   46b50:	0011883a 	mov	r8,zero
   46b54:	003fdb06 	br	46ac4 <__alt_data_end+0xfffdaba4>
   46b58:	94c0012e 	bgeu	r18,r19,46b60 <__sfvwrite_r+0x328>
   46b5c:	9027883a 	mov	r19,r18
   46b60:	980d883a 	mov	r6,r19
   46b64:	e00b883a 	mov	r5,fp
   46b68:	00470bc0 	call	470bc <memmove>
   46b6c:	80800217 	ldw	r2,8(r16)
   46b70:	80c00017 	ldw	r3,0(r16)
   46b74:	14c5c83a 	sub	r2,r2,r19
   46b78:	1cc7883a 	add	r3,r3,r19
   46b7c:	80800215 	stw	r2,8(r16)
   46b80:	80c00015 	stw	r3,0(r16)
   46b84:	10004326 	beq	r2,zero,46c94 <__sfvwrite_r+0x45c>
   46b88:	9805883a 	mov	r2,r19
   46b8c:	003f8306 	br	4699c <__alt_data_end+0xfffdaa7c>
   46b90:	b00d883a 	mov	r6,r22
   46b94:	e00b883a 	mov	r5,fp
   46b98:	da000115 	stw	r8,4(sp)
   46b9c:	00470bc0 	call	470bc <memmove>
   46ba0:	80800217 	ldw	r2,8(r16)
   46ba4:	80c00017 	ldw	r3,0(r16)
   46ba8:	da000117 	ldw	r8,4(sp)
   46bac:	1585c83a 	sub	r2,r2,r22
   46bb0:	1dad883a 	add	r22,r3,r22
   46bb4:	80800215 	stw	r2,8(r16)
   46bb8:	85800015 	stw	r22,0(r16)
   46bbc:	003fbf06 	br	46abc <__alt_data_end+0xfffdab9c>
   46bc0:	81000017 	ldw	r4,0(r16)
   46bc4:	9027883a 	mov	r19,r18
   46bc8:	902f883a 	mov	r23,r18
   46bcc:	003f6906 	br	46974 <__alt_data_end+0xfffdaa54>
   46bd0:	900d883a 	mov	r6,r18
   46bd4:	01400284 	movi	r5,10
   46bd8:	e009883a 	mov	r4,fp
   46bdc:	0046e900 	call	46e90 <memchr>
   46be0:	10003e26 	beq	r2,zero,46cdc <__sfvwrite_r+0x4a4>
   46be4:	10800044 	addi	r2,r2,1
   46be8:	1727c83a 	sub	r19,r2,fp
   46bec:	02000044 	movi	r8,1
   46bf0:	003f9d06 	br	46a68 <__alt_data_end+0xfffdab48>
   46bf4:	80800517 	ldw	r2,20(r16)
   46bf8:	81400417 	ldw	r5,16(r16)
   46bfc:	81c00017 	ldw	r7,0(r16)
   46c00:	10a7883a 	add	r19,r2,r2
   46c04:	9885883a 	add	r2,r19,r2
   46c08:	1026d7fa 	srli	r19,r2,31
   46c0c:	396dc83a 	sub	r22,r7,r5
   46c10:	b1000044 	addi	r4,r22,1
   46c14:	9885883a 	add	r2,r19,r2
   46c18:	1027d07a 	srai	r19,r2,1
   46c1c:	2485883a 	add	r2,r4,r18
   46c20:	980d883a 	mov	r6,r19
   46c24:	9880022e 	bgeu	r19,r2,46c30 <__sfvwrite_r+0x3f8>
   46c28:	1027883a 	mov	r19,r2
   46c2c:	100d883a 	mov	r6,r2
   46c30:	18c1000c 	andi	r3,r3,1024
   46c34:	18001c26 	beq	r3,zero,46ca8 <__sfvwrite_r+0x470>
   46c38:	300b883a 	mov	r5,r6
   46c3c:	a809883a 	mov	r4,r21
   46c40:	0041a180 	call	41a18 <_malloc_r>
   46c44:	102f883a 	mov	r23,r2
   46c48:	10002926 	beq	r2,zero,46cf0 <__sfvwrite_r+0x4b8>
   46c4c:	81400417 	ldw	r5,16(r16)
   46c50:	b00d883a 	mov	r6,r22
   46c54:	1009883a 	mov	r4,r2
   46c58:	0046f740 	call	46f74 <memcpy>
   46c5c:	8080030b 	ldhu	r2,12(r16)
   46c60:	00fedfc4 	movi	r3,-1153
   46c64:	10c4703a 	and	r2,r2,r3
   46c68:	10802014 	ori	r2,r2,128
   46c6c:	8080030d 	sth	r2,12(r16)
   46c70:	bd89883a 	add	r4,r23,r22
   46c74:	9d8fc83a 	sub	r7,r19,r22
   46c78:	85c00415 	stw	r23,16(r16)
   46c7c:	84c00515 	stw	r19,20(r16)
   46c80:	81000015 	stw	r4,0(r16)
   46c84:	9027883a 	mov	r19,r18
   46c88:	81c00215 	stw	r7,8(r16)
   46c8c:	902f883a 	mov	r23,r18
   46c90:	003f3806 	br	46974 <__alt_data_end+0xfffdaa54>
   46c94:	800b883a 	mov	r5,r16
   46c98:	a809883a 	mov	r4,r21
   46c9c:	00407380 	call	40738 <_fflush_r>
   46ca0:	103fb926 	beq	r2,zero,46b88 <__alt_data_end+0xfffdac68>
   46ca4:	003f6506 	br	46a3c <__alt_data_end+0xfffdab1c>
   46ca8:	a809883a 	mov	r4,r21
   46cac:	00483300 	call	48330 <_realloc_r>
   46cb0:	102f883a 	mov	r23,r2
   46cb4:	103fee1e 	bne	r2,zero,46c70 <__alt_data_end+0xfffdad50>
   46cb8:	81400417 	ldw	r5,16(r16)
   46cbc:	a809883a 	mov	r4,r21
   46cc0:	0040df00 	call	40df0 <_free_r>
   46cc4:	8080030b 	ldhu	r2,12(r16)
   46cc8:	00ffdfc4 	movi	r3,-129
   46ccc:	1884703a 	and	r2,r3,r2
   46cd0:	00c00304 	movi	r3,12
   46cd4:	a8c00015 	stw	r3,0(r21)
   46cd8:	003f5906 	br	46a40 <__alt_data_end+0xfffdab20>
   46cdc:	94c00044 	addi	r19,r18,1
   46ce0:	02000044 	movi	r8,1
   46ce4:	003f6006 	br	46a68 <__alt_data_end+0xfffdab48>
   46ce8:	00bfffc4 	movi	r2,-1
   46cec:	003f0006 	br	468f0 <__alt_data_end+0xfffda9d0>
   46cf0:	00800304 	movi	r2,12
   46cf4:	a8800015 	stw	r2,0(r21)
   46cf8:	8080030b 	ldhu	r2,12(r16)
   46cfc:	003f5006 	br	46a40 <__alt_data_end+0xfffdab20>

00046d00 <_isatty_r>:
   46d00:	defffd04 	addi	sp,sp,-12
   46d04:	dc000015 	stw	r16,0(sp)
   46d08:	04000174 	movhi	r16,5
   46d0c:	dc400115 	stw	r17,4(sp)
   46d10:	84104704 	addi	r16,r16,16668
   46d14:	2023883a 	mov	r17,r4
   46d18:	2809883a 	mov	r4,r5
   46d1c:	dfc00215 	stw	ra,8(sp)
   46d20:	80000015 	stw	zero,0(r16)
   46d24:	004dfb00 	call	4dfb0 <isatty>
   46d28:	00ffffc4 	movi	r3,-1
   46d2c:	10c00526 	beq	r2,r3,46d44 <_isatty_r+0x44>
   46d30:	dfc00217 	ldw	ra,8(sp)
   46d34:	dc400117 	ldw	r17,4(sp)
   46d38:	dc000017 	ldw	r16,0(sp)
   46d3c:	dec00304 	addi	sp,sp,12
   46d40:	f800283a 	ret
   46d44:	80c00017 	ldw	r3,0(r16)
   46d48:	183ff926 	beq	r3,zero,46d30 <__alt_data_end+0xfffdae10>
   46d4c:	88c00015 	stw	r3,0(r17)
   46d50:	003ff706 	br	46d30 <__alt_data_end+0xfffdae10>

00046d54 <_setlocale_r>:
   46d54:	30001b26 	beq	r6,zero,46dc4 <_setlocale_r+0x70>
   46d58:	01400174 	movhi	r5,5
   46d5c:	defffe04 	addi	sp,sp,-8
   46d60:	29421604 	addi	r5,r5,2136
   46d64:	3009883a 	mov	r4,r6
   46d68:	dc000015 	stw	r16,0(sp)
   46d6c:	dfc00115 	stw	ra,4(sp)
   46d70:	3021883a 	mov	r16,r6
   46d74:	00489080 	call	48908 <strcmp>
   46d78:	1000061e 	bne	r2,zero,46d94 <_setlocale_r+0x40>
   46d7c:	00800174 	movhi	r2,5
   46d80:	1081f704 	addi	r2,r2,2012
   46d84:	dfc00117 	ldw	ra,4(sp)
   46d88:	dc000017 	ldw	r16,0(sp)
   46d8c:	dec00204 	addi	sp,sp,8
   46d90:	f800283a 	ret
   46d94:	01400174 	movhi	r5,5
   46d98:	2941f704 	addi	r5,r5,2012
   46d9c:	8009883a 	mov	r4,r16
   46da0:	00489080 	call	48908 <strcmp>
   46da4:	103ff526 	beq	r2,zero,46d7c <__alt_data_end+0xfffdae5c>
   46da8:	01400174 	movhi	r5,5
   46dac:	29420104 	addi	r5,r5,2052
   46db0:	8009883a 	mov	r4,r16
   46db4:	00489080 	call	48908 <strcmp>
   46db8:	103ff026 	beq	r2,zero,46d7c <__alt_data_end+0xfffdae5c>
   46dbc:	0005883a 	mov	r2,zero
   46dc0:	003ff006 	br	46d84 <__alt_data_end+0xfffdae64>
   46dc4:	00800174 	movhi	r2,5
   46dc8:	1081f704 	addi	r2,r2,2012
   46dcc:	f800283a 	ret

00046dd0 <__locale_charset>:
   46dd0:	00800174 	movhi	r2,5
   46dd4:	1084ce04 	addi	r2,r2,4920
   46dd8:	f800283a 	ret

00046ddc <__locale_mb_cur_max>:
   46ddc:	00800174 	movhi	r2,5
   46de0:	10897504 	addi	r2,r2,9684
   46de4:	10800017 	ldw	r2,0(r2)
   46de8:	f800283a 	ret

00046dec <__locale_msgcharset>:
   46dec:	00800174 	movhi	r2,5
   46df0:	1084c604 	addi	r2,r2,4888
   46df4:	f800283a 	ret

00046df8 <__locale_cjk_lang>:
   46df8:	0005883a 	mov	r2,zero
   46dfc:	f800283a 	ret

00046e00 <_localeconv_r>:
   46e00:	00800174 	movhi	r2,5
   46e04:	1084d604 	addi	r2,r2,4952
   46e08:	f800283a 	ret

00046e0c <setlocale>:
   46e0c:	00800174 	movhi	r2,5
   46e10:	10897204 	addi	r2,r2,9672
   46e14:	280d883a 	mov	r6,r5
   46e18:	200b883a 	mov	r5,r4
   46e1c:	11000017 	ldw	r4,0(r2)
   46e20:	0046d541 	jmpi	46d54 <_setlocale_r>

00046e24 <localeconv>:
   46e24:	00800174 	movhi	r2,5
   46e28:	1084d604 	addi	r2,r2,4952
   46e2c:	f800283a 	ret

00046e30 <_lseek_r>:
   46e30:	defffd04 	addi	sp,sp,-12
   46e34:	2805883a 	mov	r2,r5
   46e38:	dc000015 	stw	r16,0(sp)
   46e3c:	04000174 	movhi	r16,5
   46e40:	dc400115 	stw	r17,4(sp)
   46e44:	300b883a 	mov	r5,r6
   46e48:	84104704 	addi	r16,r16,16668
   46e4c:	2023883a 	mov	r17,r4
   46e50:	380d883a 	mov	r6,r7
   46e54:	1009883a 	mov	r4,r2
   46e58:	dfc00215 	stw	ra,8(sp)
   46e5c:	80000015 	stw	zero,0(r16)
   46e60:	004e1840 	call	4e184 <lseek>
   46e64:	00ffffc4 	movi	r3,-1
   46e68:	10c00526 	beq	r2,r3,46e80 <_lseek_r+0x50>
   46e6c:	dfc00217 	ldw	ra,8(sp)
   46e70:	dc400117 	ldw	r17,4(sp)
   46e74:	dc000017 	ldw	r16,0(sp)
   46e78:	dec00304 	addi	sp,sp,12
   46e7c:	f800283a 	ret
   46e80:	80c00017 	ldw	r3,0(r16)
   46e84:	183ff926 	beq	r3,zero,46e6c <__alt_data_end+0xfffdaf4c>
   46e88:	88c00015 	stw	r3,0(r17)
   46e8c:	003ff706 	br	46e6c <__alt_data_end+0xfffdaf4c>

00046e90 <memchr>:
   46e90:	208000cc 	andi	r2,r4,3
   46e94:	280f883a 	mov	r7,r5
   46e98:	10003426 	beq	r2,zero,46f6c <memchr+0xdc>
   46e9c:	30bfffc4 	addi	r2,r6,-1
   46ea0:	30001a26 	beq	r6,zero,46f0c <memchr+0x7c>
   46ea4:	20c00003 	ldbu	r3,0(r4)
   46ea8:	29803fcc 	andi	r6,r5,255
   46eac:	30c0051e 	bne	r6,r3,46ec4 <memchr+0x34>
   46eb0:	00001806 	br	46f14 <memchr+0x84>
   46eb4:	10001526 	beq	r2,zero,46f0c <memchr+0x7c>
   46eb8:	20c00003 	ldbu	r3,0(r4)
   46ebc:	10bfffc4 	addi	r2,r2,-1
   46ec0:	30c01426 	beq	r6,r3,46f14 <memchr+0x84>
   46ec4:	21000044 	addi	r4,r4,1
   46ec8:	20c000cc 	andi	r3,r4,3
   46ecc:	183ff91e 	bne	r3,zero,46eb4 <__alt_data_end+0xfffdaf94>
   46ed0:	020000c4 	movi	r8,3
   46ed4:	40801136 	bltu	r8,r2,46f1c <memchr+0x8c>
   46ed8:	10000c26 	beq	r2,zero,46f0c <memchr+0x7c>
   46edc:	20c00003 	ldbu	r3,0(r4)
   46ee0:	29403fcc 	andi	r5,r5,255
   46ee4:	28c00b26 	beq	r5,r3,46f14 <memchr+0x84>
   46ee8:	20c00044 	addi	r3,r4,1
   46eec:	39803fcc 	andi	r6,r7,255
   46ef0:	2089883a 	add	r4,r4,r2
   46ef4:	00000306 	br	46f04 <memchr+0x74>
   46ef8:	18c00044 	addi	r3,r3,1
   46efc:	197fffc3 	ldbu	r5,-1(r3)
   46f00:	31400526 	beq	r6,r5,46f18 <memchr+0x88>
   46f04:	1805883a 	mov	r2,r3
   46f08:	20fffb1e 	bne	r4,r3,46ef8 <__alt_data_end+0xfffdafd8>
   46f0c:	0005883a 	mov	r2,zero
   46f10:	f800283a 	ret
   46f14:	2005883a 	mov	r2,r4
   46f18:	f800283a 	ret
   46f1c:	28c03fcc 	andi	r3,r5,255
   46f20:	1812923a 	slli	r9,r3,8
   46f24:	02ffbff4 	movhi	r11,65279
   46f28:	02a02074 	movhi	r10,32897
   46f2c:	48d2b03a 	or	r9,r9,r3
   46f30:	4806943a 	slli	r3,r9,16
   46f34:	5affbfc4 	addi	r11,r11,-257
   46f38:	52a02004 	addi	r10,r10,-32640
   46f3c:	48d2b03a 	or	r9,r9,r3
   46f40:	20c00017 	ldw	r3,0(r4)
   46f44:	48c6f03a 	xor	r3,r9,r3
   46f48:	1acd883a 	add	r6,r3,r11
   46f4c:	00c6303a 	nor	r3,zero,r3
   46f50:	30c6703a 	and	r3,r6,r3
   46f54:	1a86703a 	and	r3,r3,r10
   46f58:	183fe01e 	bne	r3,zero,46edc <__alt_data_end+0xfffdafbc>
   46f5c:	10bfff04 	addi	r2,r2,-4
   46f60:	21000104 	addi	r4,r4,4
   46f64:	40bff636 	bltu	r8,r2,46f40 <__alt_data_end+0xfffdb020>
   46f68:	003fdb06 	br	46ed8 <__alt_data_end+0xfffdafb8>
   46f6c:	3005883a 	mov	r2,r6
   46f70:	003fd706 	br	46ed0 <__alt_data_end+0xfffdafb0>

00046f74 <memcpy>:
   46f74:	defffd04 	addi	sp,sp,-12
   46f78:	dfc00215 	stw	ra,8(sp)
   46f7c:	dc400115 	stw	r17,4(sp)
   46f80:	dc000015 	stw	r16,0(sp)
   46f84:	00c003c4 	movi	r3,15
   46f88:	2005883a 	mov	r2,r4
   46f8c:	1980452e 	bgeu	r3,r6,470a4 <memcpy+0x130>
   46f90:	2906b03a 	or	r3,r5,r4
   46f94:	18c000cc 	andi	r3,r3,3
   46f98:	1800441e 	bne	r3,zero,470ac <memcpy+0x138>
   46f9c:	347ffc04 	addi	r17,r6,-16
   46fa0:	8822d13a 	srli	r17,r17,4
   46fa4:	28c00104 	addi	r3,r5,4
   46fa8:	23400104 	addi	r13,r4,4
   46fac:	8820913a 	slli	r16,r17,4
   46fb0:	2b000204 	addi	r12,r5,8
   46fb4:	22c00204 	addi	r11,r4,8
   46fb8:	84000504 	addi	r16,r16,20
   46fbc:	2a800304 	addi	r10,r5,12
   46fc0:	22400304 	addi	r9,r4,12
   46fc4:	2c21883a 	add	r16,r5,r16
   46fc8:	2811883a 	mov	r8,r5
   46fcc:	200f883a 	mov	r7,r4
   46fd0:	41000017 	ldw	r4,0(r8)
   46fd4:	1fc00017 	ldw	ra,0(r3)
   46fd8:	63c00017 	ldw	r15,0(r12)
   46fdc:	39000015 	stw	r4,0(r7)
   46fe0:	53800017 	ldw	r14,0(r10)
   46fe4:	6fc00015 	stw	ra,0(r13)
   46fe8:	5bc00015 	stw	r15,0(r11)
   46fec:	4b800015 	stw	r14,0(r9)
   46ff0:	18c00404 	addi	r3,r3,16
   46ff4:	39c00404 	addi	r7,r7,16
   46ff8:	42000404 	addi	r8,r8,16
   46ffc:	6b400404 	addi	r13,r13,16
   47000:	63000404 	addi	r12,r12,16
   47004:	5ac00404 	addi	r11,r11,16
   47008:	52800404 	addi	r10,r10,16
   4700c:	4a400404 	addi	r9,r9,16
   47010:	1c3fef1e 	bne	r3,r16,46fd0 <__alt_data_end+0xfffdb0b0>
   47014:	89c00044 	addi	r7,r17,1
   47018:	380e913a 	slli	r7,r7,4
   4701c:	310003cc 	andi	r4,r6,15
   47020:	02c000c4 	movi	r11,3
   47024:	11c7883a 	add	r3,r2,r7
   47028:	29cb883a 	add	r5,r5,r7
   4702c:	5900212e 	bgeu	r11,r4,470b4 <memcpy+0x140>
   47030:	1813883a 	mov	r9,r3
   47034:	2811883a 	mov	r8,r5
   47038:	200f883a 	mov	r7,r4
   4703c:	42800017 	ldw	r10,0(r8)
   47040:	4a400104 	addi	r9,r9,4
   47044:	39ffff04 	addi	r7,r7,-4
   47048:	4abfff15 	stw	r10,-4(r9)
   4704c:	42000104 	addi	r8,r8,4
   47050:	59fffa36 	bltu	r11,r7,4703c <__alt_data_end+0xfffdb11c>
   47054:	213fff04 	addi	r4,r4,-4
   47058:	2008d0ba 	srli	r4,r4,2
   4705c:	318000cc 	andi	r6,r6,3
   47060:	21000044 	addi	r4,r4,1
   47064:	2109883a 	add	r4,r4,r4
   47068:	2109883a 	add	r4,r4,r4
   4706c:	1907883a 	add	r3,r3,r4
   47070:	290b883a 	add	r5,r5,r4
   47074:	30000626 	beq	r6,zero,47090 <memcpy+0x11c>
   47078:	198d883a 	add	r6,r3,r6
   4707c:	29c00003 	ldbu	r7,0(r5)
   47080:	18c00044 	addi	r3,r3,1
   47084:	29400044 	addi	r5,r5,1
   47088:	19ffffc5 	stb	r7,-1(r3)
   4708c:	19bffb1e 	bne	r3,r6,4707c <__alt_data_end+0xfffdb15c>
   47090:	dfc00217 	ldw	ra,8(sp)
   47094:	dc400117 	ldw	r17,4(sp)
   47098:	dc000017 	ldw	r16,0(sp)
   4709c:	dec00304 	addi	sp,sp,12
   470a0:	f800283a 	ret
   470a4:	2007883a 	mov	r3,r4
   470a8:	003ff206 	br	47074 <__alt_data_end+0xfffdb154>
   470ac:	2007883a 	mov	r3,r4
   470b0:	003ff106 	br	47078 <__alt_data_end+0xfffdb158>
   470b4:	200d883a 	mov	r6,r4
   470b8:	003fee06 	br	47074 <__alt_data_end+0xfffdb154>

000470bc <memmove>:
   470bc:	2005883a 	mov	r2,r4
   470c0:	29000b2e 	bgeu	r5,r4,470f0 <memmove+0x34>
   470c4:	298f883a 	add	r7,r5,r6
   470c8:	21c0092e 	bgeu	r4,r7,470f0 <memmove+0x34>
   470cc:	2187883a 	add	r3,r4,r6
   470d0:	198bc83a 	sub	r5,r3,r6
   470d4:	30004826 	beq	r6,zero,471f8 <memmove+0x13c>
   470d8:	39ffffc4 	addi	r7,r7,-1
   470dc:	39000003 	ldbu	r4,0(r7)
   470e0:	18ffffc4 	addi	r3,r3,-1
   470e4:	19000005 	stb	r4,0(r3)
   470e8:	28fffb1e 	bne	r5,r3,470d8 <__alt_data_end+0xfffdb1b8>
   470ec:	f800283a 	ret
   470f0:	00c003c4 	movi	r3,15
   470f4:	1980412e 	bgeu	r3,r6,471fc <memmove+0x140>
   470f8:	2886b03a 	or	r3,r5,r2
   470fc:	18c000cc 	andi	r3,r3,3
   47100:	1800401e 	bne	r3,zero,47204 <memmove+0x148>
   47104:	33fffc04 	addi	r15,r6,-16
   47108:	781ed13a 	srli	r15,r15,4
   4710c:	28c00104 	addi	r3,r5,4
   47110:	13400104 	addi	r13,r2,4
   47114:	781c913a 	slli	r14,r15,4
   47118:	2b000204 	addi	r12,r5,8
   4711c:	12c00204 	addi	r11,r2,8
   47120:	73800504 	addi	r14,r14,20
   47124:	2a800304 	addi	r10,r5,12
   47128:	12400304 	addi	r9,r2,12
   4712c:	2b9d883a 	add	r14,r5,r14
   47130:	2811883a 	mov	r8,r5
   47134:	100f883a 	mov	r7,r2
   47138:	41000017 	ldw	r4,0(r8)
   4713c:	39c00404 	addi	r7,r7,16
   47140:	18c00404 	addi	r3,r3,16
   47144:	393ffc15 	stw	r4,-16(r7)
   47148:	193ffc17 	ldw	r4,-16(r3)
   4714c:	6b400404 	addi	r13,r13,16
   47150:	5ac00404 	addi	r11,r11,16
   47154:	693ffc15 	stw	r4,-16(r13)
   47158:	61000017 	ldw	r4,0(r12)
   4715c:	4a400404 	addi	r9,r9,16
   47160:	42000404 	addi	r8,r8,16
   47164:	593ffc15 	stw	r4,-16(r11)
   47168:	51000017 	ldw	r4,0(r10)
   4716c:	63000404 	addi	r12,r12,16
   47170:	52800404 	addi	r10,r10,16
   47174:	493ffc15 	stw	r4,-16(r9)
   47178:	1bbfef1e 	bne	r3,r14,47138 <__alt_data_end+0xfffdb218>
   4717c:	79000044 	addi	r4,r15,1
   47180:	2008913a 	slli	r4,r4,4
   47184:	328003cc 	andi	r10,r6,15
   47188:	02c000c4 	movi	r11,3
   4718c:	1107883a 	add	r3,r2,r4
   47190:	290b883a 	add	r5,r5,r4
   47194:	5a801e2e 	bgeu	r11,r10,47210 <memmove+0x154>
   47198:	1813883a 	mov	r9,r3
   4719c:	2811883a 	mov	r8,r5
   471a0:	500f883a 	mov	r7,r10
   471a4:	41000017 	ldw	r4,0(r8)
   471a8:	4a400104 	addi	r9,r9,4
   471ac:	39ffff04 	addi	r7,r7,-4
   471b0:	493fff15 	stw	r4,-4(r9)
   471b4:	42000104 	addi	r8,r8,4
   471b8:	59fffa36 	bltu	r11,r7,471a4 <__alt_data_end+0xfffdb284>
   471bc:	513fff04 	addi	r4,r10,-4
   471c0:	2008d0ba 	srli	r4,r4,2
   471c4:	318000cc 	andi	r6,r6,3
   471c8:	21000044 	addi	r4,r4,1
   471cc:	2109883a 	add	r4,r4,r4
   471d0:	2109883a 	add	r4,r4,r4
   471d4:	1907883a 	add	r3,r3,r4
   471d8:	290b883a 	add	r5,r5,r4
   471dc:	30000b26 	beq	r6,zero,4720c <memmove+0x150>
   471e0:	198d883a 	add	r6,r3,r6
   471e4:	29c00003 	ldbu	r7,0(r5)
   471e8:	18c00044 	addi	r3,r3,1
   471ec:	29400044 	addi	r5,r5,1
   471f0:	19ffffc5 	stb	r7,-1(r3)
   471f4:	19bffb1e 	bne	r3,r6,471e4 <__alt_data_end+0xfffdb2c4>
   471f8:	f800283a 	ret
   471fc:	1007883a 	mov	r3,r2
   47200:	003ff606 	br	471dc <__alt_data_end+0xfffdb2bc>
   47204:	1007883a 	mov	r3,r2
   47208:	003ff506 	br	471e0 <__alt_data_end+0xfffdb2c0>
   4720c:	f800283a 	ret
   47210:	500d883a 	mov	r6,r10
   47214:	003ff106 	br	471dc <__alt_data_end+0xfffdb2bc>

00047218 <_Balloc>:
   47218:	20801317 	ldw	r2,76(r4)
   4721c:	defffc04 	addi	sp,sp,-16
   47220:	dc400115 	stw	r17,4(sp)
   47224:	dc000015 	stw	r16,0(sp)
   47228:	dfc00315 	stw	ra,12(sp)
   4722c:	dc800215 	stw	r18,8(sp)
   47230:	2023883a 	mov	r17,r4
   47234:	2821883a 	mov	r16,r5
   47238:	10000f26 	beq	r2,zero,47278 <_Balloc+0x60>
   4723c:	8407883a 	add	r3,r16,r16
   47240:	18c7883a 	add	r3,r3,r3
   47244:	10c7883a 	add	r3,r2,r3
   47248:	18800017 	ldw	r2,0(r3)
   4724c:	10001126 	beq	r2,zero,47294 <_Balloc+0x7c>
   47250:	11000017 	ldw	r4,0(r2)
   47254:	19000015 	stw	r4,0(r3)
   47258:	10000415 	stw	zero,16(r2)
   4725c:	10000315 	stw	zero,12(r2)
   47260:	dfc00317 	ldw	ra,12(sp)
   47264:	dc800217 	ldw	r18,8(sp)
   47268:	dc400117 	ldw	r17,4(sp)
   4726c:	dc000017 	ldw	r16,0(sp)
   47270:	dec00404 	addi	sp,sp,16
   47274:	f800283a 	ret
   47278:	01800844 	movi	r6,33
   4727c:	01400104 	movi	r5,4
   47280:	004a0dc0 	call	4a0dc <_calloc_r>
   47284:	88801315 	stw	r2,76(r17)
   47288:	103fec1e 	bne	r2,zero,4723c <__alt_data_end+0xfffdb31c>
   4728c:	0005883a 	mov	r2,zero
   47290:	003ff306 	br	47260 <__alt_data_end+0xfffdb340>
   47294:	01400044 	movi	r5,1
   47298:	2c24983a 	sll	r18,r5,r16
   4729c:	8809883a 	mov	r4,r17
   472a0:	91800144 	addi	r6,r18,5
   472a4:	318d883a 	add	r6,r6,r6
   472a8:	318d883a 	add	r6,r6,r6
   472ac:	004a0dc0 	call	4a0dc <_calloc_r>
   472b0:	103ff626 	beq	r2,zero,4728c <__alt_data_end+0xfffdb36c>
   472b4:	14000115 	stw	r16,4(r2)
   472b8:	14800215 	stw	r18,8(r2)
   472bc:	003fe606 	br	47258 <__alt_data_end+0xfffdb338>

000472c0 <_Bfree>:
   472c0:	28000826 	beq	r5,zero,472e4 <_Bfree+0x24>
   472c4:	28c00117 	ldw	r3,4(r5)
   472c8:	20801317 	ldw	r2,76(r4)
   472cc:	18c7883a 	add	r3,r3,r3
   472d0:	18c7883a 	add	r3,r3,r3
   472d4:	10c5883a 	add	r2,r2,r3
   472d8:	10c00017 	ldw	r3,0(r2)
   472dc:	28c00015 	stw	r3,0(r5)
   472e0:	11400015 	stw	r5,0(r2)
   472e4:	f800283a 	ret

000472e8 <__multadd>:
   472e8:	defff704 	addi	sp,sp,-36
   472ec:	dc800215 	stw	r18,8(sp)
   472f0:	2c800417 	ldw	r18,16(r5)
   472f4:	dd800615 	stw	r22,24(sp)
   472f8:	dd400515 	stw	r21,20(sp)
   472fc:	dd000415 	stw	r20,16(sp)
   47300:	dcc00315 	stw	r19,12(sp)
   47304:	dc400115 	stw	r17,4(sp)
   47308:	dc000015 	stw	r16,0(sp)
   4730c:	dfc00815 	stw	ra,32(sp)
   47310:	ddc00715 	stw	r23,28(sp)
   47314:	2827883a 	mov	r19,r5
   47318:	2029883a 	mov	r20,r4
   4731c:	3023883a 	mov	r17,r6
   47320:	3821883a 	mov	r16,r7
   47324:	2d400504 	addi	r21,r5,20
   47328:	002d883a 	mov	r22,zero
   4732c:	adc00017 	ldw	r23,0(r21)
   47330:	880b883a 	mov	r5,r17
   47334:	ad400104 	addi	r21,r21,4
   47338:	b93fffcc 	andi	r4,r23,65535
   4733c:	004b4740 	call	4b474 <__mulsi3>
   47340:	b808d43a 	srli	r4,r23,16
   47344:	880b883a 	mov	r5,r17
   47348:	1421883a 	add	r16,r2,r16
   4734c:	004b4740 	call	4b474 <__mulsi3>
   47350:	800ed43a 	srli	r7,r16,16
   47354:	80ffffcc 	andi	r3,r16,65535
   47358:	b5800044 	addi	r22,r22,1
   4735c:	11c5883a 	add	r2,r2,r7
   47360:	100e943a 	slli	r7,r2,16
   47364:	1020d43a 	srli	r16,r2,16
   47368:	38c7883a 	add	r3,r7,r3
   4736c:	a8ffff15 	stw	r3,-4(r21)
   47370:	b4bfee16 	blt	r22,r18,4732c <__alt_data_end+0xfffdb40c>
   47374:	80000926 	beq	r16,zero,4739c <__multadd+0xb4>
   47378:	98800217 	ldw	r2,8(r19)
   4737c:	9080130e 	bge	r18,r2,473cc <__multadd+0xe4>
   47380:	90800144 	addi	r2,r18,5
   47384:	1085883a 	add	r2,r2,r2
   47388:	1085883a 	add	r2,r2,r2
   4738c:	9885883a 	add	r2,r19,r2
   47390:	14000015 	stw	r16,0(r2)
   47394:	94800044 	addi	r18,r18,1
   47398:	9c800415 	stw	r18,16(r19)
   4739c:	9805883a 	mov	r2,r19
   473a0:	dfc00817 	ldw	ra,32(sp)
   473a4:	ddc00717 	ldw	r23,28(sp)
   473a8:	dd800617 	ldw	r22,24(sp)
   473ac:	dd400517 	ldw	r21,20(sp)
   473b0:	dd000417 	ldw	r20,16(sp)
   473b4:	dcc00317 	ldw	r19,12(sp)
   473b8:	dc800217 	ldw	r18,8(sp)
   473bc:	dc400117 	ldw	r17,4(sp)
   473c0:	dc000017 	ldw	r16,0(sp)
   473c4:	dec00904 	addi	sp,sp,36
   473c8:	f800283a 	ret
   473cc:	99400117 	ldw	r5,4(r19)
   473d0:	a009883a 	mov	r4,r20
   473d4:	29400044 	addi	r5,r5,1
   473d8:	00472180 	call	47218 <_Balloc>
   473dc:	99800417 	ldw	r6,16(r19)
   473e0:	99400304 	addi	r5,r19,12
   473e4:	11000304 	addi	r4,r2,12
   473e8:	31800084 	addi	r6,r6,2
   473ec:	318d883a 	add	r6,r6,r6
   473f0:	318d883a 	add	r6,r6,r6
   473f4:	1023883a 	mov	r17,r2
   473f8:	0046f740 	call	46f74 <memcpy>
   473fc:	98000a26 	beq	r19,zero,47428 <__multadd+0x140>
   47400:	98c00117 	ldw	r3,4(r19)
   47404:	a0801317 	ldw	r2,76(r20)
   47408:	18c7883a 	add	r3,r3,r3
   4740c:	18c7883a 	add	r3,r3,r3
   47410:	10c5883a 	add	r2,r2,r3
   47414:	10c00017 	ldw	r3,0(r2)
   47418:	98c00015 	stw	r3,0(r19)
   4741c:	14c00015 	stw	r19,0(r2)
   47420:	8827883a 	mov	r19,r17
   47424:	003fd606 	br	47380 <__alt_data_end+0xfffdb460>
   47428:	8827883a 	mov	r19,r17
   4742c:	003fd406 	br	47380 <__alt_data_end+0xfffdb460>

00047430 <__s2b>:
   47430:	defff904 	addi	sp,sp,-28
   47434:	dc400115 	stw	r17,4(sp)
   47438:	dc000015 	stw	r16,0(sp)
   4743c:	2023883a 	mov	r17,r4
   47440:	2821883a 	mov	r16,r5
   47444:	39000204 	addi	r4,r7,8
   47448:	01400244 	movi	r5,9
   4744c:	dcc00315 	stw	r19,12(sp)
   47450:	dc800215 	stw	r18,8(sp)
   47454:	dfc00615 	stw	ra,24(sp)
   47458:	dd400515 	stw	r21,20(sp)
   4745c:	dd000415 	stw	r20,16(sp)
   47460:	3825883a 	mov	r18,r7
   47464:	3027883a 	mov	r19,r6
   47468:	004b2c00 	call	4b2c0 <__divsi3>
   4746c:	00c00044 	movi	r3,1
   47470:	000b883a 	mov	r5,zero
   47474:	1880030e 	bge	r3,r2,47484 <__s2b+0x54>
   47478:	18c7883a 	add	r3,r3,r3
   4747c:	29400044 	addi	r5,r5,1
   47480:	18bffd16 	blt	r3,r2,47478 <__alt_data_end+0xfffdb558>
   47484:	8809883a 	mov	r4,r17
   47488:	00472180 	call	47218 <_Balloc>
   4748c:	d8c00717 	ldw	r3,28(sp)
   47490:	10c00515 	stw	r3,20(r2)
   47494:	00c00044 	movi	r3,1
   47498:	10c00415 	stw	r3,16(r2)
   4749c:	00c00244 	movi	r3,9
   474a0:	1cc0210e 	bge	r3,r19,47528 <__s2b+0xf8>
   474a4:	80eb883a 	add	r21,r16,r3
   474a8:	a829883a 	mov	r20,r21
   474ac:	84e1883a 	add	r16,r16,r19
   474b0:	a1c00007 	ldb	r7,0(r20)
   474b4:	01800284 	movi	r6,10
   474b8:	a5000044 	addi	r20,r20,1
   474bc:	100b883a 	mov	r5,r2
   474c0:	39fff404 	addi	r7,r7,-48
   474c4:	8809883a 	mov	r4,r17
   474c8:	00472e80 	call	472e8 <__multadd>
   474cc:	a43ff81e 	bne	r20,r16,474b0 <__alt_data_end+0xfffdb590>
   474d0:	ace1883a 	add	r16,r21,r19
   474d4:	843ffe04 	addi	r16,r16,-8
   474d8:	9c800a0e 	bge	r19,r18,47504 <__s2b+0xd4>
   474dc:	94e5c83a 	sub	r18,r18,r19
   474e0:	84a5883a 	add	r18,r16,r18
   474e4:	81c00007 	ldb	r7,0(r16)
   474e8:	01800284 	movi	r6,10
   474ec:	84000044 	addi	r16,r16,1
   474f0:	100b883a 	mov	r5,r2
   474f4:	39fff404 	addi	r7,r7,-48
   474f8:	8809883a 	mov	r4,r17
   474fc:	00472e80 	call	472e8 <__multadd>
   47500:	84bff81e 	bne	r16,r18,474e4 <__alt_data_end+0xfffdb5c4>
   47504:	dfc00617 	ldw	ra,24(sp)
   47508:	dd400517 	ldw	r21,20(sp)
   4750c:	dd000417 	ldw	r20,16(sp)
   47510:	dcc00317 	ldw	r19,12(sp)
   47514:	dc800217 	ldw	r18,8(sp)
   47518:	dc400117 	ldw	r17,4(sp)
   4751c:	dc000017 	ldw	r16,0(sp)
   47520:	dec00704 	addi	sp,sp,28
   47524:	f800283a 	ret
   47528:	84000284 	addi	r16,r16,10
   4752c:	1827883a 	mov	r19,r3
   47530:	003fe906 	br	474d8 <__alt_data_end+0xfffdb5b8>

00047534 <__hi0bits>:
   47534:	20bfffec 	andhi	r2,r4,65535
   47538:	1000141e 	bne	r2,zero,4758c <__hi0bits+0x58>
   4753c:	2008943a 	slli	r4,r4,16
   47540:	00800404 	movi	r2,16
   47544:	20ffc02c 	andhi	r3,r4,65280
   47548:	1800021e 	bne	r3,zero,47554 <__hi0bits+0x20>
   4754c:	2008923a 	slli	r4,r4,8
   47550:	10800204 	addi	r2,r2,8
   47554:	20fc002c 	andhi	r3,r4,61440
   47558:	1800021e 	bne	r3,zero,47564 <__hi0bits+0x30>
   4755c:	2008913a 	slli	r4,r4,4
   47560:	10800104 	addi	r2,r2,4
   47564:	20f0002c 	andhi	r3,r4,49152
   47568:	1800031e 	bne	r3,zero,47578 <__hi0bits+0x44>
   4756c:	2109883a 	add	r4,r4,r4
   47570:	10800084 	addi	r2,r2,2
   47574:	2109883a 	add	r4,r4,r4
   47578:	20000316 	blt	r4,zero,47588 <__hi0bits+0x54>
   4757c:	2110002c 	andhi	r4,r4,16384
   47580:	2000041e 	bne	r4,zero,47594 <__hi0bits+0x60>
   47584:	00800804 	movi	r2,32
   47588:	f800283a 	ret
   4758c:	0005883a 	mov	r2,zero
   47590:	003fec06 	br	47544 <__alt_data_end+0xfffdb624>
   47594:	10800044 	addi	r2,r2,1
   47598:	f800283a 	ret

0004759c <__lo0bits>:
   4759c:	20c00017 	ldw	r3,0(r4)
   475a0:	188001cc 	andi	r2,r3,7
   475a4:	10000826 	beq	r2,zero,475c8 <__lo0bits+0x2c>
   475a8:	1880004c 	andi	r2,r3,1
   475ac:	1000211e 	bne	r2,zero,47634 <__lo0bits+0x98>
   475b0:	1880008c 	andi	r2,r3,2
   475b4:	1000211e 	bne	r2,zero,4763c <__lo0bits+0xa0>
   475b8:	1806d0ba 	srli	r3,r3,2
   475bc:	00800084 	movi	r2,2
   475c0:	20c00015 	stw	r3,0(r4)
   475c4:	f800283a 	ret
   475c8:	18bfffcc 	andi	r2,r3,65535
   475cc:	10001326 	beq	r2,zero,4761c <__lo0bits+0x80>
   475d0:	0005883a 	mov	r2,zero
   475d4:	19403fcc 	andi	r5,r3,255
   475d8:	2800021e 	bne	r5,zero,475e4 <__lo0bits+0x48>
   475dc:	1806d23a 	srli	r3,r3,8
   475e0:	10800204 	addi	r2,r2,8
   475e4:	194003cc 	andi	r5,r3,15
   475e8:	2800021e 	bne	r5,zero,475f4 <__lo0bits+0x58>
   475ec:	1806d13a 	srli	r3,r3,4
   475f0:	10800104 	addi	r2,r2,4
   475f4:	194000cc 	andi	r5,r3,3
   475f8:	2800021e 	bne	r5,zero,47604 <__lo0bits+0x68>
   475fc:	1806d0ba 	srli	r3,r3,2
   47600:	10800084 	addi	r2,r2,2
   47604:	1940004c 	andi	r5,r3,1
   47608:	2800081e 	bne	r5,zero,4762c <__lo0bits+0x90>
   4760c:	1806d07a 	srli	r3,r3,1
   47610:	1800051e 	bne	r3,zero,47628 <__lo0bits+0x8c>
   47614:	00800804 	movi	r2,32
   47618:	f800283a 	ret
   4761c:	1806d43a 	srli	r3,r3,16
   47620:	00800404 	movi	r2,16
   47624:	003feb06 	br	475d4 <__alt_data_end+0xfffdb6b4>
   47628:	10800044 	addi	r2,r2,1
   4762c:	20c00015 	stw	r3,0(r4)
   47630:	f800283a 	ret
   47634:	0005883a 	mov	r2,zero
   47638:	f800283a 	ret
   4763c:	1806d07a 	srli	r3,r3,1
   47640:	00800044 	movi	r2,1
   47644:	20c00015 	stw	r3,0(r4)
   47648:	f800283a 	ret

0004764c <__i2b>:
   4764c:	defffd04 	addi	sp,sp,-12
   47650:	dc000015 	stw	r16,0(sp)
   47654:	04000044 	movi	r16,1
   47658:	dc400115 	stw	r17,4(sp)
   4765c:	2823883a 	mov	r17,r5
   47660:	800b883a 	mov	r5,r16
   47664:	dfc00215 	stw	ra,8(sp)
   47668:	00472180 	call	47218 <_Balloc>
   4766c:	14400515 	stw	r17,20(r2)
   47670:	14000415 	stw	r16,16(r2)
   47674:	dfc00217 	ldw	ra,8(sp)
   47678:	dc400117 	ldw	r17,4(sp)
   4767c:	dc000017 	ldw	r16,0(sp)
   47680:	dec00304 	addi	sp,sp,12
   47684:	f800283a 	ret

00047688 <__multiply>:
   47688:	deffef04 	addi	sp,sp,-68
   4768c:	dc400815 	stw	r17,32(sp)
   47690:	dc000715 	stw	r16,28(sp)
   47694:	34400417 	ldw	r17,16(r6)
   47698:	2c000417 	ldw	r16,16(r5)
   4769c:	dd800d15 	stw	r22,52(sp)
   476a0:	dc800915 	stw	r18,36(sp)
   476a4:	dfc01015 	stw	ra,64(sp)
   476a8:	df000f15 	stw	fp,60(sp)
   476ac:	ddc00e15 	stw	r23,56(sp)
   476b0:	dd400c15 	stw	r21,48(sp)
   476b4:	dd000b15 	stw	r20,44(sp)
   476b8:	dcc00a15 	stw	r19,40(sp)
   476bc:	2825883a 	mov	r18,r5
   476c0:	302d883a 	mov	r22,r6
   476c4:	8440050e 	bge	r16,r17,476dc <__multiply+0x54>
   476c8:	8007883a 	mov	r3,r16
   476cc:	3025883a 	mov	r18,r6
   476d0:	8821883a 	mov	r16,r17
   476d4:	282d883a 	mov	r22,r5
   476d8:	1823883a 	mov	r17,r3
   476dc:	90800217 	ldw	r2,8(r18)
   476e0:	8447883a 	add	r3,r16,r17
   476e4:	d8c00215 	stw	r3,8(sp)
   476e8:	91400117 	ldw	r5,4(r18)
   476ec:	10c0010e 	bge	r2,r3,476f4 <__multiply+0x6c>
   476f0:	29400044 	addi	r5,r5,1
   476f4:	00472180 	call	47218 <_Balloc>
   476f8:	d8c00217 	ldw	r3,8(sp)
   476fc:	d8800615 	stw	r2,24(sp)
   47700:	18eb883a 	add	r21,r3,r3
   47704:	ad6b883a 	add	r21,r21,r21
   47708:	10c00504 	addi	r3,r2,20
   4770c:	1d6b883a 	add	r21,r3,r21
   47710:	d8c00115 	stw	r3,4(sp)
   47714:	dd400315 	stw	r21,12(sp)
   47718:	1805883a 	mov	r2,r3
   4771c:	1d40042e 	bgeu	r3,r21,47730 <__multiply+0xa8>
   47720:	d8c00317 	ldw	r3,12(sp)
   47724:	10000015 	stw	zero,0(r2)
   47728:	10800104 	addi	r2,r2,4
   4772c:	10fffc36 	bltu	r2,r3,47720 <__alt_data_end+0xfffdb800>
   47730:	8c63883a 	add	r17,r17,r17
   47734:	b5800504 	addi	r22,r22,20
   47738:	8c63883a 	add	r17,r17,r17
   4773c:	94800504 	addi	r18,r18,20
   47740:	8421883a 	add	r16,r16,r16
   47744:	b463883a 	add	r17,r22,r17
   47748:	8421883a 	add	r16,r16,r16
   4774c:	dd800015 	stw	r22,0(sp)
   47750:	dc800415 	stw	r18,16(sp)
   47754:	dc400515 	stw	r17,20(sp)
   47758:	9429883a 	add	r20,r18,r16
   4775c:	b4404f2e 	bgeu	r22,r17,4789c <__multiply+0x214>
   47760:	d8c00017 	ldw	r3,0(sp)
   47764:	1c800017 	ldw	r18,0(r3)
   47768:	947fffcc 	andi	r17,r18,65535
   4776c:	88001e26 	beq	r17,zero,477e8 <__multiply+0x160>
   47770:	dd800117 	ldw	r22,4(sp)
   47774:	dd400417 	ldw	r21,16(sp)
   47778:	0027883a 	mov	r19,zero
   4777c:	ac800017 	ldw	r18,0(r21)
   47780:	b4000017 	ldw	r16,0(r22)
   47784:	880b883a 	mov	r5,r17
   47788:	913fffcc 	andi	r4,r18,65535
   4778c:	004b4740 	call	4b474 <__mulsi3>
   47790:	9008d43a 	srli	r4,r18,16
   47794:	84bfffcc 	andi	r18,r16,65535
   47798:	1485883a 	add	r2,r2,r18
   4779c:	14e5883a 	add	r18,r2,r19
   477a0:	8020d43a 	srli	r16,r16,16
   477a4:	9026d43a 	srli	r19,r18,16
   477a8:	880b883a 	mov	r5,r17
   477ac:	004b4740 	call	4b474 <__mulsi3>
   477b0:	1405883a 	add	r2,r2,r16
   477b4:	14e1883a 	add	r16,r2,r19
   477b8:	90ffffcc 	andi	r3,r18,65535
   477bc:	8024943a 	slli	r18,r16,16
   477c0:	ad400104 	addi	r21,r21,4
   477c4:	b005883a 	mov	r2,r22
   477c8:	90c6b03a 	or	r3,r18,r3
   477cc:	b0c00015 	stw	r3,0(r22)
   477d0:	8026d43a 	srli	r19,r16,16
   477d4:	b5800104 	addi	r22,r22,4
   477d8:	ad3fe836 	bltu	r21,r20,4777c <__alt_data_end+0xfffdb85c>
   477dc:	d8c00017 	ldw	r3,0(sp)
   477e0:	14c00115 	stw	r19,4(r2)
   477e4:	1c800017 	ldw	r18,0(r3)
   477e8:	9024d43a 	srli	r18,r18,16
   477ec:	90002226 	beq	r18,zero,47878 <__multiply+0x1f0>
   477f0:	d8c00117 	ldw	r3,4(sp)
   477f4:	dd800417 	ldw	r22,16(sp)
   477f8:	002f883a 	mov	r23,zero
   477fc:	1f000017 	ldw	fp,0(r3)
   47800:	1823883a 	mov	r17,r3
   47804:	182b883a 	mov	r21,r3
   47808:	e021883a 	mov	r16,fp
   4780c:	00000106 	br	47814 <__multiply+0x18c>
   47810:	982b883a 	mov	r21,r19
   47814:	b100000b 	ldhu	r4,0(r22)
   47818:	8020d43a 	srli	r16,r16,16
   4781c:	900b883a 	mov	r5,r18
   47820:	004b4740 	call	4b474 <__mulsi3>
   47824:	1405883a 	add	r2,r2,r16
   47828:	15ef883a 	add	r23,r2,r23
   4782c:	b804943a 	slli	r2,r23,16
   47830:	e0ffffcc 	andi	r3,fp,65535
   47834:	8c400104 	addi	r17,r17,4
   47838:	10c6b03a 	or	r3,r2,r3
   4783c:	88ffff15 	stw	r3,-4(r17)
   47840:	b5800104 	addi	r22,r22,4
   47844:	b13fff17 	ldw	r4,-4(r22)
   47848:	acc00104 	addi	r19,r21,4
   4784c:	900b883a 	mov	r5,r18
   47850:	2008d43a 	srli	r4,r4,16
   47854:	9c000017 	ldw	r16,0(r19)
   47858:	004b4740 	call	4b474 <__mulsi3>
   4785c:	b806d43a 	srli	r3,r23,16
   47860:	813fffcc 	andi	r4,r16,65535
   47864:	1105883a 	add	r2,r2,r4
   47868:	10f9883a 	add	fp,r2,r3
   4786c:	e02ed43a 	srli	r23,fp,16
   47870:	b53fe736 	bltu	r22,r20,47810 <__alt_data_end+0xfffdb8f0>
   47874:	af000115 	stw	fp,4(r21)
   47878:	d8c00017 	ldw	r3,0(sp)
   4787c:	d9000517 	ldw	r4,20(sp)
   47880:	18c00104 	addi	r3,r3,4
   47884:	d8c00015 	stw	r3,0(sp)
   47888:	d8c00117 	ldw	r3,4(sp)
   4788c:	18c00104 	addi	r3,r3,4
   47890:	d8c00115 	stw	r3,4(sp)
   47894:	d8c00017 	ldw	r3,0(sp)
   47898:	193fb136 	bltu	r3,r4,47760 <__alt_data_end+0xfffdb840>
   4789c:	d8c00217 	ldw	r3,8(sp)
   478a0:	00c00c0e 	bge	zero,r3,478d4 <__multiply+0x24c>
   478a4:	d8c00317 	ldw	r3,12(sp)
   478a8:	18bfff17 	ldw	r2,-4(r3)
   478ac:	1d7fff04 	addi	r21,r3,-4
   478b0:	10000326 	beq	r2,zero,478c0 <__multiply+0x238>
   478b4:	00000706 	br	478d4 <__multiply+0x24c>
   478b8:	a8800017 	ldw	r2,0(r21)
   478bc:	1000051e 	bne	r2,zero,478d4 <__multiply+0x24c>
   478c0:	d8c00217 	ldw	r3,8(sp)
   478c4:	ad7fff04 	addi	r21,r21,-4
   478c8:	18ffffc4 	addi	r3,r3,-1
   478cc:	d8c00215 	stw	r3,8(sp)
   478d0:	183ff91e 	bne	r3,zero,478b8 <__alt_data_end+0xfffdb998>
   478d4:	d8c00617 	ldw	r3,24(sp)
   478d8:	d9000217 	ldw	r4,8(sp)
   478dc:	1805883a 	mov	r2,r3
   478e0:	19000415 	stw	r4,16(r3)
   478e4:	dfc01017 	ldw	ra,64(sp)
   478e8:	df000f17 	ldw	fp,60(sp)
   478ec:	ddc00e17 	ldw	r23,56(sp)
   478f0:	dd800d17 	ldw	r22,52(sp)
   478f4:	dd400c17 	ldw	r21,48(sp)
   478f8:	dd000b17 	ldw	r20,44(sp)
   478fc:	dcc00a17 	ldw	r19,40(sp)
   47900:	dc800917 	ldw	r18,36(sp)
   47904:	dc400817 	ldw	r17,32(sp)
   47908:	dc000717 	ldw	r16,28(sp)
   4790c:	dec01104 	addi	sp,sp,68
   47910:	f800283a 	ret

00047914 <__pow5mult>:
   47914:	defffa04 	addi	sp,sp,-24
   47918:	dcc00315 	stw	r19,12(sp)
   4791c:	dc000015 	stw	r16,0(sp)
   47920:	dfc00515 	stw	ra,20(sp)
   47924:	dd000415 	stw	r20,16(sp)
   47928:	dc800215 	stw	r18,8(sp)
   4792c:	dc400115 	stw	r17,4(sp)
   47930:	308000cc 	andi	r2,r6,3
   47934:	3021883a 	mov	r16,r6
   47938:	2027883a 	mov	r19,r4
   4793c:	10002f1e 	bne	r2,zero,479fc <__pow5mult+0xe8>
   47940:	2825883a 	mov	r18,r5
   47944:	8021d0ba 	srai	r16,r16,2
   47948:	80001a26 	beq	r16,zero,479b4 <__pow5mult+0xa0>
   4794c:	9c401217 	ldw	r17,72(r19)
   47950:	8800061e 	bne	r17,zero,4796c <__pow5mult+0x58>
   47954:	00003406 	br	47a28 <__pow5mult+0x114>
   47958:	8021d07a 	srai	r16,r16,1
   4795c:	80001526 	beq	r16,zero,479b4 <__pow5mult+0xa0>
   47960:	88800017 	ldw	r2,0(r17)
   47964:	10001c26 	beq	r2,zero,479d8 <__pow5mult+0xc4>
   47968:	1023883a 	mov	r17,r2
   4796c:	8080004c 	andi	r2,r16,1
   47970:	103ff926 	beq	r2,zero,47958 <__alt_data_end+0xfffdba38>
   47974:	880d883a 	mov	r6,r17
   47978:	900b883a 	mov	r5,r18
   4797c:	9809883a 	mov	r4,r19
   47980:	00476880 	call	47688 <__multiply>
   47984:	90001b26 	beq	r18,zero,479f4 <__pow5mult+0xe0>
   47988:	91000117 	ldw	r4,4(r18)
   4798c:	98c01317 	ldw	r3,76(r19)
   47990:	8021d07a 	srai	r16,r16,1
   47994:	2109883a 	add	r4,r4,r4
   47998:	2109883a 	add	r4,r4,r4
   4799c:	1907883a 	add	r3,r3,r4
   479a0:	19000017 	ldw	r4,0(r3)
   479a4:	91000015 	stw	r4,0(r18)
   479a8:	1c800015 	stw	r18,0(r3)
   479ac:	1025883a 	mov	r18,r2
   479b0:	803feb1e 	bne	r16,zero,47960 <__alt_data_end+0xfffdba40>
   479b4:	9005883a 	mov	r2,r18
   479b8:	dfc00517 	ldw	ra,20(sp)
   479bc:	dd000417 	ldw	r20,16(sp)
   479c0:	dcc00317 	ldw	r19,12(sp)
   479c4:	dc800217 	ldw	r18,8(sp)
   479c8:	dc400117 	ldw	r17,4(sp)
   479cc:	dc000017 	ldw	r16,0(sp)
   479d0:	dec00604 	addi	sp,sp,24
   479d4:	f800283a 	ret
   479d8:	880d883a 	mov	r6,r17
   479dc:	880b883a 	mov	r5,r17
   479e0:	9809883a 	mov	r4,r19
   479e4:	00476880 	call	47688 <__multiply>
   479e8:	88800015 	stw	r2,0(r17)
   479ec:	10000015 	stw	zero,0(r2)
   479f0:	003fdd06 	br	47968 <__alt_data_end+0xfffdba48>
   479f4:	1025883a 	mov	r18,r2
   479f8:	003fd706 	br	47958 <__alt_data_end+0xfffdba38>
   479fc:	10bfffc4 	addi	r2,r2,-1
   47a00:	1085883a 	add	r2,r2,r2
   47a04:	00c00174 	movhi	r3,5
   47a08:	18c21904 	addi	r3,r3,2148
   47a0c:	1085883a 	add	r2,r2,r2
   47a10:	1885883a 	add	r2,r3,r2
   47a14:	11800017 	ldw	r6,0(r2)
   47a18:	000f883a 	mov	r7,zero
   47a1c:	00472e80 	call	472e8 <__multadd>
   47a20:	1025883a 	mov	r18,r2
   47a24:	003fc706 	br	47944 <__alt_data_end+0xfffdba24>
   47a28:	05000044 	movi	r20,1
   47a2c:	a00b883a 	mov	r5,r20
   47a30:	9809883a 	mov	r4,r19
   47a34:	00472180 	call	47218 <_Balloc>
   47a38:	1023883a 	mov	r17,r2
   47a3c:	00809c44 	movi	r2,625
   47a40:	88800515 	stw	r2,20(r17)
   47a44:	8d000415 	stw	r20,16(r17)
   47a48:	9c401215 	stw	r17,72(r19)
   47a4c:	88000015 	stw	zero,0(r17)
   47a50:	003fc606 	br	4796c <__alt_data_end+0xfffdba4c>

00047a54 <__lshift>:
   47a54:	defff904 	addi	sp,sp,-28
   47a58:	dd400515 	stw	r21,20(sp)
   47a5c:	dcc00315 	stw	r19,12(sp)
   47a60:	302bd17a 	srai	r21,r6,5
   47a64:	2cc00417 	ldw	r19,16(r5)
   47a68:	28800217 	ldw	r2,8(r5)
   47a6c:	dd000415 	stw	r20,16(sp)
   47a70:	ace7883a 	add	r19,r21,r19
   47a74:	dc800215 	stw	r18,8(sp)
   47a78:	dc400115 	stw	r17,4(sp)
   47a7c:	dc000015 	stw	r16,0(sp)
   47a80:	dfc00615 	stw	ra,24(sp)
   47a84:	9c000044 	addi	r16,r19,1
   47a88:	2823883a 	mov	r17,r5
   47a8c:	3029883a 	mov	r20,r6
   47a90:	2025883a 	mov	r18,r4
   47a94:	29400117 	ldw	r5,4(r5)
   47a98:	1400030e 	bge	r2,r16,47aa8 <__lshift+0x54>
   47a9c:	1085883a 	add	r2,r2,r2
   47aa0:	29400044 	addi	r5,r5,1
   47aa4:	143ffd16 	blt	r2,r16,47a9c <__alt_data_end+0xfffdbb7c>
   47aa8:	9009883a 	mov	r4,r18
   47aac:	00472180 	call	47218 <_Balloc>
   47ab0:	10c00504 	addi	r3,r2,20
   47ab4:	0540070e 	bge	zero,r21,47ad4 <__lshift+0x80>
   47ab8:	ad6b883a 	add	r21,r21,r21
   47abc:	ad6b883a 	add	r21,r21,r21
   47ac0:	1809883a 	mov	r4,r3
   47ac4:	1d47883a 	add	r3,r3,r21
   47ac8:	20000015 	stw	zero,0(r4)
   47acc:	21000104 	addi	r4,r4,4
   47ad0:	193ffd1e 	bne	r3,r4,47ac8 <__alt_data_end+0xfffdbba8>
   47ad4:	8a000417 	ldw	r8,16(r17)
   47ad8:	89000504 	addi	r4,r17,20
   47adc:	a18007cc 	andi	r6,r20,31
   47ae0:	4211883a 	add	r8,r8,r8
   47ae4:	4211883a 	add	r8,r8,r8
   47ae8:	2211883a 	add	r8,r4,r8
   47aec:	30002326 	beq	r6,zero,47b7c <__lshift+0x128>
   47af0:	02400804 	movi	r9,32
   47af4:	4993c83a 	sub	r9,r9,r6
   47af8:	000b883a 	mov	r5,zero
   47afc:	21c00017 	ldw	r7,0(r4)
   47b00:	1815883a 	mov	r10,r3
   47b04:	18c00104 	addi	r3,r3,4
   47b08:	398e983a 	sll	r7,r7,r6
   47b0c:	21000104 	addi	r4,r4,4
   47b10:	394ab03a 	or	r5,r7,r5
   47b14:	197fff15 	stw	r5,-4(r3)
   47b18:	217fff17 	ldw	r5,-4(r4)
   47b1c:	2a4ad83a 	srl	r5,r5,r9
   47b20:	223ff636 	bltu	r4,r8,47afc <__alt_data_end+0xfffdbbdc>
   47b24:	51400115 	stw	r5,4(r10)
   47b28:	28001a1e 	bne	r5,zero,47b94 <__lshift+0x140>
   47b2c:	843fffc4 	addi	r16,r16,-1
   47b30:	14000415 	stw	r16,16(r2)
   47b34:	88000826 	beq	r17,zero,47b58 <__lshift+0x104>
   47b38:	89000117 	ldw	r4,4(r17)
   47b3c:	90c01317 	ldw	r3,76(r18)
   47b40:	2109883a 	add	r4,r4,r4
   47b44:	2109883a 	add	r4,r4,r4
   47b48:	1907883a 	add	r3,r3,r4
   47b4c:	19000017 	ldw	r4,0(r3)
   47b50:	89000015 	stw	r4,0(r17)
   47b54:	1c400015 	stw	r17,0(r3)
   47b58:	dfc00617 	ldw	ra,24(sp)
   47b5c:	dd400517 	ldw	r21,20(sp)
   47b60:	dd000417 	ldw	r20,16(sp)
   47b64:	dcc00317 	ldw	r19,12(sp)
   47b68:	dc800217 	ldw	r18,8(sp)
   47b6c:	dc400117 	ldw	r17,4(sp)
   47b70:	dc000017 	ldw	r16,0(sp)
   47b74:	dec00704 	addi	sp,sp,28
   47b78:	f800283a 	ret
   47b7c:	21400017 	ldw	r5,0(r4)
   47b80:	18c00104 	addi	r3,r3,4
   47b84:	21000104 	addi	r4,r4,4
   47b88:	197fff15 	stw	r5,-4(r3)
   47b8c:	223ffb36 	bltu	r4,r8,47b7c <__alt_data_end+0xfffdbc5c>
   47b90:	003fe606 	br	47b2c <__alt_data_end+0xfffdbc0c>
   47b94:	9c000084 	addi	r16,r19,2
   47b98:	003fe406 	br	47b2c <__alt_data_end+0xfffdbc0c>

00047b9c <__mcmp>:
   47b9c:	20800417 	ldw	r2,16(r4)
   47ba0:	28c00417 	ldw	r3,16(r5)
   47ba4:	10c5c83a 	sub	r2,r2,r3
   47ba8:	1000111e 	bne	r2,zero,47bf0 <__mcmp+0x54>
   47bac:	18c7883a 	add	r3,r3,r3
   47bb0:	18c7883a 	add	r3,r3,r3
   47bb4:	21000504 	addi	r4,r4,20
   47bb8:	29400504 	addi	r5,r5,20
   47bbc:	20c5883a 	add	r2,r4,r3
   47bc0:	28cb883a 	add	r5,r5,r3
   47bc4:	00000106 	br	47bcc <__mcmp+0x30>
   47bc8:	20800a2e 	bgeu	r4,r2,47bf4 <__mcmp+0x58>
   47bcc:	10bfff04 	addi	r2,r2,-4
   47bd0:	297fff04 	addi	r5,r5,-4
   47bd4:	11800017 	ldw	r6,0(r2)
   47bd8:	28c00017 	ldw	r3,0(r5)
   47bdc:	30fffa26 	beq	r6,r3,47bc8 <__alt_data_end+0xfffdbca8>
   47be0:	30c00236 	bltu	r6,r3,47bec <__mcmp+0x50>
   47be4:	00800044 	movi	r2,1
   47be8:	f800283a 	ret
   47bec:	00bfffc4 	movi	r2,-1
   47bf0:	f800283a 	ret
   47bf4:	0005883a 	mov	r2,zero
   47bf8:	f800283a 	ret

00047bfc <__mdiff>:
   47bfc:	28c00417 	ldw	r3,16(r5)
   47c00:	30800417 	ldw	r2,16(r6)
   47c04:	defffa04 	addi	sp,sp,-24
   47c08:	dcc00315 	stw	r19,12(sp)
   47c0c:	dc800215 	stw	r18,8(sp)
   47c10:	dfc00515 	stw	ra,20(sp)
   47c14:	dd000415 	stw	r20,16(sp)
   47c18:	dc400115 	stw	r17,4(sp)
   47c1c:	dc000015 	stw	r16,0(sp)
   47c20:	1887c83a 	sub	r3,r3,r2
   47c24:	2825883a 	mov	r18,r5
   47c28:	3027883a 	mov	r19,r6
   47c2c:	1800141e 	bne	r3,zero,47c80 <__mdiff+0x84>
   47c30:	1085883a 	add	r2,r2,r2
   47c34:	1085883a 	add	r2,r2,r2
   47c38:	2a000504 	addi	r8,r5,20
   47c3c:	34000504 	addi	r16,r6,20
   47c40:	4087883a 	add	r3,r8,r2
   47c44:	8085883a 	add	r2,r16,r2
   47c48:	00000106 	br	47c50 <__mdiff+0x54>
   47c4c:	40c0592e 	bgeu	r8,r3,47db4 <__mdiff+0x1b8>
   47c50:	18ffff04 	addi	r3,r3,-4
   47c54:	10bfff04 	addi	r2,r2,-4
   47c58:	19c00017 	ldw	r7,0(r3)
   47c5c:	11400017 	ldw	r5,0(r2)
   47c60:	397ffa26 	beq	r7,r5,47c4c <__alt_data_end+0xfffdbd2c>
   47c64:	3940592e 	bgeu	r7,r5,47dcc <__mdiff+0x1d0>
   47c68:	9005883a 	mov	r2,r18
   47c6c:	4023883a 	mov	r17,r8
   47c70:	9825883a 	mov	r18,r19
   47c74:	05000044 	movi	r20,1
   47c78:	1027883a 	mov	r19,r2
   47c7c:	00000406 	br	47c90 <__mdiff+0x94>
   47c80:	18005616 	blt	r3,zero,47ddc <__mdiff+0x1e0>
   47c84:	34400504 	addi	r17,r6,20
   47c88:	2c000504 	addi	r16,r5,20
   47c8c:	0029883a 	mov	r20,zero
   47c90:	91400117 	ldw	r5,4(r18)
   47c94:	00472180 	call	47218 <_Balloc>
   47c98:	92400417 	ldw	r9,16(r18)
   47c9c:	9b000417 	ldw	r12,16(r19)
   47ca0:	12c00504 	addi	r11,r2,20
   47ca4:	4a51883a 	add	r8,r9,r9
   47ca8:	6319883a 	add	r12,r12,r12
   47cac:	4211883a 	add	r8,r8,r8
   47cb0:	6319883a 	add	r12,r12,r12
   47cb4:	15000315 	stw	r20,12(r2)
   47cb8:	8211883a 	add	r8,r16,r8
   47cbc:	8b19883a 	add	r12,r17,r12
   47cc0:	0007883a 	mov	r3,zero
   47cc4:	81400017 	ldw	r5,0(r16)
   47cc8:	89c00017 	ldw	r7,0(r17)
   47ccc:	59800104 	addi	r6,r11,4
   47cd0:	293fffcc 	andi	r4,r5,65535
   47cd4:	20c7883a 	add	r3,r4,r3
   47cd8:	393fffcc 	andi	r4,r7,65535
   47cdc:	1909c83a 	sub	r4,r3,r4
   47ce0:	280ad43a 	srli	r5,r5,16
   47ce4:	380ed43a 	srli	r7,r7,16
   47ce8:	2007d43a 	srai	r3,r4,16
   47cec:	213fffcc 	andi	r4,r4,65535
   47cf0:	29cbc83a 	sub	r5,r5,r7
   47cf4:	28c7883a 	add	r3,r5,r3
   47cf8:	180a943a 	slli	r5,r3,16
   47cfc:	8c400104 	addi	r17,r17,4
   47d00:	84000104 	addi	r16,r16,4
   47d04:	2908b03a 	or	r4,r5,r4
   47d08:	59000015 	stw	r4,0(r11)
   47d0c:	1807d43a 	srai	r3,r3,16
   47d10:	3015883a 	mov	r10,r6
   47d14:	3017883a 	mov	r11,r6
   47d18:	8b3fea36 	bltu	r17,r12,47cc4 <__alt_data_end+0xfffdbda4>
   47d1c:	8200162e 	bgeu	r16,r8,47d78 <__mdiff+0x17c>
   47d20:	8017883a 	mov	r11,r16
   47d24:	59400017 	ldw	r5,0(r11)
   47d28:	31800104 	addi	r6,r6,4
   47d2c:	5ac00104 	addi	r11,r11,4
   47d30:	293fffcc 	andi	r4,r5,65535
   47d34:	20c7883a 	add	r3,r4,r3
   47d38:	280ed43a 	srli	r7,r5,16
   47d3c:	180bd43a 	srai	r5,r3,16
   47d40:	193fffcc 	andi	r4,r3,65535
   47d44:	3947883a 	add	r3,r7,r5
   47d48:	180a943a 	slli	r5,r3,16
   47d4c:	1807d43a 	srai	r3,r3,16
   47d50:	2908b03a 	or	r4,r5,r4
   47d54:	313fff15 	stw	r4,-4(r6)
   47d58:	5a3ff236 	bltu	r11,r8,47d24 <__alt_data_end+0xfffdbe04>
   47d5c:	0406303a 	nor	r3,zero,r16
   47d60:	1a07883a 	add	r3,r3,r8
   47d64:	1806d0ba 	srli	r3,r3,2
   47d68:	18c00044 	addi	r3,r3,1
   47d6c:	18c7883a 	add	r3,r3,r3
   47d70:	18c7883a 	add	r3,r3,r3
   47d74:	50d5883a 	add	r10,r10,r3
   47d78:	50ffff04 	addi	r3,r10,-4
   47d7c:	2000041e 	bne	r4,zero,47d90 <__mdiff+0x194>
   47d80:	18ffff04 	addi	r3,r3,-4
   47d84:	19000017 	ldw	r4,0(r3)
   47d88:	4a7fffc4 	addi	r9,r9,-1
   47d8c:	203ffc26 	beq	r4,zero,47d80 <__alt_data_end+0xfffdbe60>
   47d90:	12400415 	stw	r9,16(r2)
   47d94:	dfc00517 	ldw	ra,20(sp)
   47d98:	dd000417 	ldw	r20,16(sp)
   47d9c:	dcc00317 	ldw	r19,12(sp)
   47da0:	dc800217 	ldw	r18,8(sp)
   47da4:	dc400117 	ldw	r17,4(sp)
   47da8:	dc000017 	ldw	r16,0(sp)
   47dac:	dec00604 	addi	sp,sp,24
   47db0:	f800283a 	ret
   47db4:	000b883a 	mov	r5,zero
   47db8:	00472180 	call	47218 <_Balloc>
   47dbc:	00c00044 	movi	r3,1
   47dc0:	10c00415 	stw	r3,16(r2)
   47dc4:	10000515 	stw	zero,20(r2)
   47dc8:	003ff206 	br	47d94 <__alt_data_end+0xfffdbe74>
   47dcc:	8023883a 	mov	r17,r16
   47dd0:	0029883a 	mov	r20,zero
   47dd4:	4021883a 	mov	r16,r8
   47dd8:	003fad06 	br	47c90 <__alt_data_end+0xfffdbd70>
   47ddc:	9005883a 	mov	r2,r18
   47de0:	94400504 	addi	r17,r18,20
   47de4:	9c000504 	addi	r16,r19,20
   47de8:	9825883a 	mov	r18,r19
   47dec:	05000044 	movi	r20,1
   47df0:	1027883a 	mov	r19,r2
   47df4:	003fa606 	br	47c90 <__alt_data_end+0xfffdbd70>

00047df8 <__ulp>:
   47df8:	295ffc2c 	andhi	r5,r5,32752
   47dfc:	00bf3034 	movhi	r2,64704
   47e00:	2887883a 	add	r3,r5,r2
   47e04:	00c0020e 	bge	zero,r3,47e10 <__ulp+0x18>
   47e08:	0005883a 	mov	r2,zero
   47e0c:	f800283a 	ret
   47e10:	00c7c83a 	sub	r3,zero,r3
   47e14:	1807d53a 	srai	r3,r3,20
   47e18:	008004c4 	movi	r2,19
   47e1c:	10c00b0e 	bge	r2,r3,47e4c <__ulp+0x54>
   47e20:	18bffb04 	addi	r2,r3,-20
   47e24:	01000784 	movi	r4,30
   47e28:	0007883a 	mov	r3,zero
   47e2c:	20800516 	blt	r4,r2,47e44 <__ulp+0x4c>
   47e30:	010007c4 	movi	r4,31
   47e34:	2089c83a 	sub	r4,r4,r2
   47e38:	00800044 	movi	r2,1
   47e3c:	1104983a 	sll	r2,r2,r4
   47e40:	f800283a 	ret
   47e44:	00800044 	movi	r2,1
   47e48:	f800283a 	ret
   47e4c:	01400234 	movhi	r5,8
   47e50:	28c7d83a 	sra	r3,r5,r3
   47e54:	0005883a 	mov	r2,zero
   47e58:	f800283a 	ret

00047e5c <__b2d>:
   47e5c:	defffa04 	addi	sp,sp,-24
   47e60:	dc000015 	stw	r16,0(sp)
   47e64:	24000417 	ldw	r16,16(r4)
   47e68:	dc400115 	stw	r17,4(sp)
   47e6c:	24400504 	addi	r17,r4,20
   47e70:	8421883a 	add	r16,r16,r16
   47e74:	8421883a 	add	r16,r16,r16
   47e78:	8c21883a 	add	r16,r17,r16
   47e7c:	dc800215 	stw	r18,8(sp)
   47e80:	84bfff17 	ldw	r18,-4(r16)
   47e84:	dd000415 	stw	r20,16(sp)
   47e88:	dcc00315 	stw	r19,12(sp)
   47e8c:	9009883a 	mov	r4,r18
   47e90:	2829883a 	mov	r20,r5
   47e94:	dfc00515 	stw	ra,20(sp)
   47e98:	00475340 	call	47534 <__hi0bits>
   47e9c:	00c00804 	movi	r3,32
   47ea0:	1889c83a 	sub	r4,r3,r2
   47ea4:	a1000015 	stw	r4,0(r20)
   47ea8:	01000284 	movi	r4,10
   47eac:	84ffff04 	addi	r19,r16,-4
   47eb0:	20801216 	blt	r4,r2,47efc <__b2d+0xa0>
   47eb4:	018002c4 	movi	r6,11
   47eb8:	308dc83a 	sub	r6,r6,r2
   47ebc:	9186d83a 	srl	r3,r18,r6
   47ec0:	18cffc34 	orhi	r3,r3,16368
   47ec4:	8cc0212e 	bgeu	r17,r19,47f4c <__b2d+0xf0>
   47ec8:	813ffe17 	ldw	r4,-8(r16)
   47ecc:	218cd83a 	srl	r6,r4,r6
   47ed0:	10800544 	addi	r2,r2,21
   47ed4:	9084983a 	sll	r2,r18,r2
   47ed8:	1184b03a 	or	r2,r2,r6
   47edc:	dfc00517 	ldw	ra,20(sp)
   47ee0:	dd000417 	ldw	r20,16(sp)
   47ee4:	dcc00317 	ldw	r19,12(sp)
   47ee8:	dc800217 	ldw	r18,8(sp)
   47eec:	dc400117 	ldw	r17,4(sp)
   47ef0:	dc000017 	ldw	r16,0(sp)
   47ef4:	dec00604 	addi	sp,sp,24
   47ef8:	f800283a 	ret
   47efc:	8cc00f2e 	bgeu	r17,r19,47f3c <__b2d+0xe0>
   47f00:	117ffd44 	addi	r5,r2,-11
   47f04:	80bffe17 	ldw	r2,-8(r16)
   47f08:	28000e26 	beq	r5,zero,47f44 <__b2d+0xe8>
   47f0c:	1949c83a 	sub	r4,r3,r5
   47f10:	9164983a 	sll	r18,r18,r5
   47f14:	1106d83a 	srl	r3,r2,r4
   47f18:	81bffe04 	addi	r6,r16,-8
   47f1c:	948ffc34 	orhi	r18,r18,16368
   47f20:	90c6b03a 	or	r3,r18,r3
   47f24:	89800e2e 	bgeu	r17,r6,47f60 <__b2d+0x104>
   47f28:	81bffd17 	ldw	r6,-12(r16)
   47f2c:	1144983a 	sll	r2,r2,r5
   47f30:	310ad83a 	srl	r5,r6,r4
   47f34:	2884b03a 	or	r2,r5,r2
   47f38:	003fe806 	br	47edc <__alt_data_end+0xfffdbfbc>
   47f3c:	10bffd44 	addi	r2,r2,-11
   47f40:	1000041e 	bne	r2,zero,47f54 <__b2d+0xf8>
   47f44:	90cffc34 	orhi	r3,r18,16368
   47f48:	003fe406 	br	47edc <__alt_data_end+0xfffdbfbc>
   47f4c:	000d883a 	mov	r6,zero
   47f50:	003fdf06 	br	47ed0 <__alt_data_end+0xfffdbfb0>
   47f54:	90a4983a 	sll	r18,r18,r2
   47f58:	0005883a 	mov	r2,zero
   47f5c:	003ff906 	br	47f44 <__alt_data_end+0xfffdc024>
   47f60:	1144983a 	sll	r2,r2,r5
   47f64:	003fdd06 	br	47edc <__alt_data_end+0xfffdbfbc>

00047f68 <__d2b>:
   47f68:	defff804 	addi	sp,sp,-32
   47f6c:	dc000215 	stw	r16,8(sp)
   47f70:	3021883a 	mov	r16,r6
   47f74:	dc400315 	stw	r17,12(sp)
   47f78:	8022907a 	slli	r17,r16,1
   47f7c:	dd000615 	stw	r20,24(sp)
   47f80:	2829883a 	mov	r20,r5
   47f84:	01400044 	movi	r5,1
   47f88:	dcc00515 	stw	r19,20(sp)
   47f8c:	dc800415 	stw	r18,16(sp)
   47f90:	dfc00715 	stw	ra,28(sp)
   47f94:	3825883a 	mov	r18,r7
   47f98:	8822d57a 	srli	r17,r17,21
   47f9c:	00472180 	call	47218 <_Balloc>
   47fa0:	1027883a 	mov	r19,r2
   47fa4:	00800434 	movhi	r2,16
   47fa8:	10bfffc4 	addi	r2,r2,-1
   47fac:	808c703a 	and	r6,r16,r2
   47fb0:	88000126 	beq	r17,zero,47fb8 <__d2b+0x50>
   47fb4:	31800434 	orhi	r6,r6,16
   47fb8:	d9800015 	stw	r6,0(sp)
   47fbc:	a0002426 	beq	r20,zero,48050 <__d2b+0xe8>
   47fc0:	d9000104 	addi	r4,sp,4
   47fc4:	dd000115 	stw	r20,4(sp)
   47fc8:	004759c0 	call	4759c <__lo0bits>
   47fcc:	d8c00017 	ldw	r3,0(sp)
   47fd0:	10002f1e 	bne	r2,zero,48090 <__d2b+0x128>
   47fd4:	d9000117 	ldw	r4,4(sp)
   47fd8:	99000515 	stw	r4,20(r19)
   47fdc:	1821003a 	cmpeq	r16,r3,zero
   47fe0:	01000084 	movi	r4,2
   47fe4:	2421c83a 	sub	r16,r4,r16
   47fe8:	98c00615 	stw	r3,24(r19)
   47fec:	9c000415 	stw	r16,16(r19)
   47ff0:	88001f1e 	bne	r17,zero,48070 <__d2b+0x108>
   47ff4:	10bef384 	addi	r2,r2,-1074
   47ff8:	90800015 	stw	r2,0(r18)
   47ffc:	00900034 	movhi	r2,16384
   48000:	10bfffc4 	addi	r2,r2,-1
   48004:	8085883a 	add	r2,r16,r2
   48008:	1085883a 	add	r2,r2,r2
   4800c:	1085883a 	add	r2,r2,r2
   48010:	9885883a 	add	r2,r19,r2
   48014:	11000517 	ldw	r4,20(r2)
   48018:	8020917a 	slli	r16,r16,5
   4801c:	00475340 	call	47534 <__hi0bits>
   48020:	d8c00817 	ldw	r3,32(sp)
   48024:	8085c83a 	sub	r2,r16,r2
   48028:	18800015 	stw	r2,0(r3)
   4802c:	9805883a 	mov	r2,r19
   48030:	dfc00717 	ldw	ra,28(sp)
   48034:	dd000617 	ldw	r20,24(sp)
   48038:	dcc00517 	ldw	r19,20(sp)
   4803c:	dc800417 	ldw	r18,16(sp)
   48040:	dc400317 	ldw	r17,12(sp)
   48044:	dc000217 	ldw	r16,8(sp)
   48048:	dec00804 	addi	sp,sp,32
   4804c:	f800283a 	ret
   48050:	d809883a 	mov	r4,sp
   48054:	004759c0 	call	4759c <__lo0bits>
   48058:	d8c00017 	ldw	r3,0(sp)
   4805c:	04000044 	movi	r16,1
   48060:	9c000415 	stw	r16,16(r19)
   48064:	98c00515 	stw	r3,20(r19)
   48068:	10800804 	addi	r2,r2,32
   4806c:	883fe126 	beq	r17,zero,47ff4 <__alt_data_end+0xfffdc0d4>
   48070:	00c00d44 	movi	r3,53
   48074:	8c7ef344 	addi	r17,r17,-1075
   48078:	88a3883a 	add	r17,r17,r2
   4807c:	1885c83a 	sub	r2,r3,r2
   48080:	d8c00817 	ldw	r3,32(sp)
   48084:	94400015 	stw	r17,0(r18)
   48088:	18800015 	stw	r2,0(r3)
   4808c:	003fe706 	br	4802c <__alt_data_end+0xfffdc10c>
   48090:	01000804 	movi	r4,32
   48094:	2089c83a 	sub	r4,r4,r2
   48098:	1908983a 	sll	r4,r3,r4
   4809c:	d9400117 	ldw	r5,4(sp)
   480a0:	1886d83a 	srl	r3,r3,r2
   480a4:	2148b03a 	or	r4,r4,r5
   480a8:	99000515 	stw	r4,20(r19)
   480ac:	d8c00015 	stw	r3,0(sp)
   480b0:	003fca06 	br	47fdc <__alt_data_end+0xfffdc0bc>

000480b4 <__ratio>:
   480b4:	defff904 	addi	sp,sp,-28
   480b8:	dc400315 	stw	r17,12(sp)
   480bc:	2823883a 	mov	r17,r5
   480c0:	d9400104 	addi	r5,sp,4
   480c4:	dfc00615 	stw	ra,24(sp)
   480c8:	dcc00515 	stw	r19,20(sp)
   480cc:	dc800415 	stw	r18,16(sp)
   480d0:	2027883a 	mov	r19,r4
   480d4:	dc000215 	stw	r16,8(sp)
   480d8:	0047e5c0 	call	47e5c <__b2d>
   480dc:	d80b883a 	mov	r5,sp
   480e0:	8809883a 	mov	r4,r17
   480e4:	1025883a 	mov	r18,r2
   480e8:	1821883a 	mov	r16,r3
   480ec:	0047e5c0 	call	47e5c <__b2d>
   480f0:	8a000417 	ldw	r8,16(r17)
   480f4:	99000417 	ldw	r4,16(r19)
   480f8:	d9400117 	ldw	r5,4(sp)
   480fc:	2209c83a 	sub	r4,r4,r8
   48100:	2010917a 	slli	r8,r4,5
   48104:	d9000017 	ldw	r4,0(sp)
   48108:	2909c83a 	sub	r4,r5,r4
   4810c:	4109883a 	add	r4,r8,r4
   48110:	01000e0e 	bge	zero,r4,4814c <__ratio+0x98>
   48114:	2008953a 	slli	r4,r4,20
   48118:	2421883a 	add	r16,r4,r16
   4811c:	100d883a 	mov	r6,r2
   48120:	180f883a 	mov	r7,r3
   48124:	9009883a 	mov	r4,r18
   48128:	800b883a 	mov	r5,r16
   4812c:	004bd480 	call	4bd48 <__divdf3>
   48130:	dfc00617 	ldw	ra,24(sp)
   48134:	dcc00517 	ldw	r19,20(sp)
   48138:	dc800417 	ldw	r18,16(sp)
   4813c:	dc400317 	ldw	r17,12(sp)
   48140:	dc000217 	ldw	r16,8(sp)
   48144:	dec00704 	addi	sp,sp,28
   48148:	f800283a 	ret
   4814c:	2008953a 	slli	r4,r4,20
   48150:	1907c83a 	sub	r3,r3,r4
   48154:	003ff106 	br	4811c <__alt_data_end+0xfffdc1fc>

00048158 <_mprec_log10>:
   48158:	defffe04 	addi	sp,sp,-8
   4815c:	dc000015 	stw	r16,0(sp)
   48160:	dfc00115 	stw	ra,4(sp)
   48164:	008005c4 	movi	r2,23
   48168:	2021883a 	mov	r16,r4
   4816c:	11000d0e 	bge	r2,r4,481a4 <_mprec_log10+0x4c>
   48170:	0005883a 	mov	r2,zero
   48174:	00cffc34 	movhi	r3,16368
   48178:	843fffc4 	addi	r16,r16,-1
   4817c:	000d883a 	mov	r6,zero
   48180:	01d00934 	movhi	r7,16420
   48184:	1009883a 	mov	r4,r2
   48188:	180b883a 	mov	r5,r3
   4818c:	004c9700 	call	4c970 <__muldf3>
   48190:	803ff91e 	bne	r16,zero,48178 <__alt_data_end+0xfffdc258>
   48194:	dfc00117 	ldw	ra,4(sp)
   48198:	dc000017 	ldw	r16,0(sp)
   4819c:	dec00204 	addi	sp,sp,8
   481a0:	f800283a 	ret
   481a4:	202090fa 	slli	r16,r4,3
   481a8:	00800174 	movhi	r2,5
   481ac:	10823004 	addi	r2,r2,2240
   481b0:	1421883a 	add	r16,r2,r16
   481b4:	80800017 	ldw	r2,0(r16)
   481b8:	80c00117 	ldw	r3,4(r16)
   481bc:	dfc00117 	ldw	ra,4(sp)
   481c0:	dc000017 	ldw	r16,0(sp)
   481c4:	dec00204 	addi	sp,sp,8
   481c8:	f800283a 	ret

000481cc <__copybits>:
   481cc:	297fffc4 	addi	r5,r5,-1
   481d0:	280fd17a 	srai	r7,r5,5
   481d4:	30c00417 	ldw	r3,16(r6)
   481d8:	30800504 	addi	r2,r6,20
   481dc:	39c00044 	addi	r7,r7,1
   481e0:	18c7883a 	add	r3,r3,r3
   481e4:	39cf883a 	add	r7,r7,r7
   481e8:	18c7883a 	add	r3,r3,r3
   481ec:	39cf883a 	add	r7,r7,r7
   481f0:	10c7883a 	add	r3,r2,r3
   481f4:	21cf883a 	add	r7,r4,r7
   481f8:	10c00d2e 	bgeu	r2,r3,48230 <__copybits+0x64>
   481fc:	200b883a 	mov	r5,r4
   48200:	12000017 	ldw	r8,0(r2)
   48204:	29400104 	addi	r5,r5,4
   48208:	10800104 	addi	r2,r2,4
   4820c:	2a3fff15 	stw	r8,-4(r5)
   48210:	10fffb36 	bltu	r2,r3,48200 <__alt_data_end+0xfffdc2e0>
   48214:	1985c83a 	sub	r2,r3,r6
   48218:	10bffac4 	addi	r2,r2,-21
   4821c:	1004d0ba 	srli	r2,r2,2
   48220:	10800044 	addi	r2,r2,1
   48224:	1085883a 	add	r2,r2,r2
   48228:	1085883a 	add	r2,r2,r2
   4822c:	2089883a 	add	r4,r4,r2
   48230:	21c0032e 	bgeu	r4,r7,48240 <__copybits+0x74>
   48234:	20000015 	stw	zero,0(r4)
   48238:	21000104 	addi	r4,r4,4
   4823c:	21fffd36 	bltu	r4,r7,48234 <__alt_data_end+0xfffdc314>
   48240:	f800283a 	ret

00048244 <__any_on>:
   48244:	20c00417 	ldw	r3,16(r4)
   48248:	2805d17a 	srai	r2,r5,5
   4824c:	21000504 	addi	r4,r4,20
   48250:	18800d0e 	bge	r3,r2,48288 <__any_on+0x44>
   48254:	18c7883a 	add	r3,r3,r3
   48258:	18c7883a 	add	r3,r3,r3
   4825c:	20c7883a 	add	r3,r4,r3
   48260:	20c0192e 	bgeu	r4,r3,482c8 <__any_on+0x84>
   48264:	18bfff17 	ldw	r2,-4(r3)
   48268:	18ffff04 	addi	r3,r3,-4
   4826c:	1000041e 	bne	r2,zero,48280 <__any_on+0x3c>
   48270:	20c0142e 	bgeu	r4,r3,482c4 <__any_on+0x80>
   48274:	18ffff04 	addi	r3,r3,-4
   48278:	19400017 	ldw	r5,0(r3)
   4827c:	283ffc26 	beq	r5,zero,48270 <__alt_data_end+0xfffdc350>
   48280:	00800044 	movi	r2,1
   48284:	f800283a 	ret
   48288:	10c00a0e 	bge	r2,r3,482b4 <__any_on+0x70>
   4828c:	1085883a 	add	r2,r2,r2
   48290:	1085883a 	add	r2,r2,r2
   48294:	294007cc 	andi	r5,r5,31
   48298:	2087883a 	add	r3,r4,r2
   4829c:	283ff026 	beq	r5,zero,48260 <__alt_data_end+0xfffdc340>
   482a0:	19800017 	ldw	r6,0(r3)
   482a4:	3144d83a 	srl	r2,r6,r5
   482a8:	114a983a 	sll	r5,r2,r5
   482ac:	317ff41e 	bne	r6,r5,48280 <__alt_data_end+0xfffdc360>
   482b0:	003feb06 	br	48260 <__alt_data_end+0xfffdc340>
   482b4:	1085883a 	add	r2,r2,r2
   482b8:	1085883a 	add	r2,r2,r2
   482bc:	2087883a 	add	r3,r4,r2
   482c0:	003fe706 	br	48260 <__alt_data_end+0xfffdc340>
   482c4:	f800283a 	ret
   482c8:	0005883a 	mov	r2,zero
   482cc:	f800283a 	ret

000482d0 <_read_r>:
   482d0:	defffd04 	addi	sp,sp,-12
   482d4:	2805883a 	mov	r2,r5
   482d8:	dc000015 	stw	r16,0(sp)
   482dc:	04000174 	movhi	r16,5
   482e0:	dc400115 	stw	r17,4(sp)
   482e4:	300b883a 	mov	r5,r6
   482e8:	84104704 	addi	r16,r16,16668
   482ec:	2023883a 	mov	r17,r4
   482f0:	380d883a 	mov	r6,r7
   482f4:	1009883a 	mov	r4,r2
   482f8:	dfc00215 	stw	ra,8(sp)
   482fc:	80000015 	stw	zero,0(r16)
   48300:	004e5e40 	call	4e5e4 <read>
   48304:	00ffffc4 	movi	r3,-1
   48308:	10c00526 	beq	r2,r3,48320 <_read_r+0x50>
   4830c:	dfc00217 	ldw	ra,8(sp)
   48310:	dc400117 	ldw	r17,4(sp)
   48314:	dc000017 	ldw	r16,0(sp)
   48318:	dec00304 	addi	sp,sp,12
   4831c:	f800283a 	ret
   48320:	80c00017 	ldw	r3,0(r16)
   48324:	183ff926 	beq	r3,zero,4830c <__alt_data_end+0xfffdc3ec>
   48328:	88c00015 	stw	r3,0(r17)
   4832c:	003ff706 	br	4830c <__alt_data_end+0xfffdc3ec>

00048330 <_realloc_r>:
   48330:	defff604 	addi	sp,sp,-40
   48334:	dc800215 	stw	r18,8(sp)
   48338:	dfc00915 	stw	ra,36(sp)
   4833c:	df000815 	stw	fp,32(sp)
   48340:	ddc00715 	stw	r23,28(sp)
   48344:	dd800615 	stw	r22,24(sp)
   48348:	dd400515 	stw	r21,20(sp)
   4834c:	dd000415 	stw	r20,16(sp)
   48350:	dcc00315 	stw	r19,12(sp)
   48354:	dc400115 	stw	r17,4(sp)
   48358:	dc000015 	stw	r16,0(sp)
   4835c:	3025883a 	mov	r18,r6
   48360:	2800b726 	beq	r5,zero,48640 <_realloc_r+0x310>
   48364:	282b883a 	mov	r21,r5
   48368:	2029883a 	mov	r20,r4
   4836c:	004e2dc0 	call	4e2dc <__malloc_lock>
   48370:	a8bfff17 	ldw	r2,-4(r21)
   48374:	043fff04 	movi	r16,-4
   48378:	90c002c4 	addi	r3,r18,11
   4837c:	01000584 	movi	r4,22
   48380:	acfffe04 	addi	r19,r21,-8
   48384:	1420703a 	and	r16,r2,r16
   48388:	20c0332e 	bgeu	r4,r3,48458 <_realloc_r+0x128>
   4838c:	047ffe04 	movi	r17,-8
   48390:	1c62703a 	and	r17,r3,r17
   48394:	8807883a 	mov	r3,r17
   48398:	88005816 	blt	r17,zero,484fc <_realloc_r+0x1cc>
   4839c:	8c805736 	bltu	r17,r18,484fc <_realloc_r+0x1cc>
   483a0:	80c0300e 	bge	r16,r3,48464 <_realloc_r+0x134>
   483a4:	07000174 	movhi	fp,5
   483a8:	e703c404 	addi	fp,fp,3856
   483ac:	e1c00217 	ldw	r7,8(fp)
   483b0:	9c09883a 	add	r4,r19,r16
   483b4:	22000117 	ldw	r8,4(r4)
   483b8:	21c06326 	beq	r4,r7,48548 <_realloc_r+0x218>
   483bc:	017fff84 	movi	r5,-2
   483c0:	414a703a 	and	r5,r8,r5
   483c4:	214b883a 	add	r5,r4,r5
   483c8:	29800117 	ldw	r6,4(r5)
   483cc:	3180004c 	andi	r6,r6,1
   483d0:	30003f26 	beq	r6,zero,484d0 <_realloc_r+0x1a0>
   483d4:	1080004c 	andi	r2,r2,1
   483d8:	10008326 	beq	r2,zero,485e8 <_realloc_r+0x2b8>
   483dc:	900b883a 	mov	r5,r18
   483e0:	a009883a 	mov	r4,r20
   483e4:	0041a180 	call	41a18 <_malloc_r>
   483e8:	1025883a 	mov	r18,r2
   483ec:	10011e26 	beq	r2,zero,48868 <_realloc_r+0x538>
   483f0:	a93fff17 	ldw	r4,-4(r21)
   483f4:	10fffe04 	addi	r3,r2,-8
   483f8:	00bfff84 	movi	r2,-2
   483fc:	2084703a 	and	r2,r4,r2
   48400:	9885883a 	add	r2,r19,r2
   48404:	1880ee26 	beq	r3,r2,487c0 <_realloc_r+0x490>
   48408:	81bfff04 	addi	r6,r16,-4
   4840c:	00800904 	movi	r2,36
   48410:	1180b836 	bltu	r2,r6,486f4 <_realloc_r+0x3c4>
   48414:	00c004c4 	movi	r3,19
   48418:	19809636 	bltu	r3,r6,48674 <_realloc_r+0x344>
   4841c:	9005883a 	mov	r2,r18
   48420:	a807883a 	mov	r3,r21
   48424:	19000017 	ldw	r4,0(r3)
   48428:	11000015 	stw	r4,0(r2)
   4842c:	19000117 	ldw	r4,4(r3)
   48430:	11000115 	stw	r4,4(r2)
   48434:	18c00217 	ldw	r3,8(r3)
   48438:	10c00215 	stw	r3,8(r2)
   4843c:	a80b883a 	mov	r5,r21
   48440:	a009883a 	mov	r4,r20
   48444:	0040df00 	call	40df0 <_free_r>
   48448:	a009883a 	mov	r4,r20
   4844c:	004e3000 	call	4e300 <__malloc_unlock>
   48450:	9005883a 	mov	r2,r18
   48454:	00001206 	br	484a0 <_realloc_r+0x170>
   48458:	00c00404 	movi	r3,16
   4845c:	1823883a 	mov	r17,r3
   48460:	003fce06 	br	4839c <__alt_data_end+0xfffdc47c>
   48464:	a825883a 	mov	r18,r21
   48468:	8445c83a 	sub	r2,r16,r17
   4846c:	00c003c4 	movi	r3,15
   48470:	18802636 	bltu	r3,r2,4850c <_realloc_r+0x1dc>
   48474:	99800117 	ldw	r6,4(r19)
   48478:	9c07883a 	add	r3,r19,r16
   4847c:	3180004c 	andi	r6,r6,1
   48480:	3420b03a 	or	r16,r6,r16
   48484:	9c000115 	stw	r16,4(r19)
   48488:	18800117 	ldw	r2,4(r3)
   4848c:	10800054 	ori	r2,r2,1
   48490:	18800115 	stw	r2,4(r3)
   48494:	a009883a 	mov	r4,r20
   48498:	004e3000 	call	4e300 <__malloc_unlock>
   4849c:	9005883a 	mov	r2,r18
   484a0:	dfc00917 	ldw	ra,36(sp)
   484a4:	df000817 	ldw	fp,32(sp)
   484a8:	ddc00717 	ldw	r23,28(sp)
   484ac:	dd800617 	ldw	r22,24(sp)
   484b0:	dd400517 	ldw	r21,20(sp)
   484b4:	dd000417 	ldw	r20,16(sp)
   484b8:	dcc00317 	ldw	r19,12(sp)
   484bc:	dc800217 	ldw	r18,8(sp)
   484c0:	dc400117 	ldw	r17,4(sp)
   484c4:	dc000017 	ldw	r16,0(sp)
   484c8:	dec00a04 	addi	sp,sp,40
   484cc:	f800283a 	ret
   484d0:	017fff04 	movi	r5,-4
   484d4:	414a703a 	and	r5,r8,r5
   484d8:	814d883a 	add	r6,r16,r5
   484dc:	30c01f16 	blt	r6,r3,4855c <_realloc_r+0x22c>
   484e0:	20800317 	ldw	r2,12(r4)
   484e4:	20c00217 	ldw	r3,8(r4)
   484e8:	a825883a 	mov	r18,r21
   484ec:	3021883a 	mov	r16,r6
   484f0:	18800315 	stw	r2,12(r3)
   484f4:	10c00215 	stw	r3,8(r2)
   484f8:	003fdb06 	br	48468 <__alt_data_end+0xfffdc548>
   484fc:	00800304 	movi	r2,12
   48500:	a0800015 	stw	r2,0(r20)
   48504:	0005883a 	mov	r2,zero
   48508:	003fe506 	br	484a0 <__alt_data_end+0xfffdc580>
   4850c:	98c00117 	ldw	r3,4(r19)
   48510:	9c4b883a 	add	r5,r19,r17
   48514:	11000054 	ori	r4,r2,1
   48518:	18c0004c 	andi	r3,r3,1
   4851c:	1c62b03a 	or	r17,r3,r17
   48520:	9c400115 	stw	r17,4(r19)
   48524:	29000115 	stw	r4,4(r5)
   48528:	2885883a 	add	r2,r5,r2
   4852c:	10c00117 	ldw	r3,4(r2)
   48530:	29400204 	addi	r5,r5,8
   48534:	a009883a 	mov	r4,r20
   48538:	18c00054 	ori	r3,r3,1
   4853c:	10c00115 	stw	r3,4(r2)
   48540:	0040df00 	call	40df0 <_free_r>
   48544:	003fd306 	br	48494 <__alt_data_end+0xfffdc574>
   48548:	017fff04 	movi	r5,-4
   4854c:	414a703a 	and	r5,r8,r5
   48550:	89800404 	addi	r6,r17,16
   48554:	8151883a 	add	r8,r16,r5
   48558:	4180590e 	bge	r8,r6,486c0 <_realloc_r+0x390>
   4855c:	1080004c 	andi	r2,r2,1
   48560:	103f9e1e 	bne	r2,zero,483dc <__alt_data_end+0xfffdc4bc>
   48564:	adbffe17 	ldw	r22,-8(r21)
   48568:	00bfff04 	movi	r2,-4
   4856c:	9dadc83a 	sub	r22,r19,r22
   48570:	b1800117 	ldw	r6,4(r22)
   48574:	3084703a 	and	r2,r6,r2
   48578:	20002026 	beq	r4,zero,485fc <_realloc_r+0x2cc>
   4857c:	80af883a 	add	r23,r16,r2
   48580:	b96f883a 	add	r23,r23,r5
   48584:	21c05f26 	beq	r4,r7,48704 <_realloc_r+0x3d4>
   48588:	b8c01c16 	blt	r23,r3,485fc <_realloc_r+0x2cc>
   4858c:	20800317 	ldw	r2,12(r4)
   48590:	20c00217 	ldw	r3,8(r4)
   48594:	81bfff04 	addi	r6,r16,-4
   48598:	01000904 	movi	r4,36
   4859c:	18800315 	stw	r2,12(r3)
   485a0:	10c00215 	stw	r3,8(r2)
   485a4:	b0c00217 	ldw	r3,8(r22)
   485a8:	b0800317 	ldw	r2,12(r22)
   485ac:	b4800204 	addi	r18,r22,8
   485b0:	18800315 	stw	r2,12(r3)
   485b4:	10c00215 	stw	r3,8(r2)
   485b8:	21801b36 	bltu	r4,r6,48628 <_realloc_r+0x2f8>
   485bc:	008004c4 	movi	r2,19
   485c0:	1180352e 	bgeu	r2,r6,48698 <_realloc_r+0x368>
   485c4:	a8800017 	ldw	r2,0(r21)
   485c8:	b0800215 	stw	r2,8(r22)
   485cc:	a8800117 	ldw	r2,4(r21)
   485d0:	b0800315 	stw	r2,12(r22)
   485d4:	008006c4 	movi	r2,27
   485d8:	11807f36 	bltu	r2,r6,487d8 <_realloc_r+0x4a8>
   485dc:	b0800404 	addi	r2,r22,16
   485e0:	ad400204 	addi	r21,r21,8
   485e4:	00002d06 	br	4869c <_realloc_r+0x36c>
   485e8:	adbffe17 	ldw	r22,-8(r21)
   485ec:	00bfff04 	movi	r2,-4
   485f0:	9dadc83a 	sub	r22,r19,r22
   485f4:	b1000117 	ldw	r4,4(r22)
   485f8:	2084703a 	and	r2,r4,r2
   485fc:	b03f7726 	beq	r22,zero,483dc <__alt_data_end+0xfffdc4bc>
   48600:	80af883a 	add	r23,r16,r2
   48604:	b8ff7516 	blt	r23,r3,483dc <__alt_data_end+0xfffdc4bc>
   48608:	b0800317 	ldw	r2,12(r22)
   4860c:	b0c00217 	ldw	r3,8(r22)
   48610:	81bfff04 	addi	r6,r16,-4
   48614:	01000904 	movi	r4,36
   48618:	18800315 	stw	r2,12(r3)
   4861c:	10c00215 	stw	r3,8(r2)
   48620:	b4800204 	addi	r18,r22,8
   48624:	21bfe52e 	bgeu	r4,r6,485bc <__alt_data_end+0xfffdc69c>
   48628:	a80b883a 	mov	r5,r21
   4862c:	9009883a 	mov	r4,r18
   48630:	00470bc0 	call	470bc <memmove>
   48634:	b821883a 	mov	r16,r23
   48638:	b027883a 	mov	r19,r22
   4863c:	003f8a06 	br	48468 <__alt_data_end+0xfffdc548>
   48640:	300b883a 	mov	r5,r6
   48644:	dfc00917 	ldw	ra,36(sp)
   48648:	df000817 	ldw	fp,32(sp)
   4864c:	ddc00717 	ldw	r23,28(sp)
   48650:	dd800617 	ldw	r22,24(sp)
   48654:	dd400517 	ldw	r21,20(sp)
   48658:	dd000417 	ldw	r20,16(sp)
   4865c:	dcc00317 	ldw	r19,12(sp)
   48660:	dc800217 	ldw	r18,8(sp)
   48664:	dc400117 	ldw	r17,4(sp)
   48668:	dc000017 	ldw	r16,0(sp)
   4866c:	dec00a04 	addi	sp,sp,40
   48670:	0041a181 	jmpi	41a18 <_malloc_r>
   48674:	a8c00017 	ldw	r3,0(r21)
   48678:	90c00015 	stw	r3,0(r18)
   4867c:	a8c00117 	ldw	r3,4(r21)
   48680:	90c00115 	stw	r3,4(r18)
   48684:	00c006c4 	movi	r3,27
   48688:	19804536 	bltu	r3,r6,487a0 <_realloc_r+0x470>
   4868c:	90800204 	addi	r2,r18,8
   48690:	a8c00204 	addi	r3,r21,8
   48694:	003f6306 	br	48424 <__alt_data_end+0xfffdc504>
   48698:	9005883a 	mov	r2,r18
   4869c:	a8c00017 	ldw	r3,0(r21)
   486a0:	b821883a 	mov	r16,r23
   486a4:	b027883a 	mov	r19,r22
   486a8:	10c00015 	stw	r3,0(r2)
   486ac:	a8c00117 	ldw	r3,4(r21)
   486b0:	10c00115 	stw	r3,4(r2)
   486b4:	a8c00217 	ldw	r3,8(r21)
   486b8:	10c00215 	stw	r3,8(r2)
   486bc:	003f6a06 	br	48468 <__alt_data_end+0xfffdc548>
   486c0:	9c67883a 	add	r19,r19,r17
   486c4:	4445c83a 	sub	r2,r8,r17
   486c8:	e4c00215 	stw	r19,8(fp)
   486cc:	10800054 	ori	r2,r2,1
   486d0:	98800115 	stw	r2,4(r19)
   486d4:	a8bfff17 	ldw	r2,-4(r21)
   486d8:	a009883a 	mov	r4,r20
   486dc:	1080004c 	andi	r2,r2,1
   486e0:	1462b03a 	or	r17,r2,r17
   486e4:	ac7fff15 	stw	r17,-4(r21)
   486e8:	004e3000 	call	4e300 <__malloc_unlock>
   486ec:	a805883a 	mov	r2,r21
   486f0:	003f6b06 	br	484a0 <__alt_data_end+0xfffdc580>
   486f4:	a80b883a 	mov	r5,r21
   486f8:	9009883a 	mov	r4,r18
   486fc:	00470bc0 	call	470bc <memmove>
   48700:	003f4e06 	br	4843c <__alt_data_end+0xfffdc51c>
   48704:	89000404 	addi	r4,r17,16
   48708:	b93fbc16 	blt	r23,r4,485fc <__alt_data_end+0xfffdc6dc>
   4870c:	b0800317 	ldw	r2,12(r22)
   48710:	b0c00217 	ldw	r3,8(r22)
   48714:	81bfff04 	addi	r6,r16,-4
   48718:	01000904 	movi	r4,36
   4871c:	18800315 	stw	r2,12(r3)
   48720:	10c00215 	stw	r3,8(r2)
   48724:	b4800204 	addi	r18,r22,8
   48728:	21804336 	bltu	r4,r6,48838 <_realloc_r+0x508>
   4872c:	008004c4 	movi	r2,19
   48730:	11803f2e 	bgeu	r2,r6,48830 <_realloc_r+0x500>
   48734:	a8800017 	ldw	r2,0(r21)
   48738:	b0800215 	stw	r2,8(r22)
   4873c:	a8800117 	ldw	r2,4(r21)
   48740:	b0800315 	stw	r2,12(r22)
   48744:	008006c4 	movi	r2,27
   48748:	11803f36 	bltu	r2,r6,48848 <_realloc_r+0x518>
   4874c:	b0800404 	addi	r2,r22,16
   48750:	ad400204 	addi	r21,r21,8
   48754:	a8c00017 	ldw	r3,0(r21)
   48758:	10c00015 	stw	r3,0(r2)
   4875c:	a8c00117 	ldw	r3,4(r21)
   48760:	10c00115 	stw	r3,4(r2)
   48764:	a8c00217 	ldw	r3,8(r21)
   48768:	10c00215 	stw	r3,8(r2)
   4876c:	b447883a 	add	r3,r22,r17
   48770:	bc45c83a 	sub	r2,r23,r17
   48774:	e0c00215 	stw	r3,8(fp)
   48778:	10800054 	ori	r2,r2,1
   4877c:	18800115 	stw	r2,4(r3)
   48780:	b0800117 	ldw	r2,4(r22)
   48784:	a009883a 	mov	r4,r20
   48788:	1080004c 	andi	r2,r2,1
   4878c:	1462b03a 	or	r17,r2,r17
   48790:	b4400115 	stw	r17,4(r22)
   48794:	004e3000 	call	4e300 <__malloc_unlock>
   48798:	9005883a 	mov	r2,r18
   4879c:	003f4006 	br	484a0 <__alt_data_end+0xfffdc580>
   487a0:	a8c00217 	ldw	r3,8(r21)
   487a4:	90c00215 	stw	r3,8(r18)
   487a8:	a8c00317 	ldw	r3,12(r21)
   487ac:	90c00315 	stw	r3,12(r18)
   487b0:	30801126 	beq	r6,r2,487f8 <_realloc_r+0x4c8>
   487b4:	90800404 	addi	r2,r18,16
   487b8:	a8c00404 	addi	r3,r21,16
   487bc:	003f1906 	br	48424 <__alt_data_end+0xfffdc504>
   487c0:	90ffff17 	ldw	r3,-4(r18)
   487c4:	00bfff04 	movi	r2,-4
   487c8:	a825883a 	mov	r18,r21
   487cc:	1884703a 	and	r2,r3,r2
   487d0:	80a1883a 	add	r16,r16,r2
   487d4:	003f2406 	br	48468 <__alt_data_end+0xfffdc548>
   487d8:	a8800217 	ldw	r2,8(r21)
   487dc:	b0800415 	stw	r2,16(r22)
   487e0:	a8800317 	ldw	r2,12(r21)
   487e4:	b0800515 	stw	r2,20(r22)
   487e8:	31000a26 	beq	r6,r4,48814 <_realloc_r+0x4e4>
   487ec:	b0800604 	addi	r2,r22,24
   487f0:	ad400404 	addi	r21,r21,16
   487f4:	003fa906 	br	4869c <__alt_data_end+0xfffdc77c>
   487f8:	a9000417 	ldw	r4,16(r21)
   487fc:	90800604 	addi	r2,r18,24
   48800:	a8c00604 	addi	r3,r21,24
   48804:	91000415 	stw	r4,16(r18)
   48808:	a9000517 	ldw	r4,20(r21)
   4880c:	91000515 	stw	r4,20(r18)
   48810:	003f0406 	br	48424 <__alt_data_end+0xfffdc504>
   48814:	a8c00417 	ldw	r3,16(r21)
   48818:	ad400604 	addi	r21,r21,24
   4881c:	b0800804 	addi	r2,r22,32
   48820:	b0c00615 	stw	r3,24(r22)
   48824:	a8ffff17 	ldw	r3,-4(r21)
   48828:	b0c00715 	stw	r3,28(r22)
   4882c:	003f9b06 	br	4869c <__alt_data_end+0xfffdc77c>
   48830:	9005883a 	mov	r2,r18
   48834:	003fc706 	br	48754 <__alt_data_end+0xfffdc834>
   48838:	a80b883a 	mov	r5,r21
   4883c:	9009883a 	mov	r4,r18
   48840:	00470bc0 	call	470bc <memmove>
   48844:	003fc906 	br	4876c <__alt_data_end+0xfffdc84c>
   48848:	a8800217 	ldw	r2,8(r21)
   4884c:	b0800415 	stw	r2,16(r22)
   48850:	a8800317 	ldw	r2,12(r21)
   48854:	b0800515 	stw	r2,20(r22)
   48858:	31000726 	beq	r6,r4,48878 <_realloc_r+0x548>
   4885c:	b0800604 	addi	r2,r22,24
   48860:	ad400404 	addi	r21,r21,16
   48864:	003fbb06 	br	48754 <__alt_data_end+0xfffdc834>
   48868:	a009883a 	mov	r4,r20
   4886c:	004e3000 	call	4e300 <__malloc_unlock>
   48870:	0005883a 	mov	r2,zero
   48874:	003f0a06 	br	484a0 <__alt_data_end+0xfffdc580>
   48878:	a8c00417 	ldw	r3,16(r21)
   4887c:	ad400604 	addi	r21,r21,24
   48880:	b0800804 	addi	r2,r22,32
   48884:	b0c00615 	stw	r3,24(r22)
   48888:	a8ffff17 	ldw	r3,-4(r21)
   4888c:	b0c00715 	stw	r3,28(r22)
   48890:	003fb006 	br	48754 <__alt_data_end+0xfffdc834>

00048894 <__fpclassifyd>:
   48894:	00a00034 	movhi	r2,32768
   48898:	10bfffc4 	addi	r2,r2,-1
   4889c:	2884703a 	and	r2,r5,r2
   488a0:	10000726 	beq	r2,zero,488c0 <__fpclassifyd+0x2c>
   488a4:	00fffc34 	movhi	r3,65520
   488a8:	019ff834 	movhi	r6,32736
   488ac:	28c7883a 	add	r3,r5,r3
   488b0:	31bfffc4 	addi	r6,r6,-1
   488b4:	30c00536 	bltu	r6,r3,488cc <__fpclassifyd+0x38>
   488b8:	00800104 	movi	r2,4
   488bc:	f800283a 	ret
   488c0:	2000021e 	bne	r4,zero,488cc <__fpclassifyd+0x38>
   488c4:	00800084 	movi	r2,2
   488c8:	f800283a 	ret
   488cc:	00dffc34 	movhi	r3,32752
   488d0:	019ff834 	movhi	r6,32736
   488d4:	28cb883a 	add	r5,r5,r3
   488d8:	31bfffc4 	addi	r6,r6,-1
   488dc:	317ff62e 	bgeu	r6,r5,488b8 <__alt_data_end+0xfffdc998>
   488e0:	01400434 	movhi	r5,16
   488e4:	297fffc4 	addi	r5,r5,-1
   488e8:	28800236 	bltu	r5,r2,488f4 <__fpclassifyd+0x60>
   488ec:	008000c4 	movi	r2,3
   488f0:	f800283a 	ret
   488f4:	10c00226 	beq	r2,r3,48900 <__fpclassifyd+0x6c>
   488f8:	0005883a 	mov	r2,zero
   488fc:	f800283a 	ret
   48900:	2005003a 	cmpeq	r2,r4,zero
   48904:	f800283a 	ret

00048908 <strcmp>:
   48908:	2144b03a 	or	r2,r4,r5
   4890c:	108000cc 	andi	r2,r2,3
   48910:	1000171e 	bne	r2,zero,48970 <strcmp+0x68>
   48914:	20800017 	ldw	r2,0(r4)
   48918:	28c00017 	ldw	r3,0(r5)
   4891c:	10c0141e 	bne	r2,r3,48970 <strcmp+0x68>
   48920:	027fbff4 	movhi	r9,65279
   48924:	4a7fbfc4 	addi	r9,r9,-257
   48928:	0086303a 	nor	r3,zero,r2
   4892c:	02202074 	movhi	r8,32897
   48930:	1245883a 	add	r2,r2,r9
   48934:	42202004 	addi	r8,r8,-32640
   48938:	10c4703a 	and	r2,r2,r3
   4893c:	1204703a 	and	r2,r2,r8
   48940:	10000226 	beq	r2,zero,4894c <strcmp+0x44>
   48944:	00002306 	br	489d4 <strcmp+0xcc>
   48948:	1000221e 	bne	r2,zero,489d4 <strcmp+0xcc>
   4894c:	21000104 	addi	r4,r4,4
   48950:	20c00017 	ldw	r3,0(r4)
   48954:	29400104 	addi	r5,r5,4
   48958:	29800017 	ldw	r6,0(r5)
   4895c:	1a4f883a 	add	r7,r3,r9
   48960:	00c4303a 	nor	r2,zero,r3
   48964:	3884703a 	and	r2,r7,r2
   48968:	1204703a 	and	r2,r2,r8
   4896c:	19bff626 	beq	r3,r6,48948 <__alt_data_end+0xfffdca28>
   48970:	20800003 	ldbu	r2,0(r4)
   48974:	10c03fcc 	andi	r3,r2,255
   48978:	18c0201c 	xori	r3,r3,128
   4897c:	18ffe004 	addi	r3,r3,-128
   48980:	18000c26 	beq	r3,zero,489b4 <strcmp+0xac>
   48984:	29800007 	ldb	r6,0(r5)
   48988:	19800326 	beq	r3,r6,48998 <strcmp+0x90>
   4898c:	00001306 	br	489dc <strcmp+0xd4>
   48990:	29800007 	ldb	r6,0(r5)
   48994:	11800b1e 	bne	r2,r6,489c4 <strcmp+0xbc>
   48998:	21000044 	addi	r4,r4,1
   4899c:	20c00003 	ldbu	r3,0(r4)
   489a0:	29400044 	addi	r5,r5,1
   489a4:	18803fcc 	andi	r2,r3,255
   489a8:	1080201c 	xori	r2,r2,128
   489ac:	10bfe004 	addi	r2,r2,-128
   489b0:	103ff71e 	bne	r2,zero,48990 <__alt_data_end+0xfffdca70>
   489b4:	0007883a 	mov	r3,zero
   489b8:	28800003 	ldbu	r2,0(r5)
   489bc:	1885c83a 	sub	r2,r3,r2
   489c0:	f800283a 	ret
   489c4:	28800003 	ldbu	r2,0(r5)
   489c8:	18c03fcc 	andi	r3,r3,255
   489cc:	1885c83a 	sub	r2,r3,r2
   489d0:	f800283a 	ret
   489d4:	0005883a 	mov	r2,zero
   489d8:	f800283a 	ret
   489dc:	10c03fcc 	andi	r3,r2,255
   489e0:	003ff506 	br	489b8 <__alt_data_end+0xfffdca98>

000489e4 <__sprint_r.part.0>:
   489e4:	28801917 	ldw	r2,100(r5)
   489e8:	defff604 	addi	sp,sp,-40
   489ec:	dd400515 	stw	r21,20(sp)
   489f0:	dfc00915 	stw	ra,36(sp)
   489f4:	df000815 	stw	fp,32(sp)
   489f8:	ddc00715 	stw	r23,28(sp)
   489fc:	dd800615 	stw	r22,24(sp)
   48a00:	dd000415 	stw	r20,16(sp)
   48a04:	dcc00315 	stw	r19,12(sp)
   48a08:	dc800215 	stw	r18,8(sp)
   48a0c:	dc400115 	stw	r17,4(sp)
   48a10:	dc000015 	stw	r16,0(sp)
   48a14:	1088000c 	andi	r2,r2,8192
   48a18:	302b883a 	mov	r21,r6
   48a1c:	10002e26 	beq	r2,zero,48ad8 <__sprint_r.part.0+0xf4>
   48a20:	30800217 	ldw	r2,8(r6)
   48a24:	35800017 	ldw	r22,0(r6)
   48a28:	10002926 	beq	r2,zero,48ad0 <__sprint_r.part.0+0xec>
   48a2c:	2827883a 	mov	r19,r5
   48a30:	2029883a 	mov	r20,r4
   48a34:	b5c00104 	addi	r23,r22,4
   48a38:	04bfffc4 	movi	r18,-1
   48a3c:	bc400017 	ldw	r17,0(r23)
   48a40:	b4000017 	ldw	r16,0(r22)
   48a44:	0039883a 	mov	fp,zero
   48a48:	8822d0ba 	srli	r17,r17,2
   48a4c:	8800031e 	bne	r17,zero,48a5c <__sprint_r.part.0+0x78>
   48a50:	00001806 	br	48ab4 <__sprint_r.part.0+0xd0>
   48a54:	84000104 	addi	r16,r16,4
   48a58:	8f001526 	beq	r17,fp,48ab0 <__sprint_r.part.0+0xcc>
   48a5c:	81400017 	ldw	r5,0(r16)
   48a60:	980d883a 	mov	r6,r19
   48a64:	a009883a 	mov	r4,r20
   48a68:	004a31c0 	call	4a31c <_fputwc_r>
   48a6c:	e7000044 	addi	fp,fp,1
   48a70:	14bff81e 	bne	r2,r18,48a54 <__alt_data_end+0xfffdcb34>
   48a74:	9005883a 	mov	r2,r18
   48a78:	a8000215 	stw	zero,8(r21)
   48a7c:	a8000115 	stw	zero,4(r21)
   48a80:	dfc00917 	ldw	ra,36(sp)
   48a84:	df000817 	ldw	fp,32(sp)
   48a88:	ddc00717 	ldw	r23,28(sp)
   48a8c:	dd800617 	ldw	r22,24(sp)
   48a90:	dd400517 	ldw	r21,20(sp)
   48a94:	dd000417 	ldw	r20,16(sp)
   48a98:	dcc00317 	ldw	r19,12(sp)
   48a9c:	dc800217 	ldw	r18,8(sp)
   48aa0:	dc400117 	ldw	r17,4(sp)
   48aa4:	dc000017 	ldw	r16,0(sp)
   48aa8:	dec00a04 	addi	sp,sp,40
   48aac:	f800283a 	ret
   48ab0:	a8800217 	ldw	r2,8(r21)
   48ab4:	8c63883a 	add	r17,r17,r17
   48ab8:	8c63883a 	add	r17,r17,r17
   48abc:	1445c83a 	sub	r2,r2,r17
   48ac0:	a8800215 	stw	r2,8(r21)
   48ac4:	b5800204 	addi	r22,r22,8
   48ac8:	bdc00204 	addi	r23,r23,8
   48acc:	103fdb1e 	bne	r2,zero,48a3c <__alt_data_end+0xfffdcb1c>
   48ad0:	0005883a 	mov	r2,zero
   48ad4:	003fe806 	br	48a78 <__alt_data_end+0xfffdcb58>
   48ad8:	00468380 	call	46838 <__sfvwrite_r>
   48adc:	003fe606 	br	48a78 <__alt_data_end+0xfffdcb58>

00048ae0 <__sprint_r>:
   48ae0:	30c00217 	ldw	r3,8(r6)
   48ae4:	18000126 	beq	r3,zero,48aec <__sprint_r+0xc>
   48ae8:	00489e41 	jmpi	489e4 <__sprint_r.part.0>
   48aec:	30000115 	stw	zero,4(r6)
   48af0:	0005883a 	mov	r2,zero
   48af4:	f800283a 	ret

00048af8 <___vfiprintf_internal_r>:
   48af8:	deffca04 	addi	sp,sp,-216
   48afc:	dd403115 	stw	r21,196(sp)
   48b00:	dfc03515 	stw	ra,212(sp)
   48b04:	df003415 	stw	fp,208(sp)
   48b08:	ddc03315 	stw	r23,204(sp)
   48b0c:	dd803215 	stw	r22,200(sp)
   48b10:	dd003015 	stw	r20,192(sp)
   48b14:	dcc02f15 	stw	r19,188(sp)
   48b18:	dc802e15 	stw	r18,184(sp)
   48b1c:	dc402d15 	stw	r17,180(sp)
   48b20:	dc002c15 	stw	r16,176(sp)
   48b24:	d9002115 	stw	r4,132(sp)
   48b28:	d9402015 	stw	r5,128(sp)
   48b2c:	d9c02215 	stw	r7,136(sp)
   48b30:	302b883a 	mov	r21,r6
   48b34:	20000226 	beq	r4,zero,48b40 <___vfiprintf_internal_r+0x48>
   48b38:	20800e17 	ldw	r2,56(r4)
   48b3c:	1000cf26 	beq	r2,zero,48e7c <___vfiprintf_internal_r+0x384>
   48b40:	d8c02017 	ldw	r3,128(sp)
   48b44:	1880030b 	ldhu	r2,12(r3)
   48b48:	10c8000c 	andi	r3,r2,8192
   48b4c:	1800071e 	bne	r3,zero,48b6c <___vfiprintf_internal_r+0x74>
   48b50:	d9402017 	ldw	r5,128(sp)
   48b54:	00f7ffc4 	movi	r3,-8193
   48b58:	10880014 	ori	r2,r2,8192
   48b5c:	29001917 	ldw	r4,100(r5)
   48b60:	2880030d 	sth	r2,12(r5)
   48b64:	20c6703a 	and	r3,r4,r3
   48b68:	28c01915 	stw	r3,100(r5)
   48b6c:	10c0020c 	andi	r3,r2,8
   48b70:	1800a526 	beq	r3,zero,48e08 <___vfiprintf_internal_r+0x310>
   48b74:	d9002017 	ldw	r4,128(sp)
   48b78:	20c00417 	ldw	r3,16(r4)
   48b7c:	1800a226 	beq	r3,zero,48e08 <___vfiprintf_internal_r+0x310>
   48b80:	1080068c 	andi	r2,r2,26
   48b84:	00c00284 	movi	r3,10
   48b88:	10c0a826 	beq	r2,r3,48e2c <___vfiprintf_internal_r+0x334>
   48b8c:	d9001a04 	addi	r4,sp,104
   48b90:	d94019c4 	addi	r5,sp,103
   48b94:	04800174 	movhi	r18,5
   48b98:	2145c83a 	sub	r2,r4,r5
   48b9c:	94826204 	addi	r18,r18,2440
   48ba0:	d9001e15 	stw	r4,120(sp)
   48ba4:	d9401f15 	stw	r5,124(sp)
   48ba8:	dec01a15 	stw	sp,104(sp)
   48bac:	d8001c15 	stw	zero,112(sp)
   48bb0:	d8001b15 	stw	zero,108(sp)
   48bb4:	d811883a 	mov	r8,sp
   48bb8:	d8002615 	stw	zero,152(sp)
   48bbc:	d8002415 	stw	zero,144(sp)
   48bc0:	d8802815 	stw	r2,160(sp)
   48bc4:	a82d883a 	mov	r22,r21
   48bc8:	b0800007 	ldb	r2,0(r22)
   48bcc:	10040d26 	beq	r2,zero,49c04 <___vfiprintf_internal_r+0x110c>
   48bd0:	00c00944 	movi	r3,37
   48bd4:	b029883a 	mov	r20,r22
   48bd8:	10c0021e 	bne	r2,r3,48be4 <___vfiprintf_internal_r+0xec>
   48bdc:	00001606 	br	48c38 <___vfiprintf_internal_r+0x140>
   48be0:	10c00326 	beq	r2,r3,48bf0 <___vfiprintf_internal_r+0xf8>
   48be4:	a5000044 	addi	r20,r20,1
   48be8:	a0800007 	ldb	r2,0(r20)
   48bec:	103ffc1e 	bne	r2,zero,48be0 <__alt_data_end+0xfffdccc0>
   48bf0:	a5a1c83a 	sub	r16,r20,r22
   48bf4:	80001026 	beq	r16,zero,48c38 <___vfiprintf_internal_r+0x140>
   48bf8:	d8c01c17 	ldw	r3,112(sp)
   48bfc:	d8801b17 	ldw	r2,108(sp)
   48c00:	45800015 	stw	r22,0(r8)
   48c04:	80c7883a 	add	r3,r16,r3
   48c08:	10800044 	addi	r2,r2,1
   48c0c:	44000115 	stw	r16,4(r8)
   48c10:	d8c01c15 	stw	r3,112(sp)
   48c14:	d8801b15 	stw	r2,108(sp)
   48c18:	010001c4 	movi	r4,7
   48c1c:	2080750e 	bge	r4,r2,48df4 <___vfiprintf_internal_r+0x2fc>
   48c20:	1803951e 	bne	r3,zero,49a78 <___vfiprintf_internal_r+0xf80>
   48c24:	d8c02417 	ldw	r3,144(sp)
   48c28:	d8001b15 	stw	zero,108(sp)
   48c2c:	d811883a 	mov	r8,sp
   48c30:	1c07883a 	add	r3,r3,r16
   48c34:	d8c02415 	stw	r3,144(sp)
   48c38:	a0800007 	ldb	r2,0(r20)
   48c3c:	1002e026 	beq	r2,zero,497c0 <___vfiprintf_internal_r+0xcc8>
   48c40:	a5800044 	addi	r22,r20,1
   48c44:	a0c00047 	ldb	r3,1(r20)
   48c48:	d8001d85 	stb	zero,118(sp)
   48c4c:	0027883a 	mov	r19,zero
   48c50:	d8002305 	stb	zero,140(sp)
   48c54:	043fffc4 	movi	r16,-1
   48c58:	d8002515 	stw	zero,148(sp)
   48c5c:	0023883a 	mov	r17,zero
   48c60:	05001604 	movi	r20,88
   48c64:	05400244 	movi	r21,9
   48c68:	402f883a 	mov	r23,r8
   48c6c:	b5800044 	addi	r22,r22,1
   48c70:	18bff804 	addi	r2,r3,-32
   48c74:	a0827736 	bltu	r20,r2,49654 <___vfiprintf_internal_r+0xb5c>
   48c78:	100490ba 	slli	r2,r2,2
   48c7c:	01000174 	movhi	r4,5
   48c80:	21232404 	addi	r4,r4,-29552
   48c84:	1105883a 	add	r2,r2,r4
   48c88:	10800017 	ldw	r2,0(r2)
   48c8c:	1000683a 	jmp	r2
   48c90:	00049354 	movui	zero,4685
   48c94:	00049654 	movui	zero,4697
   48c98:	00049654 	movui	zero,4697
   48c9c:	00049370 	cmpltui	zero,zero,4685
   48ca0:	00049654 	movui	zero,4697
   48ca4:	00049654 	movui	zero,4697
   48ca8:	00049654 	movui	zero,4697
   48cac:	00049654 	movui	zero,4697
   48cb0:	00049654 	movui	zero,4697
   48cb4:	00049654 	movui	zero,4697
   48cb8:	00049578 	rdprs	zero,zero,4693
   48cbc:	0004959c 	xori	zero,zero,4694
   48cc0:	00049654 	movui	zero,4697
   48cc4:	00048e94 	movui	zero,4666
   48cc8:	000495b0 	cmpltui	zero,zero,4694
   48ccc:	00049654 	movui	zero,4697
   48cd0:	0004937c 	xorhi	zero,zero,4685
   48cd4:	00049388 	cmpgei	zero,zero,4686
   48cd8:	00049388 	cmpgei	zero,zero,4686
   48cdc:	00049388 	cmpgei	zero,zero,4686
   48ce0:	00049388 	cmpgei	zero,zero,4686
   48ce4:	00049388 	cmpgei	zero,zero,4686
   48ce8:	00049388 	cmpgei	zero,zero,4686
   48cec:	00049388 	cmpgei	zero,zero,4686
   48cf0:	00049388 	cmpgei	zero,zero,4686
   48cf4:	00049388 	cmpgei	zero,zero,4686
   48cf8:	00049654 	movui	zero,4697
   48cfc:	00049654 	movui	zero,4697
   48d00:	00049654 	movui	zero,4697
   48d04:	00049654 	movui	zero,4697
   48d08:	00049654 	movui	zero,4697
   48d0c:	00049654 	movui	zero,4697
   48d10:	00049654 	movui	zero,4697
   48d14:	00049654 	movui	zero,4697
   48d18:	00049654 	movui	zero,4697
   48d1c:	00049654 	movui	zero,4697
   48d20:	000493c8 	cmpgei	zero,zero,4687
   48d24:	00049654 	movui	zero,4697
   48d28:	00049654 	movui	zero,4697
   48d2c:	00049654 	movui	zero,4697
   48d30:	00049654 	movui	zero,4697
   48d34:	00049654 	movui	zero,4697
   48d38:	00049654 	movui	zero,4697
   48d3c:	00049654 	movui	zero,4697
   48d40:	00049654 	movui	zero,4697
   48d44:	00049654 	movui	zero,4697
   48d48:	00049654 	movui	zero,4697
   48d4c:	00049404 	movi	zero,4688
   48d50:	00049654 	movui	zero,4697
   48d54:	00049654 	movui	zero,4697
   48d58:	00049654 	movui	zero,4697
   48d5c:	00049654 	movui	zero,4697
   48d60:	00049654 	movui	zero,4697
   48d64:	00049460 	cmpeqi	zero,zero,4689
   48d68:	00049654 	movui	zero,4697
   48d6c:	00049654 	movui	zero,4697
   48d70:	000494d4 	movui	zero,4691
   48d74:	00049654 	movui	zero,4697
   48d78:	00049654 	movui	zero,4697
   48d7c:	00049654 	movui	zero,4697
   48d80:	00049654 	movui	zero,4697
   48d84:	00049654 	movui	zero,4697
   48d88:	00049654 	movui	zero,4697
   48d8c:	00049654 	movui	zero,4697
   48d90:	00049654 	movui	zero,4697
   48d94:	00049654 	movui	zero,4697
   48d98:	00049654 	movui	zero,4697
   48d9c:	0004927c 	xorhi	zero,zero,4681
   48da0:	000492ac 	andhi	zero,zero,4682
   48da4:	00049654 	movui	zero,4697
   48da8:	00049654 	movui	zero,4697
   48dac:	00049654 	movui	zero,4697
   48db0:	000495fc 	xorhi	zero,zero,4695
   48db4:	000492ac 	andhi	zero,zero,4682
   48db8:	00049654 	movui	zero,4697
   48dbc:	00049654 	movui	zero,4697
   48dc0:	00049154 	movui	zero,4677
   48dc4:	00049654 	movui	zero,4697
   48dc8:	00049168 	cmpgeui	zero,zero,4677
   48dcc:	000491a0 	cmpeqi	zero,zero,4678
   48dd0:	00048ea0 	cmpeqi	zero,zero,4666
   48dd4:	00049148 	cmpgei	zero,zero,4677
   48dd8:	00049654 	movui	zero,4697
   48ddc:	00049514 	movui	zero,4692
   48de0:	00049654 	movui	zero,4697
   48de4:	00049560 	cmpeqi	zero,zero,4693
   48de8:	00049654 	movui	zero,4697
   48dec:	00049654 	movui	zero,4697
   48df0:	00049224 	muli	zero,zero,4680
   48df4:	42000204 	addi	r8,r8,8
   48df8:	d8c02417 	ldw	r3,144(sp)
   48dfc:	1c07883a 	add	r3,r3,r16
   48e00:	d8c02415 	stw	r3,144(sp)
   48e04:	003f8c06 	br	48c38 <__alt_data_end+0xfffdcd18>
   48e08:	d9402017 	ldw	r5,128(sp)
   48e0c:	d9002117 	ldw	r4,132(sp)
   48e10:	0044d340 	call	44d34 <__swsetup_r>
   48e14:	1003c11e 	bne	r2,zero,49d1c <___vfiprintf_internal_r+0x1224>
   48e18:	d9402017 	ldw	r5,128(sp)
   48e1c:	00c00284 	movi	r3,10
   48e20:	2880030b 	ldhu	r2,12(r5)
   48e24:	1080068c 	andi	r2,r2,26
   48e28:	10ff581e 	bne	r2,r3,48b8c <__alt_data_end+0xfffdcc6c>
   48e2c:	d8c02017 	ldw	r3,128(sp)
   48e30:	1880038f 	ldh	r2,14(r3)
   48e34:	103f5516 	blt	r2,zero,48b8c <__alt_data_end+0xfffdcc6c>
   48e38:	d9c02217 	ldw	r7,136(sp)
   48e3c:	d9002117 	ldw	r4,132(sp)
   48e40:	a80d883a 	mov	r6,r21
   48e44:	180b883a 	mov	r5,r3
   48e48:	004a0200 	call	4a020 <__sbprintf>
   48e4c:	dfc03517 	ldw	ra,212(sp)
   48e50:	df003417 	ldw	fp,208(sp)
   48e54:	ddc03317 	ldw	r23,204(sp)
   48e58:	dd803217 	ldw	r22,200(sp)
   48e5c:	dd403117 	ldw	r21,196(sp)
   48e60:	dd003017 	ldw	r20,192(sp)
   48e64:	dcc02f17 	ldw	r19,188(sp)
   48e68:	dc802e17 	ldw	r18,184(sp)
   48e6c:	dc402d17 	ldw	r17,180(sp)
   48e70:	dc002c17 	ldw	r16,176(sp)
   48e74:	dec03604 	addi	sp,sp,216
   48e78:	f800283a 	ret
   48e7c:	0040b240 	call	40b24 <__sinit>
   48e80:	003f2f06 	br	48b40 <__alt_data_end+0xfffdcc20>
   48e84:	d8c02517 	ldw	r3,148(sp)
   48e88:	d8802215 	stw	r2,136(sp)
   48e8c:	00c7c83a 	sub	r3,zero,r3
   48e90:	d8c02515 	stw	r3,148(sp)
   48e94:	8c400114 	ori	r17,r17,4
   48e98:	b0c00007 	ldb	r3,0(r22)
   48e9c:	003f7306 	br	48c6c <__alt_data_end+0xfffdcd4c>
   48ea0:	00800c04 	movi	r2,48
   48ea4:	d9402217 	ldw	r5,136(sp)
   48ea8:	d8801d05 	stb	r2,116(sp)
   48eac:	00801e04 	movi	r2,120
   48eb0:	d8801d45 	stb	r2,117(sp)
   48eb4:	d8001d85 	stb	zero,118(sp)
   48eb8:	b811883a 	mov	r8,r23
   48ebc:	28c00104 	addi	r3,r5,4
   48ec0:	2cc00017 	ldw	r19,0(r5)
   48ec4:	0029883a 	mov	r20,zero
   48ec8:	88800094 	ori	r2,r17,2
   48ecc:	80032516 	blt	r16,zero,49b64 <___vfiprintf_internal_r+0x106c>
   48ed0:	00bfdfc4 	movi	r2,-129
   48ed4:	88a2703a 	and	r17,r17,r2
   48ed8:	d8c02215 	stw	r3,136(sp)
   48edc:	8c400094 	ori	r17,r17,2
   48ee0:	98032a1e 	bne	r19,zero,49b8c <___vfiprintf_internal_r+0x1094>
   48ee4:	00800174 	movhi	r2,5
   48ee8:	10820204 	addi	r2,r2,2056
   48eec:	d8802615 	stw	r2,152(sp)
   48ef0:	002b883a 	mov	r21,zero
   48ef4:	8001741e 	bne	r16,zero,494c8 <___vfiprintf_internal_r+0x9d0>
   48ef8:	0021883a 	mov	r16,zero
   48efc:	0029883a 	mov	r20,zero
   48f00:	ddc01a04 	addi	r23,sp,104
   48f04:	8027883a 	mov	r19,r16
   48f08:	8500010e 	bge	r16,r20,48f10 <___vfiprintf_internal_r+0x418>
   48f0c:	a027883a 	mov	r19,r20
   48f10:	ad403fcc 	andi	r21,r21,255
   48f14:	ad40201c 	xori	r21,r21,128
   48f18:	ad7fe004 	addi	r21,r21,-128
   48f1c:	a8000126 	beq	r21,zero,48f24 <___vfiprintf_internal_r+0x42c>
   48f20:	9cc00044 	addi	r19,r19,1
   48f24:	89c0008c 	andi	r7,r17,2
   48f28:	38000126 	beq	r7,zero,48f30 <___vfiprintf_internal_r+0x438>
   48f2c:	9cc00084 	addi	r19,r19,2
   48f30:	88c0210c 	andi	r3,r17,132
   48f34:	1801dd1e 	bne	r3,zero,496ac <___vfiprintf_internal_r+0xbb4>
   48f38:	d9402517 	ldw	r5,148(sp)
   48f3c:	2cebc83a 	sub	r21,r5,r19
   48f40:	0541da0e 	bge	zero,r21,496ac <___vfiprintf_internal_r+0xbb4>
   48f44:	07000404 	movi	fp,16
   48f48:	d8801c17 	ldw	r2,112(sp)
   48f4c:	e543be0e 	bge	fp,r21,49e48 <___vfiprintf_internal_r+0x1350>
   48f50:	01400174 	movhi	r5,5
   48f54:	29426604 	addi	r5,r5,2456
   48f58:	dc002715 	stw	r16,156(sp)
   48f5c:	d9801b17 	ldw	r6,108(sp)
   48f60:	a821883a 	mov	r16,r21
   48f64:	d9402315 	stw	r5,140(sp)
   48f68:	028001c4 	movi	r10,7
   48f6c:	d9c02915 	stw	r7,164(sp)
   48f70:	182b883a 	mov	r21,r3
   48f74:	00000506 	br	48f8c <___vfiprintf_internal_r+0x494>
   48f78:	31000084 	addi	r4,r6,2
   48f7c:	42000204 	addi	r8,r8,8
   48f80:	180d883a 	mov	r6,r3
   48f84:	843ffc04 	addi	r16,r16,-16
   48f88:	e4000f0e 	bge	fp,r16,48fc8 <___vfiprintf_internal_r+0x4d0>
   48f8c:	01000174 	movhi	r4,5
   48f90:	10800404 	addi	r2,r2,16
   48f94:	30c00044 	addi	r3,r6,1
   48f98:	21026604 	addi	r4,r4,2456
   48f9c:	41000015 	stw	r4,0(r8)
   48fa0:	47000115 	stw	fp,4(r8)
   48fa4:	d8801c15 	stw	r2,112(sp)
   48fa8:	d8c01b15 	stw	r3,108(sp)
   48fac:	50fff20e 	bge	r10,r3,48f78 <__alt_data_end+0xfffdd058>
   48fb0:	1001b21e 	bne	r2,zero,4967c <___vfiprintf_internal_r+0xb84>
   48fb4:	843ffc04 	addi	r16,r16,-16
   48fb8:	000d883a 	mov	r6,zero
   48fbc:	01000044 	movi	r4,1
   48fc0:	d811883a 	mov	r8,sp
   48fc4:	e43ff116 	blt	fp,r16,48f8c <__alt_data_end+0xfffdd06c>
   48fc8:	a807883a 	mov	r3,r21
   48fcc:	d9c02917 	ldw	r7,164(sp)
   48fd0:	802b883a 	mov	r21,r16
   48fd4:	dc002717 	ldw	r16,156(sp)
   48fd8:	d9402317 	ldw	r5,140(sp)
   48fdc:	a885883a 	add	r2,r21,r2
   48fe0:	45400115 	stw	r21,4(r8)
   48fe4:	41400015 	stw	r5,0(r8)
   48fe8:	d8801c15 	stw	r2,112(sp)
   48fec:	d9001b15 	stw	r4,108(sp)
   48ff0:	014001c4 	movi	r5,7
   48ff4:	29026216 	blt	r5,r4,49980 <___vfiprintf_internal_r+0xe88>
   48ff8:	d9801d87 	ldb	r6,118(sp)
   48ffc:	42000204 	addi	r8,r8,8
   49000:	21400044 	addi	r5,r4,1
   49004:	3001ae1e 	bne	r6,zero,496c0 <___vfiprintf_internal_r+0xbc8>
   49008:	3801bb26 	beq	r7,zero,496f8 <___vfiprintf_internal_r+0xc00>
   4900c:	d9001d04 	addi	r4,sp,116
   49010:	10800084 	addi	r2,r2,2
   49014:	41000015 	stw	r4,0(r8)
   49018:	01000084 	movi	r4,2
   4901c:	41000115 	stw	r4,4(r8)
   49020:	d8801c15 	stw	r2,112(sp)
   49024:	d9401b15 	stw	r5,108(sp)
   49028:	010001c4 	movi	r4,7
   4902c:	2142680e 	bge	r4,r5,499d0 <___vfiprintf_internal_r+0xed8>
   49030:	1002b11e 	bne	r2,zero,49af8 <___vfiprintf_internal_r+0x1000>
   49034:	01802004 	movi	r6,128
   49038:	01400044 	movi	r5,1
   4903c:	0009883a 	mov	r4,zero
   49040:	d811883a 	mov	r8,sp
   49044:	1981ae1e 	bne	r3,r6,49700 <___vfiprintf_internal_r+0xc08>
   49048:	d8c02517 	ldw	r3,148(sp)
   4904c:	1cf9c83a 	sub	fp,r3,r19
   49050:	0701ab0e 	bge	zero,fp,49700 <___vfiprintf_internal_r+0xc08>
   49054:	05400404 	movi	r21,16
   49058:	af03a90e 	bge	r21,fp,49f00 <___vfiprintf_internal_r+0x1408>
   4905c:	01400174 	movhi	r5,5
   49060:	29426204 	addi	r5,r5,2440
   49064:	d9402315 	stw	r5,140(sp)
   49068:	01c001c4 	movi	r7,7
   4906c:	00000506 	br	49084 <___vfiprintf_internal_r+0x58c>
   49070:	21800084 	addi	r6,r4,2
   49074:	42000204 	addi	r8,r8,8
   49078:	1809883a 	mov	r4,r3
   4907c:	e73ffc04 	addi	fp,fp,-16
   49080:	af000d0e 	bge	r21,fp,490b8 <___vfiprintf_internal_r+0x5c0>
   49084:	10800404 	addi	r2,r2,16
   49088:	20c00044 	addi	r3,r4,1
   4908c:	44800015 	stw	r18,0(r8)
   49090:	45400115 	stw	r21,4(r8)
   49094:	d8801c15 	stw	r2,112(sp)
   49098:	d8c01b15 	stw	r3,108(sp)
   4909c:	38fff40e 	bge	r7,r3,49070 <__alt_data_end+0xfffdd150>
   490a0:	10022b1e 	bne	r2,zero,49950 <___vfiprintf_internal_r+0xe58>
   490a4:	e73ffc04 	addi	fp,fp,-16
   490a8:	01800044 	movi	r6,1
   490ac:	0009883a 	mov	r4,zero
   490b0:	d811883a 	mov	r8,sp
   490b4:	af3ff316 	blt	r21,fp,49084 <__alt_data_end+0xfffdd164>
   490b8:	d8c02317 	ldw	r3,140(sp)
   490bc:	1705883a 	add	r2,r2,fp
   490c0:	47000115 	stw	fp,4(r8)
   490c4:	40c00015 	stw	r3,0(r8)
   490c8:	d8801c15 	stw	r2,112(sp)
   490cc:	d9801b15 	stw	r6,108(sp)
   490d0:	00c001c4 	movi	r3,7
   490d4:	19829416 	blt	r3,r6,49b28 <___vfiprintf_internal_r+0x1030>
   490d8:	8521c83a 	sub	r16,r16,r20
   490dc:	42000204 	addi	r8,r8,8
   490e0:	31400044 	addi	r5,r6,1
   490e4:	3009883a 	mov	r4,r6
   490e8:	04018716 	blt	zero,r16,49708 <___vfiprintf_internal_r+0xc10>
   490ec:	a085883a 	add	r2,r20,r2
   490f0:	45c00015 	stw	r23,0(r8)
   490f4:	45000115 	stw	r20,4(r8)
   490f8:	d8801c15 	stw	r2,112(sp)
   490fc:	d9401b15 	stw	r5,108(sp)
   49100:	00c001c4 	movi	r3,7
   49104:	1941c20e 	bge	r3,r5,49810 <___vfiprintf_internal_r+0xd18>
   49108:	1002531e 	bne	r2,zero,49a58 <___vfiprintf_internal_r+0xf60>
   4910c:	d8001b15 	stw	zero,108(sp)
   49110:	8c40010c 	andi	r17,r17,4
   49114:	88023226 	beq	r17,zero,499e0 <___vfiprintf_internal_r+0xee8>
   49118:	d9002517 	ldw	r4,148(sp)
   4911c:	24e3c83a 	sub	r17,r4,r19
   49120:	04432916 	blt	zero,r17,49dc8 <___vfiprintf_internal_r+0x12d0>
   49124:	d8802517 	ldw	r2,148(sp)
   49128:	14c0010e 	bge	r2,r19,49130 <___vfiprintf_internal_r+0x638>
   4912c:	9805883a 	mov	r2,r19
   49130:	d8c02417 	ldw	r3,144(sp)
   49134:	1887883a 	add	r3,r3,r2
   49138:	d8c02415 	stw	r3,144(sp)
   4913c:	d8001b15 	stw	zero,108(sp)
   49140:	d811883a 	mov	r8,sp
   49144:	003ea006 	br	48bc8 <__alt_data_end+0xfffdcca8>
   49148:	8c400814 	ori	r17,r17,32
   4914c:	b0c00007 	ldb	r3,0(r22)
   49150:	003ec606 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49154:	b0c00007 	ldb	r3,0(r22)
   49158:	00801b04 	movi	r2,108
   4915c:	18832026 	beq	r3,r2,49de0 <___vfiprintf_internal_r+0x12e8>
   49160:	8c400414 	ori	r17,r17,16
   49164:	003ec106 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49168:	9cc03fcc 	andi	r19,r19,255
   4916c:	b811883a 	mov	r8,r23
   49170:	9803981e 	bne	r19,zero,49fd4 <___vfiprintf_internal_r+0x14dc>
   49174:	8880080c 	andi	r2,r17,32
   49178:	1002be26 	beq	r2,zero,49c74 <___vfiprintf_internal_r+0x117c>
   4917c:	d9002217 	ldw	r4,136(sp)
   49180:	d9402417 	ldw	r5,144(sp)
   49184:	20800017 	ldw	r2,0(r4)
   49188:	2807d7fa 	srai	r3,r5,31
   4918c:	21000104 	addi	r4,r4,4
   49190:	d9002215 	stw	r4,136(sp)
   49194:	11400015 	stw	r5,0(r2)
   49198:	10c00115 	stw	r3,4(r2)
   4919c:	003e8a06 	br	48bc8 <__alt_data_end+0xfffdcca8>
   491a0:	9cc03fcc 	andi	r19,r19,255
   491a4:	b811883a 	mov	r8,r23
   491a8:	9803871e 	bne	r19,zero,49fc8 <___vfiprintf_internal_r+0x14d0>
   491ac:	8880080c 	andi	r2,r17,32
   491b0:	10009a26 	beq	r2,zero,4941c <___vfiprintf_internal_r+0x924>
   491b4:	d9002217 	ldw	r4,136(sp)
   491b8:	d8001d85 	stb	zero,118(sp)
   491bc:	20800204 	addi	r2,r4,8
   491c0:	24c00017 	ldw	r19,0(r4)
   491c4:	25000117 	ldw	r20,4(r4)
   491c8:	8002a416 	blt	r16,zero,49c5c <___vfiprintf_internal_r+0x1164>
   491cc:	013fdfc4 	movi	r4,-129
   491d0:	9d06b03a 	or	r3,r19,r20
   491d4:	d8802215 	stw	r2,136(sp)
   491d8:	8922703a 	and	r17,r17,r4
   491dc:	18009b26 	beq	r3,zero,4944c <___vfiprintf_internal_r+0x954>
   491e0:	002b883a 	mov	r21,zero
   491e4:	ddc01a04 	addi	r23,sp,104
   491e8:	9806d0fa 	srli	r3,r19,3
   491ec:	a008977a 	slli	r4,r20,29
   491f0:	a028d0fa 	srli	r20,r20,3
   491f4:	9cc001cc 	andi	r19,r19,7
   491f8:	98800c04 	addi	r2,r19,48
   491fc:	bdffffc4 	addi	r23,r23,-1
   49200:	20e6b03a 	or	r19,r4,r3
   49204:	b8800005 	stb	r2,0(r23)
   49208:	9d06b03a 	or	r3,r19,r20
   4920c:	183ff61e 	bne	r3,zero,491e8 <__alt_data_end+0xfffdd2c8>
   49210:	88c0004c 	andi	r3,r17,1
   49214:	18021f1e 	bne	r3,zero,49a94 <___vfiprintf_internal_r+0xf9c>
   49218:	d9401e17 	ldw	r5,120(sp)
   4921c:	2de9c83a 	sub	r20,r5,r23
   49220:	003f3806 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49224:	9cc03fcc 	andi	r19,r19,255
   49228:	b811883a 	mov	r8,r23
   4922c:	98034f1e 	bne	r19,zero,49f6c <___vfiprintf_internal_r+0x1474>
   49230:	00800174 	movhi	r2,5
   49234:	10820204 	addi	r2,r2,2056
   49238:	d8802615 	stw	r2,152(sp)
   4923c:	8880080c 	andi	r2,r17,32
   49240:	1000ac26 	beq	r2,zero,494f4 <___vfiprintf_internal_r+0x9fc>
   49244:	d9002217 	ldw	r4,136(sp)
   49248:	24c00017 	ldw	r19,0(r4)
   4924c:	25000117 	ldw	r20,4(r4)
   49250:	21000204 	addi	r4,r4,8
   49254:	d9002215 	stw	r4,136(sp)
   49258:	8880004c 	andi	r2,r17,1
   4925c:	1001e726 	beq	r2,zero,499fc <___vfiprintf_internal_r+0xf04>
   49260:	9d04b03a 	or	r2,r19,r20
   49264:	10025c1e 	bne	r2,zero,49bd8 <___vfiprintf_internal_r+0x10e0>
   49268:	d8001d85 	stb	zero,118(sp)
   4926c:	80024416 	blt	r16,zero,49b80 <___vfiprintf_internal_r+0x1088>
   49270:	00bfdfc4 	movi	r2,-129
   49274:	88a2703a 	and	r17,r17,r2
   49278:	003f1d06 	br	48ef0 <__alt_data_end+0xfffdcfd0>
   4927c:	d8c02217 	ldw	r3,136(sp)
   49280:	04c00044 	movi	r19,1
   49284:	b811883a 	mov	r8,r23
   49288:	18800017 	ldw	r2,0(r3)
   4928c:	18c00104 	addi	r3,r3,4
   49290:	d8001d85 	stb	zero,118(sp)
   49294:	d8801005 	stb	r2,64(sp)
   49298:	d8c02215 	stw	r3,136(sp)
   4929c:	9829883a 	mov	r20,r19
   492a0:	ddc01004 	addi	r23,sp,64
   492a4:	0021883a 	mov	r16,zero
   492a8:	003f1e06 	br	48f24 <__alt_data_end+0xfffdd004>
   492ac:	9cc03fcc 	andi	r19,r19,255
   492b0:	b811883a 	mov	r8,r23
   492b4:	9803331e 	bne	r19,zero,49f84 <___vfiprintf_internal_r+0x148c>
   492b8:	8880080c 	andi	r2,r17,32
   492bc:	10004826 	beq	r2,zero,493e0 <___vfiprintf_internal_r+0x8e8>
   492c0:	d9002217 	ldw	r4,136(sp)
   492c4:	20800117 	ldw	r2,4(r4)
   492c8:	24c00017 	ldw	r19,0(r4)
   492cc:	21000204 	addi	r4,r4,8
   492d0:	d9002215 	stw	r4,136(sp)
   492d4:	1029883a 	mov	r20,r2
   492d8:	10024c16 	blt	r2,zero,49c0c <___vfiprintf_internal_r+0x1114>
   492dc:	dd401d83 	ldbu	r21,118(sp)
   492e0:	80007116 	blt	r16,zero,494a8 <___vfiprintf_internal_r+0x9b0>
   492e4:	00ffdfc4 	movi	r3,-129
   492e8:	9d04b03a 	or	r2,r19,r20
   492ec:	88e2703a 	and	r17,r17,r3
   492f0:	1000d126 	beq	r2,zero,49638 <___vfiprintf_internal_r+0xb40>
   492f4:	a0023526 	beq	r20,zero,49bcc <___vfiprintf_internal_r+0x10d4>
   492f8:	ddc01a04 	addi	r23,sp,104
   492fc:	4039883a 	mov	fp,r8
   49300:	9809883a 	mov	r4,r19
   49304:	a00b883a 	mov	r5,r20
   49308:	01800284 	movi	r6,10
   4930c:	000f883a 	mov	r7,zero
   49310:	004acfc0 	call	4acfc <__umoddi3>
   49314:	10800c04 	addi	r2,r2,48
   49318:	bdffffc4 	addi	r23,r23,-1
   4931c:	9809883a 	mov	r4,r19
   49320:	a00b883a 	mov	r5,r20
   49324:	b8800005 	stb	r2,0(r23)
   49328:	01800284 	movi	r6,10
   4932c:	000f883a 	mov	r7,zero
   49330:	004a7000 	call	4a700 <__udivdi3>
   49334:	1027883a 	mov	r19,r2
   49338:	10c4b03a 	or	r2,r2,r3
   4933c:	1829883a 	mov	r20,r3
   49340:	103fef1e 	bne	r2,zero,49300 <__alt_data_end+0xfffdd3e0>
   49344:	d9001e17 	ldw	r4,120(sp)
   49348:	e011883a 	mov	r8,fp
   4934c:	25e9c83a 	sub	r20,r4,r23
   49350:	003eec06 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49354:	d8802307 	ldb	r2,140(sp)
   49358:	1002361e 	bne	r2,zero,49c34 <___vfiprintf_internal_r+0x113c>
   4935c:	00c00804 	movi	r3,32
   49360:	d8c02305 	stb	r3,140(sp)
   49364:	04c00044 	movi	r19,1
   49368:	b0c00007 	ldb	r3,0(r22)
   4936c:	003e3f06 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49370:	8c400054 	ori	r17,r17,1
   49374:	b0c00007 	ldb	r3,0(r22)
   49378:	003e3c06 	br	48c6c <__alt_data_end+0xfffdcd4c>
   4937c:	8c402014 	ori	r17,r17,128
   49380:	b0c00007 	ldb	r3,0(r22)
   49384:	003e3906 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49388:	dc002715 	stw	r16,156(sp)
   4938c:	d8002515 	stw	zero,148(sp)
   49390:	1f3ff404 	addi	fp,r3,-48
   49394:	0009883a 	mov	r4,zero
   49398:	b021883a 	mov	r16,r22
   4939c:	01400284 	movi	r5,10
   493a0:	004b4740 	call	4b474 <__mulsi3>
   493a4:	80c00007 	ldb	r3,0(r16)
   493a8:	e089883a 	add	r4,fp,r2
   493ac:	b5800044 	addi	r22,r22,1
   493b0:	1f3ff404 	addi	fp,r3,-48
   493b4:	b021883a 	mov	r16,r22
   493b8:	af3ff82e 	bgeu	r21,fp,4939c <__alt_data_end+0xfffdd47c>
   493bc:	d9002515 	stw	r4,148(sp)
   493c0:	dc002717 	ldw	r16,156(sp)
   493c4:	003e2a06 	br	48c70 <__alt_data_end+0xfffdcd50>
   493c8:	9cc03fcc 	andi	r19,r19,255
   493cc:	b811883a 	mov	r8,r23
   493d0:	9802e91e 	bne	r19,zero,49f78 <___vfiprintf_internal_r+0x1480>
   493d4:	8c400414 	ori	r17,r17,16
   493d8:	8880080c 	andi	r2,r17,32
   493dc:	103fb81e 	bne	r2,zero,492c0 <__alt_data_end+0xfffdd3a0>
   493e0:	8880040c 	andi	r2,r17,16
   493e4:	10022e26 	beq	r2,zero,49ca0 <___vfiprintf_internal_r+0x11a8>
   493e8:	d9402217 	ldw	r5,136(sp)
   493ec:	2cc00017 	ldw	r19,0(r5)
   493f0:	29400104 	addi	r5,r5,4
   493f4:	d9402215 	stw	r5,136(sp)
   493f8:	9829d7fa 	srai	r20,r19,31
   493fc:	a005883a 	mov	r2,r20
   49400:	003fb506 	br	492d8 <__alt_data_end+0xfffdd3b8>
   49404:	9cc03fcc 	andi	r19,r19,255
   49408:	b811883a 	mov	r8,r23
   4940c:	9802fa1e 	bne	r19,zero,49ff8 <___vfiprintf_internal_r+0x1500>
   49410:	8c400414 	ori	r17,r17,16
   49414:	8880080c 	andi	r2,r17,32
   49418:	103f661e 	bne	r2,zero,491b4 <__alt_data_end+0xfffdd294>
   4941c:	8880040c 	andi	r2,r17,16
   49420:	10020626 	beq	r2,zero,49c3c <___vfiprintf_internal_r+0x1144>
   49424:	d9402217 	ldw	r5,136(sp)
   49428:	d8001d85 	stb	zero,118(sp)
   4942c:	0029883a 	mov	r20,zero
   49430:	28800104 	addi	r2,r5,4
   49434:	2cc00017 	ldw	r19,0(r5)
   49438:	80020816 	blt	r16,zero,49c5c <___vfiprintf_internal_r+0x1164>
   4943c:	00ffdfc4 	movi	r3,-129
   49440:	d8802215 	stw	r2,136(sp)
   49444:	88e2703a 	and	r17,r17,r3
   49448:	983f651e 	bne	r19,zero,491e0 <__alt_data_end+0xfffdd2c0>
   4944c:	002b883a 	mov	r21,zero
   49450:	8002cf26 	beq	r16,zero,49f90 <___vfiprintf_internal_r+0x1498>
   49454:	0027883a 	mov	r19,zero
   49458:	0029883a 	mov	r20,zero
   4945c:	003f6106 	br	491e4 <__alt_data_end+0xfffdd2c4>
   49460:	9cc03fcc 	andi	r19,r19,255
   49464:	b811883a 	mov	r8,r23
   49468:	9802e01e 	bne	r19,zero,49fec <___vfiprintf_internal_r+0x14f4>
   4946c:	8c400414 	ori	r17,r17,16
   49470:	8880080c 	andi	r2,r17,32
   49474:	1000641e 	bne	r2,zero,49608 <___vfiprintf_internal_r+0xb10>
   49478:	8880040c 	andi	r2,r17,16
   4947c:	1001c81e 	bne	r2,zero,49ba0 <___vfiprintf_internal_r+0x10a8>
   49480:	8880100c 	andi	r2,r17,64
   49484:	d8001d85 	stb	zero,118(sp)
   49488:	1002281e 	bne	r2,zero,49d2c <___vfiprintf_internal_r+0x1234>
   4948c:	d9002217 	ldw	r4,136(sp)
   49490:	0029883a 	mov	r20,zero
   49494:	20800104 	addi	r2,r4,4
   49498:	24c00017 	ldw	r19,0(r4)
   4949c:	8001c60e 	bge	r16,zero,49bb8 <___vfiprintf_internal_r+0x10c0>
   494a0:	d8802215 	stw	r2,136(sp)
   494a4:	002b883a 	mov	r21,zero
   494a8:	9d04b03a 	or	r2,r19,r20
   494ac:	103f911e 	bne	r2,zero,492f4 <__alt_data_end+0xfffdd3d4>
   494b0:	00800044 	movi	r2,1
   494b4:	10803fcc 	andi	r2,r2,255
   494b8:	00c00044 	movi	r3,1
   494bc:	10c05f26 	beq	r2,r3,4963c <___vfiprintf_internal_r+0xb44>
   494c0:	00c00084 	movi	r3,2
   494c4:	10ffe31e 	bne	r2,r3,49454 <__alt_data_end+0xfffdd534>
   494c8:	0027883a 	mov	r19,zero
   494cc:	0029883a 	mov	r20,zero
   494d0:	00015106 	br	49a18 <___vfiprintf_internal_r+0xf20>
   494d4:	9cc03fcc 	andi	r19,r19,255
   494d8:	b811883a 	mov	r8,r23
   494dc:	9802c01e 	bne	r19,zero,49fe0 <___vfiprintf_internal_r+0x14e8>
   494e0:	01400174 	movhi	r5,5
   494e4:	2941fd04 	addi	r5,r5,2036
   494e8:	d9402615 	stw	r5,152(sp)
   494ec:	8880080c 	andi	r2,r17,32
   494f0:	103f541e 	bne	r2,zero,49244 <__alt_data_end+0xfffdd324>
   494f4:	8880040c 	andi	r2,r17,16
   494f8:	1001f226 	beq	r2,zero,49cc4 <___vfiprintf_internal_r+0x11cc>
   494fc:	d9402217 	ldw	r5,136(sp)
   49500:	0029883a 	mov	r20,zero
   49504:	2cc00017 	ldw	r19,0(r5)
   49508:	29400104 	addi	r5,r5,4
   4950c:	d9402215 	stw	r5,136(sp)
   49510:	003f5106 	br	49258 <__alt_data_end+0xfffdd338>
   49514:	d8c02217 	ldw	r3,136(sp)
   49518:	b811883a 	mov	r8,r23
   4951c:	d8001d85 	stb	zero,118(sp)
   49520:	1dc00017 	ldw	r23,0(r3)
   49524:	1f000104 	addi	fp,r3,4
   49528:	b8025926 	beq	r23,zero,49e90 <___vfiprintf_internal_r+0x1398>
   4952c:	80023316 	blt	r16,zero,49dfc <___vfiprintf_internal_r+0x1304>
   49530:	800d883a 	mov	r6,r16
   49534:	000b883a 	mov	r5,zero
   49538:	b809883a 	mov	r4,r23
   4953c:	da002a15 	stw	r8,168(sp)
   49540:	0046e900 	call	46e90 <memchr>
   49544:	da002a17 	ldw	r8,168(sp)
   49548:	10026826 	beq	r2,zero,49eec <___vfiprintf_internal_r+0x13f4>
   4954c:	15e9c83a 	sub	r20,r2,r23
   49550:	dd401d83 	ldbu	r21,118(sp)
   49554:	df002215 	stw	fp,136(sp)
   49558:	0021883a 	mov	r16,zero
   4955c:	003e6906 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49560:	9cc03fcc 	andi	r19,r19,255
   49564:	b811883a 	mov	r8,r23
   49568:	983fc126 	beq	r19,zero,49470 <__alt_data_end+0xfffdd550>
   4956c:	d8c02303 	ldbu	r3,140(sp)
   49570:	d8c01d85 	stb	r3,118(sp)
   49574:	003fbe06 	br	49470 <__alt_data_end+0xfffdd550>
   49578:	d9002217 	ldw	r4,136(sp)
   4957c:	d9402217 	ldw	r5,136(sp)
   49580:	21000017 	ldw	r4,0(r4)
   49584:	28800104 	addi	r2,r5,4
   49588:	d9002515 	stw	r4,148(sp)
   4958c:	203e3d16 	blt	r4,zero,48e84 <__alt_data_end+0xfffdcf64>
   49590:	d8802215 	stw	r2,136(sp)
   49594:	b0c00007 	ldb	r3,0(r22)
   49598:	003db406 	br	48c6c <__alt_data_end+0xfffdcd4c>
   4959c:	00c00ac4 	movi	r3,43
   495a0:	d8c02305 	stb	r3,140(sp)
   495a4:	04c00044 	movi	r19,1
   495a8:	b0c00007 	ldb	r3,0(r22)
   495ac:	003daf06 	br	48c6c <__alt_data_end+0xfffdcd4c>
   495b0:	b0c00007 	ldb	r3,0(r22)
   495b4:	01000a84 	movi	r4,42
   495b8:	b4000044 	addi	r16,r22,1
   495bc:	19025e26 	beq	r3,r4,49f38 <___vfiprintf_internal_r+0x1440>
   495c0:	1f3ff404 	addi	fp,r3,-48
   495c4:	0009883a 	mov	r4,zero
   495c8:	af025236 	bltu	r21,fp,49f14 <___vfiprintf_internal_r+0x141c>
   495cc:	01400284 	movi	r5,10
   495d0:	004b4740 	call	4b474 <__mulsi3>
   495d4:	80c00007 	ldb	r3,0(r16)
   495d8:	1709883a 	add	r4,r2,fp
   495dc:	85800044 	addi	r22,r16,1
   495e0:	1f3ff404 	addi	fp,r3,-48
   495e4:	b021883a 	mov	r16,r22
   495e8:	af3ff82e 	bgeu	r21,fp,495cc <__alt_data_end+0xfffdd6ac>
   495ec:	2021883a 	mov	r16,r4
   495f0:	203d9f0e 	bge	r4,zero,48c70 <__alt_data_end+0xfffdcd50>
   495f4:	043fffc4 	movi	r16,-1
   495f8:	003d9d06 	br	48c70 <__alt_data_end+0xfffdcd50>
   495fc:	8c401014 	ori	r17,r17,64
   49600:	b0c00007 	ldb	r3,0(r22)
   49604:	003d9906 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49608:	d9002217 	ldw	r4,136(sp)
   4960c:	d8001d85 	stb	zero,118(sp)
   49610:	20c00204 	addi	r3,r4,8
   49614:	24c00017 	ldw	r19,0(r4)
   49618:	25000117 	ldw	r20,4(r4)
   4961c:	8001e716 	blt	r16,zero,49dbc <___vfiprintf_internal_r+0x12c4>
   49620:	013fdfc4 	movi	r4,-129
   49624:	9d04b03a 	or	r2,r19,r20
   49628:	d8c02215 	stw	r3,136(sp)
   4962c:	8922703a 	and	r17,r17,r4
   49630:	002b883a 	mov	r21,zero
   49634:	103f2f1e 	bne	r2,zero,492f4 <__alt_data_end+0xfffdd3d4>
   49638:	803e2f26 	beq	r16,zero,48ef8 <__alt_data_end+0xfffdcfd8>
   4963c:	0027883a 	mov	r19,zero
   49640:	9cc00c04 	addi	r19,r19,48
   49644:	dcc019c5 	stb	r19,103(sp)
   49648:	dd002817 	ldw	r20,160(sp)
   4964c:	ddc019c4 	addi	r23,sp,103
   49650:	003e2c06 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49654:	9cc03fcc 	andi	r19,r19,255
   49658:	b811883a 	mov	r8,r23
   4965c:	9802571e 	bne	r19,zero,49fbc <___vfiprintf_internal_r+0x14c4>
   49660:	18005726 	beq	r3,zero,497c0 <___vfiprintf_internal_r+0xcc8>
   49664:	04c00044 	movi	r19,1
   49668:	d8c01005 	stb	r3,64(sp)
   4966c:	d8001d85 	stb	zero,118(sp)
   49670:	9829883a 	mov	r20,r19
   49674:	ddc01004 	addi	r23,sp,64
   49678:	003f0a06 	br	492a4 <__alt_data_end+0xfffdd384>
   4967c:	d9402017 	ldw	r5,128(sp)
   49680:	d9002117 	ldw	r4,132(sp)
   49684:	d9801a04 	addi	r6,sp,104
   49688:	da802a15 	stw	r10,168(sp)
   4968c:	00489e40 	call	489e4 <__sprint_r.part.0>
   49690:	da802a17 	ldw	r10,168(sp)
   49694:	1000501e 	bne	r2,zero,497d8 <___vfiprintf_internal_r+0xce0>
   49698:	d9801b17 	ldw	r6,108(sp)
   4969c:	d8801c17 	ldw	r2,112(sp)
   496a0:	d811883a 	mov	r8,sp
   496a4:	31000044 	addi	r4,r6,1
   496a8:	003e3606 	br	48f84 <__alt_data_end+0xfffdd064>
   496ac:	d9001b17 	ldw	r4,108(sp)
   496b0:	d8801c17 	ldw	r2,112(sp)
   496b4:	21400044 	addi	r5,r4,1
   496b8:	d9801d87 	ldb	r6,118(sp)
   496bc:	303e5226 	beq	r6,zero,49008 <__alt_data_end+0xfffdd0e8>
   496c0:	01800044 	movi	r6,1
   496c4:	d9001d84 	addi	r4,sp,118
   496c8:	1185883a 	add	r2,r2,r6
   496cc:	41000015 	stw	r4,0(r8)
   496d0:	41800115 	stw	r6,4(r8)
   496d4:	d8801c15 	stw	r2,112(sp)
   496d8:	d9401b15 	stw	r5,108(sp)
   496dc:	010001c4 	movi	r4,7
   496e0:	2140b00e 	bge	r4,r5,499a4 <___vfiprintf_internal_r+0xeac>
   496e4:	1000f61e 	bne	r2,zero,49ac0 <___vfiprintf_internal_r+0xfc8>
   496e8:	3800b31e 	bne	r7,zero,499b8 <___vfiprintf_internal_r+0xec0>
   496ec:	0009883a 	mov	r4,zero
   496f0:	300b883a 	mov	r5,r6
   496f4:	d811883a 	mov	r8,sp
   496f8:	01802004 	movi	r6,128
   496fc:	19be5226 	beq	r3,r6,49048 <__alt_data_end+0xfffdd128>
   49700:	8521c83a 	sub	r16,r16,r20
   49704:	043e790e 	bge	zero,r16,490ec <__alt_data_end+0xfffdd1cc>
   49708:	05400404 	movi	r21,16
   4970c:	ac01b00e 	bge	r21,r16,49dd0 <___vfiprintf_internal_r+0x12d8>
   49710:	01400174 	movhi	r5,5
   49714:	29426204 	addi	r5,r5,2440
   49718:	d9402315 	stw	r5,140(sp)
   4971c:	070001c4 	movi	fp,7
   49720:	00000506 	br	49738 <___vfiprintf_internal_r+0xc40>
   49724:	21400084 	addi	r5,r4,2
   49728:	42000204 	addi	r8,r8,8
   4972c:	1809883a 	mov	r4,r3
   49730:	843ffc04 	addi	r16,r16,-16
   49734:	ac000d0e 	bge	r21,r16,4976c <___vfiprintf_internal_r+0xc74>
   49738:	10800404 	addi	r2,r2,16
   4973c:	20c00044 	addi	r3,r4,1
   49740:	44800015 	stw	r18,0(r8)
   49744:	45400115 	stw	r21,4(r8)
   49748:	d8801c15 	stw	r2,112(sp)
   4974c:	d8c01b15 	stw	r3,108(sp)
   49750:	e0fff40e 	bge	fp,r3,49724 <__alt_data_end+0xfffdd804>
   49754:	1000101e 	bne	r2,zero,49798 <___vfiprintf_internal_r+0xca0>
   49758:	843ffc04 	addi	r16,r16,-16
   4975c:	01400044 	movi	r5,1
   49760:	0009883a 	mov	r4,zero
   49764:	d811883a 	mov	r8,sp
   49768:	ac3ff316 	blt	r21,r16,49738 <__alt_data_end+0xfffdd818>
   4976c:	d8c02317 	ldw	r3,140(sp)
   49770:	1405883a 	add	r2,r2,r16
   49774:	44000115 	stw	r16,4(r8)
   49778:	40c00015 	stw	r3,0(r8)
   4977c:	d8801c15 	stw	r2,112(sp)
   49780:	d9401b15 	stw	r5,108(sp)
   49784:	00c001c4 	movi	r3,7
   49788:	19401916 	blt	r3,r5,497f0 <___vfiprintf_internal_r+0xcf8>
   4978c:	42000204 	addi	r8,r8,8
   49790:	29400044 	addi	r5,r5,1
   49794:	003e5506 	br	490ec <__alt_data_end+0xfffdd1cc>
   49798:	d9402017 	ldw	r5,128(sp)
   4979c:	d9002117 	ldw	r4,132(sp)
   497a0:	d9801a04 	addi	r6,sp,104
   497a4:	00489e40 	call	489e4 <__sprint_r.part.0>
   497a8:	10000b1e 	bne	r2,zero,497d8 <___vfiprintf_internal_r+0xce0>
   497ac:	d9001b17 	ldw	r4,108(sp)
   497b0:	d8801c17 	ldw	r2,112(sp)
   497b4:	d811883a 	mov	r8,sp
   497b8:	21400044 	addi	r5,r4,1
   497bc:	003fdc06 	br	49730 <__alt_data_end+0xfffdd810>
   497c0:	d8801c17 	ldw	r2,112(sp)
   497c4:	10000426 	beq	r2,zero,497d8 <___vfiprintf_internal_r+0xce0>
   497c8:	d9402017 	ldw	r5,128(sp)
   497cc:	d9002117 	ldw	r4,132(sp)
   497d0:	d9801a04 	addi	r6,sp,104
   497d4:	00489e40 	call	489e4 <__sprint_r.part.0>
   497d8:	d9402017 	ldw	r5,128(sp)
   497dc:	2880030b 	ldhu	r2,12(r5)
   497e0:	1080100c 	andi	r2,r2,64
   497e4:	10014d1e 	bne	r2,zero,49d1c <___vfiprintf_internal_r+0x1224>
   497e8:	d8802417 	ldw	r2,144(sp)
   497ec:	003d9706 	br	48e4c <__alt_data_end+0xfffdcf2c>
   497f0:	1000d21e 	bne	r2,zero,49b3c <___vfiprintf_internal_r+0x1044>
   497f4:	00c00044 	movi	r3,1
   497f8:	a005883a 	mov	r2,r20
   497fc:	ddc00015 	stw	r23,0(sp)
   49800:	dd000115 	stw	r20,4(sp)
   49804:	dd001c15 	stw	r20,112(sp)
   49808:	d8c01b15 	stw	r3,108(sp)
   4980c:	d811883a 	mov	r8,sp
   49810:	42000204 	addi	r8,r8,8
   49814:	8c40010c 	andi	r17,r17,4
   49818:	88004026 	beq	r17,zero,4991c <___vfiprintf_internal_r+0xe24>
   4981c:	d9002517 	ldw	r4,148(sp)
   49820:	24e3c83a 	sub	r17,r4,r19
   49824:	04403d0e 	bge	zero,r17,4991c <___vfiprintf_internal_r+0xe24>
   49828:	04000404 	movi	r16,16
   4982c:	8441a90e 	bge	r16,r17,49ed4 <___vfiprintf_internal_r+0x13dc>
   49830:	00c00174 	movhi	r3,5
   49834:	18c26604 	addi	r3,r3,2456
   49838:	d9001b17 	ldw	r4,108(sp)
   4983c:	d8c02315 	stw	r3,140(sp)
   49840:	050001c4 	movi	r20,7
   49844:	dd402117 	ldw	r21,132(sp)
   49848:	ddc02017 	ldw	r23,128(sp)
   4984c:	00000506 	br	49864 <___vfiprintf_internal_r+0xd6c>
   49850:	21400084 	addi	r5,r4,2
   49854:	42000204 	addi	r8,r8,8
   49858:	1809883a 	mov	r4,r3
   4985c:	8c7ffc04 	addi	r17,r17,-16
   49860:	84400f0e 	bge	r16,r17,498a0 <___vfiprintf_internal_r+0xda8>
   49864:	01400174 	movhi	r5,5
   49868:	10800404 	addi	r2,r2,16
   4986c:	20c00044 	addi	r3,r4,1
   49870:	29426604 	addi	r5,r5,2456
   49874:	41400015 	stw	r5,0(r8)
   49878:	44000115 	stw	r16,4(r8)
   4987c:	d8801c15 	stw	r2,112(sp)
   49880:	d8c01b15 	stw	r3,108(sp)
   49884:	a0fff20e 	bge	r20,r3,49850 <__alt_data_end+0xfffdd930>
   49888:	1000141e 	bne	r2,zero,498dc <___vfiprintf_internal_r+0xde4>
   4988c:	8c7ffc04 	addi	r17,r17,-16
   49890:	01400044 	movi	r5,1
   49894:	0009883a 	mov	r4,zero
   49898:	d811883a 	mov	r8,sp
   4989c:	847ff116 	blt	r16,r17,49864 <__alt_data_end+0xfffdd944>
   498a0:	d8c02317 	ldw	r3,140(sp)
   498a4:	1445883a 	add	r2,r2,r17
   498a8:	44400115 	stw	r17,4(r8)
   498ac:	40c00015 	stw	r3,0(r8)
   498b0:	d8801c15 	stw	r2,112(sp)
   498b4:	d9401b15 	stw	r5,108(sp)
   498b8:	00c001c4 	movi	r3,7
   498bc:	1940170e 	bge	r3,r5,4991c <___vfiprintf_internal_r+0xe24>
   498c0:	1000101e 	bne	r2,zero,49904 <___vfiprintf_internal_r+0xe0c>
   498c4:	d8802517 	ldw	r2,148(sp)
   498c8:	14c11616 	blt	r2,r19,49d24 <___vfiprintf_internal_r+0x122c>
   498cc:	d9002417 	ldw	r4,144(sp)
   498d0:	2089883a 	add	r4,r4,r2
   498d4:	d9002415 	stw	r4,144(sp)
   498d8:	003e1806 	br	4913c <__alt_data_end+0xfffdd21c>
   498dc:	d9801a04 	addi	r6,sp,104
   498e0:	b80b883a 	mov	r5,r23
   498e4:	a809883a 	mov	r4,r21
   498e8:	00489e40 	call	489e4 <__sprint_r.part.0>
   498ec:	103fba1e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   498f0:	d9001b17 	ldw	r4,108(sp)
   498f4:	d8801c17 	ldw	r2,112(sp)
   498f8:	d811883a 	mov	r8,sp
   498fc:	21400044 	addi	r5,r4,1
   49900:	003fd606 	br	4985c <__alt_data_end+0xfffdd93c>
   49904:	d9402017 	ldw	r5,128(sp)
   49908:	d9002117 	ldw	r4,132(sp)
   4990c:	d9801a04 	addi	r6,sp,104
   49910:	00489e40 	call	489e4 <__sprint_r.part.0>
   49914:	103fb01e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49918:	d8801c17 	ldw	r2,112(sp)
   4991c:	d8c02517 	ldw	r3,148(sp)
   49920:	1cc0010e 	bge	r3,r19,49928 <___vfiprintf_internal_r+0xe30>
   49924:	9807883a 	mov	r3,r19
   49928:	d9002417 	ldw	r4,144(sp)
   4992c:	20c9883a 	add	r4,r4,r3
   49930:	d9002415 	stw	r4,144(sp)
   49934:	103e0126 	beq	r2,zero,4913c <__alt_data_end+0xfffdd21c>
   49938:	d9402017 	ldw	r5,128(sp)
   4993c:	d9002117 	ldw	r4,132(sp)
   49940:	d9801a04 	addi	r6,sp,104
   49944:	00489e40 	call	489e4 <__sprint_r.part.0>
   49948:	103dfc26 	beq	r2,zero,4913c <__alt_data_end+0xfffdd21c>
   4994c:	003fa206 	br	497d8 <__alt_data_end+0xfffdd8b8>
   49950:	d9402017 	ldw	r5,128(sp)
   49954:	d9002117 	ldw	r4,132(sp)
   49958:	d9801a04 	addi	r6,sp,104
   4995c:	d9c02b15 	stw	r7,172(sp)
   49960:	00489e40 	call	489e4 <__sprint_r.part.0>
   49964:	d9c02b17 	ldw	r7,172(sp)
   49968:	103f9b1e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   4996c:	d9001b17 	ldw	r4,108(sp)
   49970:	d8801c17 	ldw	r2,112(sp)
   49974:	d811883a 	mov	r8,sp
   49978:	21800044 	addi	r6,r4,1
   4997c:	003dbf06 	br	4907c <__alt_data_end+0xfffdd15c>
   49980:	1000d81e 	bne	r2,zero,49ce4 <___vfiprintf_internal_r+0x11ec>
   49984:	d9001d87 	ldb	r4,118(sp)
   49988:	20000a26 	beq	r4,zero,499b4 <___vfiprintf_internal_r+0xebc>
   4998c:	00800044 	movi	r2,1
   49990:	d9001d84 	addi	r4,sp,118
   49994:	100b883a 	mov	r5,r2
   49998:	d9000015 	stw	r4,0(sp)
   4999c:	d8800115 	stw	r2,4(sp)
   499a0:	d811883a 	mov	r8,sp
   499a4:	2809883a 	mov	r4,r5
   499a8:	42000204 	addi	r8,r8,8
   499ac:	29400044 	addi	r5,r5,1
   499b0:	003d9506 	br	49008 <__alt_data_end+0xfffdd0e8>
   499b4:	3800fd26 	beq	r7,zero,49dac <___vfiprintf_internal_r+0x12b4>
   499b8:	00800084 	movi	r2,2
   499bc:	d9001d04 	addi	r4,sp,116
   499c0:	d9000015 	stw	r4,0(sp)
   499c4:	d8800115 	stw	r2,4(sp)
   499c8:	01400044 	movi	r5,1
   499cc:	d811883a 	mov	r8,sp
   499d0:	2809883a 	mov	r4,r5
   499d4:	42000204 	addi	r8,r8,8
   499d8:	29400044 	addi	r5,r5,1
   499dc:	003f4606 	br	496f8 <__alt_data_end+0xfffdd7d8>
   499e0:	d8802517 	ldw	r2,148(sp)
   499e4:	14c0010e 	bge	r2,r19,499ec <___vfiprintf_internal_r+0xef4>
   499e8:	9805883a 	mov	r2,r19
   499ec:	d9402417 	ldw	r5,144(sp)
   499f0:	288b883a 	add	r5,r5,r2
   499f4:	d9402415 	stw	r5,144(sp)
   499f8:	003dd006 	br	4913c <__alt_data_end+0xfffdd21c>
   499fc:	d8001d85 	stb	zero,118(sp)
   49a00:	80005d16 	blt	r16,zero,49b78 <___vfiprintf_internal_r+0x1080>
   49a04:	00ffdfc4 	movi	r3,-129
   49a08:	9d04b03a 	or	r2,r19,r20
   49a0c:	88e2703a 	and	r17,r17,r3
   49a10:	103d3726 	beq	r2,zero,48ef0 <__alt_data_end+0xfffdcfd0>
   49a14:	002b883a 	mov	r21,zero
   49a18:	d9002617 	ldw	r4,152(sp)
   49a1c:	ddc01a04 	addi	r23,sp,104
   49a20:	988003cc 	andi	r2,r19,15
   49a24:	a006973a 	slli	r3,r20,28
   49a28:	2085883a 	add	r2,r4,r2
   49a2c:	9826d13a 	srli	r19,r19,4
   49a30:	10800003 	ldbu	r2,0(r2)
   49a34:	a028d13a 	srli	r20,r20,4
   49a38:	bdffffc4 	addi	r23,r23,-1
   49a3c:	1ce6b03a 	or	r19,r3,r19
   49a40:	b8800005 	stb	r2,0(r23)
   49a44:	9d04b03a 	or	r2,r19,r20
   49a48:	103ff51e 	bne	r2,zero,49a20 <__alt_data_end+0xfffddb00>
   49a4c:	d8801e17 	ldw	r2,120(sp)
   49a50:	15e9c83a 	sub	r20,r2,r23
   49a54:	003d2b06 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49a58:	d9402017 	ldw	r5,128(sp)
   49a5c:	d9002117 	ldw	r4,132(sp)
   49a60:	d9801a04 	addi	r6,sp,104
   49a64:	00489e40 	call	489e4 <__sprint_r.part.0>
   49a68:	103f5b1e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49a6c:	d8801c17 	ldw	r2,112(sp)
   49a70:	d811883a 	mov	r8,sp
   49a74:	003f6706 	br	49814 <__alt_data_end+0xfffdd8f4>
   49a78:	d9402017 	ldw	r5,128(sp)
   49a7c:	d9002117 	ldw	r4,132(sp)
   49a80:	d9801a04 	addi	r6,sp,104
   49a84:	00489e40 	call	489e4 <__sprint_r.part.0>
   49a88:	103f531e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49a8c:	d811883a 	mov	r8,sp
   49a90:	003cd906 	br	48df8 <__alt_data_end+0xfffdced8>
   49a94:	10803fcc 	andi	r2,r2,255
   49a98:	1080201c 	xori	r2,r2,128
   49a9c:	10bfe004 	addi	r2,r2,-128
   49aa0:	00c00c04 	movi	r3,48
   49aa4:	10ffe926 	beq	r2,r3,49a4c <__alt_data_end+0xfffddb2c>
   49aa8:	b8ffffc5 	stb	r3,-1(r23)
   49aac:	d8c01e17 	ldw	r3,120(sp)
   49ab0:	b8bfffc4 	addi	r2,r23,-1
   49ab4:	102f883a 	mov	r23,r2
   49ab8:	18a9c83a 	sub	r20,r3,r2
   49abc:	003d1106 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49ac0:	d9402017 	ldw	r5,128(sp)
   49ac4:	d9002117 	ldw	r4,132(sp)
   49ac8:	d9801a04 	addi	r6,sp,104
   49acc:	d8c02a15 	stw	r3,168(sp)
   49ad0:	d9c02b15 	stw	r7,172(sp)
   49ad4:	00489e40 	call	489e4 <__sprint_r.part.0>
   49ad8:	d8c02a17 	ldw	r3,168(sp)
   49adc:	d9c02b17 	ldw	r7,172(sp)
   49ae0:	103f3d1e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49ae4:	d9001b17 	ldw	r4,108(sp)
   49ae8:	d8801c17 	ldw	r2,112(sp)
   49aec:	d811883a 	mov	r8,sp
   49af0:	21400044 	addi	r5,r4,1
   49af4:	003d4406 	br	49008 <__alt_data_end+0xfffdd0e8>
   49af8:	d9402017 	ldw	r5,128(sp)
   49afc:	d9002117 	ldw	r4,132(sp)
   49b00:	d9801a04 	addi	r6,sp,104
   49b04:	d8c02a15 	stw	r3,168(sp)
   49b08:	00489e40 	call	489e4 <__sprint_r.part.0>
   49b0c:	d8c02a17 	ldw	r3,168(sp)
   49b10:	103f311e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49b14:	d9001b17 	ldw	r4,108(sp)
   49b18:	d8801c17 	ldw	r2,112(sp)
   49b1c:	d811883a 	mov	r8,sp
   49b20:	21400044 	addi	r5,r4,1
   49b24:	003ef406 	br	496f8 <__alt_data_end+0xfffdd7d8>
   49b28:	1000bd1e 	bne	r2,zero,49e20 <___vfiprintf_internal_r+0x1328>
   49b2c:	01400044 	movi	r5,1
   49b30:	0009883a 	mov	r4,zero
   49b34:	d811883a 	mov	r8,sp
   49b38:	003ef106 	br	49700 <__alt_data_end+0xfffdd7e0>
   49b3c:	d9402017 	ldw	r5,128(sp)
   49b40:	d9002117 	ldw	r4,132(sp)
   49b44:	d9801a04 	addi	r6,sp,104
   49b48:	00489e40 	call	489e4 <__sprint_r.part.0>
   49b4c:	103f221e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49b50:	d9401b17 	ldw	r5,108(sp)
   49b54:	d8801c17 	ldw	r2,112(sp)
   49b58:	d811883a 	mov	r8,sp
   49b5c:	29400044 	addi	r5,r5,1
   49b60:	003d6206 	br	490ec <__alt_data_end+0xfffdd1cc>
   49b64:	01400174 	movhi	r5,5
   49b68:	29420204 	addi	r5,r5,2056
   49b6c:	d9402615 	stw	r5,152(sp)
   49b70:	d8c02215 	stw	r3,136(sp)
   49b74:	1023883a 	mov	r17,r2
   49b78:	9d04b03a 	or	r2,r19,r20
   49b7c:	103fa51e 	bne	r2,zero,49a14 <__alt_data_end+0xfffddaf4>
   49b80:	002b883a 	mov	r21,zero
   49b84:	00800084 	movi	r2,2
   49b88:	003e4a06 	br	494b4 <__alt_data_end+0xfffdd594>
   49b8c:	01400174 	movhi	r5,5
   49b90:	29420204 	addi	r5,r5,2056
   49b94:	002b883a 	mov	r21,zero
   49b98:	d9402615 	stw	r5,152(sp)
   49b9c:	003f9e06 	br	49a18 <__alt_data_end+0xfffddaf8>
   49ba0:	d9402217 	ldw	r5,136(sp)
   49ba4:	d8001d85 	stb	zero,118(sp)
   49ba8:	0029883a 	mov	r20,zero
   49bac:	28800104 	addi	r2,r5,4
   49bb0:	2cc00017 	ldw	r19,0(r5)
   49bb4:	803e3a16 	blt	r16,zero,494a0 <__alt_data_end+0xfffdd580>
   49bb8:	00ffdfc4 	movi	r3,-129
   49bbc:	d8802215 	stw	r2,136(sp)
   49bc0:	88e2703a 	and	r17,r17,r3
   49bc4:	002b883a 	mov	r21,zero
   49bc8:	983e9b26 	beq	r19,zero,49638 <__alt_data_end+0xfffdd718>
   49bcc:	00800244 	movi	r2,9
   49bd0:	14fdc936 	bltu	r2,r19,492f8 <__alt_data_end+0xfffdd3d8>
   49bd4:	003e9a06 	br	49640 <__alt_data_end+0xfffdd720>
   49bd8:	00800c04 	movi	r2,48
   49bdc:	d8c01d45 	stb	r3,117(sp)
   49be0:	d8801d05 	stb	r2,116(sp)
   49be4:	d8001d85 	stb	zero,118(sp)
   49be8:	88c00094 	ori	r3,r17,2
   49bec:	80009c16 	blt	r16,zero,49e60 <___vfiprintf_internal_r+0x1368>
   49bf0:	00bfdfc4 	movi	r2,-129
   49bf4:	88a2703a 	and	r17,r17,r2
   49bf8:	8c400094 	ori	r17,r17,2
   49bfc:	002b883a 	mov	r21,zero
   49c00:	003f8506 	br	49a18 <__alt_data_end+0xfffddaf8>
   49c04:	b029883a 	mov	r20,r22
   49c08:	003c0b06 	br	48c38 <__alt_data_end+0xfffdcd18>
   49c0c:	04e7c83a 	sub	r19,zero,r19
   49c10:	05400b44 	movi	r21,45
   49c14:	9804c03a 	cmpne	r2,r19,zero
   49c18:	0529c83a 	sub	r20,zero,r20
   49c1c:	dd401d85 	stb	r21,118(sp)
   49c20:	a0a9c83a 	sub	r20,r20,r2
   49c24:	80009716 	blt	r16,zero,49e84 <___vfiprintf_internal_r+0x138c>
   49c28:	00bfdfc4 	movi	r2,-129
   49c2c:	88a2703a 	and	r17,r17,r2
   49c30:	003db006 	br	492f4 <__alt_data_end+0xfffdd3d4>
   49c34:	b0c00007 	ldb	r3,0(r22)
   49c38:	003c0c06 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49c3c:	8880100c 	andi	r2,r17,64
   49c40:	d8001d85 	stb	zero,118(sp)
   49c44:	1000461e 	bne	r2,zero,49d60 <___vfiprintf_internal_r+0x1268>
   49c48:	d9002217 	ldw	r4,136(sp)
   49c4c:	0029883a 	mov	r20,zero
   49c50:	20800104 	addi	r2,r4,4
   49c54:	24c00017 	ldw	r19,0(r4)
   49c58:	803df80e 	bge	r16,zero,4943c <__alt_data_end+0xfffdd51c>
   49c5c:	9d06b03a 	or	r3,r19,r20
   49c60:	d8802215 	stw	r2,136(sp)
   49c64:	183d5e1e 	bne	r3,zero,491e0 <__alt_data_end+0xfffdd2c0>
   49c68:	002b883a 	mov	r21,zero
   49c6c:	0005883a 	mov	r2,zero
   49c70:	003e1006 	br	494b4 <__alt_data_end+0xfffdd594>
   49c74:	8880040c 	andi	r2,r17,16
   49c78:	1000321e 	bne	r2,zero,49d44 <___vfiprintf_internal_r+0x124c>
   49c7c:	8c40100c 	andi	r17,r17,64
   49c80:	88008d26 	beq	r17,zero,49eb8 <___vfiprintf_internal_r+0x13c0>
   49c84:	d9402217 	ldw	r5,136(sp)
   49c88:	d8c02417 	ldw	r3,144(sp)
   49c8c:	28800017 	ldw	r2,0(r5)
   49c90:	29400104 	addi	r5,r5,4
   49c94:	d9402215 	stw	r5,136(sp)
   49c98:	10c0000d 	sth	r3,0(r2)
   49c9c:	003bca06 	br	48bc8 <__alt_data_end+0xfffdcca8>
   49ca0:	8880100c 	andi	r2,r17,64
   49ca4:	10003a26 	beq	r2,zero,49d90 <___vfiprintf_internal_r+0x1298>
   49ca8:	d8802217 	ldw	r2,136(sp)
   49cac:	14c0000f 	ldh	r19,0(r2)
   49cb0:	10800104 	addi	r2,r2,4
   49cb4:	d8802215 	stw	r2,136(sp)
   49cb8:	9829d7fa 	srai	r20,r19,31
   49cbc:	a005883a 	mov	r2,r20
   49cc0:	003d8506 	br	492d8 <__alt_data_end+0xfffdd3b8>
   49cc4:	8880100c 	andi	r2,r17,64
   49cc8:	10002b26 	beq	r2,zero,49d78 <___vfiprintf_internal_r+0x1280>
   49ccc:	d8802217 	ldw	r2,136(sp)
   49cd0:	0029883a 	mov	r20,zero
   49cd4:	14c0000b 	ldhu	r19,0(r2)
   49cd8:	10800104 	addi	r2,r2,4
   49cdc:	d8802215 	stw	r2,136(sp)
   49ce0:	003d5d06 	br	49258 <__alt_data_end+0xfffdd338>
   49ce4:	d9402017 	ldw	r5,128(sp)
   49ce8:	d9002117 	ldw	r4,132(sp)
   49cec:	d9801a04 	addi	r6,sp,104
   49cf0:	d8c02a15 	stw	r3,168(sp)
   49cf4:	d9c02b15 	stw	r7,172(sp)
   49cf8:	00489e40 	call	489e4 <__sprint_r.part.0>
   49cfc:	d8c02a17 	ldw	r3,168(sp)
   49d00:	d9c02b17 	ldw	r7,172(sp)
   49d04:	103eb41e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49d08:	d9001b17 	ldw	r4,108(sp)
   49d0c:	d8801c17 	ldw	r2,112(sp)
   49d10:	d811883a 	mov	r8,sp
   49d14:	21400044 	addi	r5,r4,1
   49d18:	003e6706 	br	496b8 <__alt_data_end+0xfffdd798>
   49d1c:	00bfffc4 	movi	r2,-1
   49d20:	003c4a06 	br	48e4c <__alt_data_end+0xfffdcf2c>
   49d24:	9805883a 	mov	r2,r19
   49d28:	003ee806 	br	498cc <__alt_data_end+0xfffdd9ac>
   49d2c:	d8c02217 	ldw	r3,136(sp)
   49d30:	0029883a 	mov	r20,zero
   49d34:	18800104 	addi	r2,r3,4
   49d38:	1cc0000b 	ldhu	r19,0(r3)
   49d3c:	803f9e0e 	bge	r16,zero,49bb8 <__alt_data_end+0xfffddc98>
   49d40:	003dd706 	br	494a0 <__alt_data_end+0xfffdd580>
   49d44:	d8c02217 	ldw	r3,136(sp)
   49d48:	d9002417 	ldw	r4,144(sp)
   49d4c:	18800017 	ldw	r2,0(r3)
   49d50:	18c00104 	addi	r3,r3,4
   49d54:	d8c02215 	stw	r3,136(sp)
   49d58:	11000015 	stw	r4,0(r2)
   49d5c:	003b9a06 	br	48bc8 <__alt_data_end+0xfffdcca8>
   49d60:	d8c02217 	ldw	r3,136(sp)
   49d64:	0029883a 	mov	r20,zero
   49d68:	18800104 	addi	r2,r3,4
   49d6c:	1cc0000b 	ldhu	r19,0(r3)
   49d70:	803db20e 	bge	r16,zero,4943c <__alt_data_end+0xfffdd51c>
   49d74:	003fb906 	br	49c5c <__alt_data_end+0xfffddd3c>
   49d78:	d9002217 	ldw	r4,136(sp)
   49d7c:	0029883a 	mov	r20,zero
   49d80:	24c00017 	ldw	r19,0(r4)
   49d84:	21000104 	addi	r4,r4,4
   49d88:	d9002215 	stw	r4,136(sp)
   49d8c:	003d3206 	br	49258 <__alt_data_end+0xfffdd338>
   49d90:	d8c02217 	ldw	r3,136(sp)
   49d94:	1cc00017 	ldw	r19,0(r3)
   49d98:	18c00104 	addi	r3,r3,4
   49d9c:	d8c02215 	stw	r3,136(sp)
   49da0:	9829d7fa 	srai	r20,r19,31
   49da4:	a005883a 	mov	r2,r20
   49da8:	003d4b06 	br	492d8 <__alt_data_end+0xfffdd3b8>
   49dac:	0009883a 	mov	r4,zero
   49db0:	01400044 	movi	r5,1
   49db4:	d811883a 	mov	r8,sp
   49db8:	003e4f06 	br	496f8 <__alt_data_end+0xfffdd7d8>
   49dbc:	d8c02215 	stw	r3,136(sp)
   49dc0:	002b883a 	mov	r21,zero
   49dc4:	003db806 	br	494a8 <__alt_data_end+0xfffdd588>
   49dc8:	d811883a 	mov	r8,sp
   49dcc:	003e9606 	br	49828 <__alt_data_end+0xfffdd908>
   49dd0:	01000174 	movhi	r4,5
   49dd4:	21026204 	addi	r4,r4,2440
   49dd8:	d9002315 	stw	r4,140(sp)
   49ddc:	003e6306 	br	4976c <__alt_data_end+0xfffdd84c>
   49de0:	b0c00043 	ldbu	r3,1(r22)
   49de4:	8c400814 	ori	r17,r17,32
   49de8:	b5800044 	addi	r22,r22,1
   49dec:	18c03fcc 	andi	r3,r3,255
   49df0:	18c0201c 	xori	r3,r3,128
   49df4:	18ffe004 	addi	r3,r3,-128
   49df8:	003b9c06 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49dfc:	b809883a 	mov	r4,r23
   49e00:	da002a15 	stw	r8,168(sp)
   49e04:	00428880 	call	42888 <strlen>
   49e08:	1029883a 	mov	r20,r2
   49e0c:	dd401d83 	ldbu	r21,118(sp)
   49e10:	df002215 	stw	fp,136(sp)
   49e14:	0021883a 	mov	r16,zero
   49e18:	da002a17 	ldw	r8,168(sp)
   49e1c:	003c3906 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49e20:	d9402017 	ldw	r5,128(sp)
   49e24:	d9002117 	ldw	r4,132(sp)
   49e28:	d9801a04 	addi	r6,sp,104
   49e2c:	00489e40 	call	489e4 <__sprint_r.part.0>
   49e30:	103e691e 	bne	r2,zero,497d8 <__alt_data_end+0xfffdd8b8>
   49e34:	d9001b17 	ldw	r4,108(sp)
   49e38:	d8801c17 	ldw	r2,112(sp)
   49e3c:	d811883a 	mov	r8,sp
   49e40:	21400044 	addi	r5,r4,1
   49e44:	003e2e06 	br	49700 <__alt_data_end+0xfffdd7e0>
   49e48:	01000174 	movhi	r4,5
   49e4c:	21026604 	addi	r4,r4,2456
   49e50:	d9002315 	stw	r4,140(sp)
   49e54:	d9001b17 	ldw	r4,108(sp)
   49e58:	21000044 	addi	r4,r4,1
   49e5c:	003c5e06 	br	48fd8 <__alt_data_end+0xfffdd0b8>
   49e60:	002b883a 	mov	r21,zero
   49e64:	00800084 	movi	r2,2
   49e68:	10803fcc 	andi	r2,r2,255
   49e6c:	01000044 	movi	r4,1
   49e70:	11002b26 	beq	r2,r4,49f20 <___vfiprintf_internal_r+0x1428>
   49e74:	01000084 	movi	r4,2
   49e78:	11002b1e 	bne	r2,r4,49f28 <___vfiprintf_internal_r+0x1430>
   49e7c:	1823883a 	mov	r17,r3
   49e80:	003ee506 	br	49a18 <__alt_data_end+0xfffddaf8>
   49e84:	8807883a 	mov	r3,r17
   49e88:	00800044 	movi	r2,1
   49e8c:	003ff606 	br	49e68 <__alt_data_end+0xfffddf48>
   49e90:	00800184 	movi	r2,6
   49e94:	1400012e 	bgeu	r2,r16,49e9c <___vfiprintf_internal_r+0x13a4>
   49e98:	1021883a 	mov	r16,r2
   49e9c:	8029883a 	mov	r20,r16
   49ea0:	8027883a 	mov	r19,r16
   49ea4:	80002216 	blt	r16,zero,49f30 <___vfiprintf_internal_r+0x1438>
   49ea8:	05c00174 	movhi	r23,5
   49eac:	df002215 	stw	fp,136(sp)
   49eb0:	bdc20704 	addi	r23,r23,2076
   49eb4:	003cfb06 	br	492a4 <__alt_data_end+0xfffdd384>
   49eb8:	d9002217 	ldw	r4,136(sp)
   49ebc:	d9402417 	ldw	r5,144(sp)
   49ec0:	20800017 	ldw	r2,0(r4)
   49ec4:	21000104 	addi	r4,r4,4
   49ec8:	d9002215 	stw	r4,136(sp)
   49ecc:	11400015 	stw	r5,0(r2)
   49ed0:	003b3d06 	br	48bc8 <__alt_data_end+0xfffdcca8>
   49ed4:	01400174 	movhi	r5,5
   49ed8:	29426604 	addi	r5,r5,2456
   49edc:	d9402315 	stw	r5,140(sp)
   49ee0:	d9401b17 	ldw	r5,108(sp)
   49ee4:	29400044 	addi	r5,r5,1
   49ee8:	003e6d06 	br	498a0 <__alt_data_end+0xfffdd980>
   49eec:	8029883a 	mov	r20,r16
   49ef0:	dd401d83 	ldbu	r21,118(sp)
   49ef4:	df002215 	stw	fp,136(sp)
   49ef8:	0021883a 	mov	r16,zero
   49efc:	003c0106 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49f00:	00c00174 	movhi	r3,5
   49f04:	18c26204 	addi	r3,r3,2440
   49f08:	d8c02315 	stw	r3,140(sp)
   49f0c:	280d883a 	mov	r6,r5
   49f10:	003c6906 	br	490b8 <__alt_data_end+0xfffdd198>
   49f14:	802d883a 	mov	r22,r16
   49f18:	0021883a 	mov	r16,zero
   49f1c:	003b5406 	br	48c70 <__alt_data_end+0xfffdcd50>
   49f20:	1823883a 	mov	r17,r3
   49f24:	003cf306 	br	492f4 <__alt_data_end+0xfffdd3d4>
   49f28:	1823883a 	mov	r17,r3
   49f2c:	003cad06 	br	491e4 <__alt_data_end+0xfffdd2c4>
   49f30:	0027883a 	mov	r19,zero
   49f34:	003fdc06 	br	49ea8 <__alt_data_end+0xfffddf88>
   49f38:	d9402217 	ldw	r5,136(sp)
   49f3c:	8005883a 	mov	r2,r16
   49f40:	b0c00043 	ldbu	r3,1(r22)
   49f44:	2c000017 	ldw	r16,0(r5)
   49f48:	29000104 	addi	r4,r5,4
   49f4c:	d9002215 	stw	r4,136(sp)
   49f50:	102d883a 	mov	r22,r2
   49f54:	803fa50e 	bge	r16,zero,49dec <__alt_data_end+0xfffddecc>
   49f58:	18c03fcc 	andi	r3,r3,255
   49f5c:	18c0201c 	xori	r3,r3,128
   49f60:	043fffc4 	movi	r16,-1
   49f64:	18ffe004 	addi	r3,r3,-128
   49f68:	003b4006 	br	48c6c <__alt_data_end+0xfffdcd4c>
   49f6c:	d9402303 	ldbu	r5,140(sp)
   49f70:	d9401d85 	stb	r5,118(sp)
   49f74:	003cae06 	br	49230 <__alt_data_end+0xfffdd310>
   49f78:	d8c02303 	ldbu	r3,140(sp)
   49f7c:	d8c01d85 	stb	r3,118(sp)
   49f80:	003d1406 	br	493d4 <__alt_data_end+0xfffdd4b4>
   49f84:	d8c02303 	ldbu	r3,140(sp)
   49f88:	d8c01d85 	stb	r3,118(sp)
   49f8c:	003cca06 	br	492b8 <__alt_data_end+0xfffdd398>
   49f90:	8880004c 	andi	r2,r17,1
   49f94:	002b883a 	mov	r21,zero
   49f98:	10000526 	beq	r2,zero,49fb0 <___vfiprintf_internal_r+0x14b8>
   49f9c:	00800c04 	movi	r2,48
   49fa0:	d88019c5 	stb	r2,103(sp)
   49fa4:	dd002817 	ldw	r20,160(sp)
   49fa8:	ddc019c4 	addi	r23,sp,103
   49fac:	003bd506 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49fb0:	0029883a 	mov	r20,zero
   49fb4:	ddc01a04 	addi	r23,sp,104
   49fb8:	003bd206 	br	48f04 <__alt_data_end+0xfffdcfe4>
   49fbc:	d9002303 	ldbu	r4,140(sp)
   49fc0:	d9001d85 	stb	r4,118(sp)
   49fc4:	003da606 	br	49660 <__alt_data_end+0xfffdd740>
   49fc8:	d8c02303 	ldbu	r3,140(sp)
   49fcc:	d8c01d85 	stb	r3,118(sp)
   49fd0:	003c7606 	br	491ac <__alt_data_end+0xfffdd28c>
   49fd4:	d8c02303 	ldbu	r3,140(sp)
   49fd8:	d8c01d85 	stb	r3,118(sp)
   49fdc:	003c6506 	br	49174 <__alt_data_end+0xfffdd254>
   49fe0:	d9002303 	ldbu	r4,140(sp)
   49fe4:	d9001d85 	stb	r4,118(sp)
   49fe8:	003d3d06 	br	494e0 <__alt_data_end+0xfffdd5c0>
   49fec:	d8c02303 	ldbu	r3,140(sp)
   49ff0:	d8c01d85 	stb	r3,118(sp)
   49ff4:	003d1d06 	br	4946c <__alt_data_end+0xfffdd54c>
   49ff8:	d8c02303 	ldbu	r3,140(sp)
   49ffc:	d8c01d85 	stb	r3,118(sp)
   4a000:	003d0306 	br	49410 <__alt_data_end+0xfffdd4f0>

0004a004 <__vfiprintf_internal>:
   4a004:	00800174 	movhi	r2,5
   4a008:	10897204 	addi	r2,r2,9672
   4a00c:	300f883a 	mov	r7,r6
   4a010:	280d883a 	mov	r6,r5
   4a014:	200b883a 	mov	r5,r4
   4a018:	11000017 	ldw	r4,0(r2)
   4a01c:	0048af81 	jmpi	48af8 <___vfiprintf_internal_r>

0004a020 <__sbprintf>:
   4a020:	2880030b 	ldhu	r2,12(r5)
   4a024:	2ac01917 	ldw	r11,100(r5)
   4a028:	2a80038b 	ldhu	r10,14(r5)
   4a02c:	2a400717 	ldw	r9,28(r5)
   4a030:	2a000917 	ldw	r8,36(r5)
   4a034:	defee204 	addi	sp,sp,-1144
   4a038:	00c10004 	movi	r3,1024
   4a03c:	dc011a15 	stw	r16,1128(sp)
   4a040:	10bfff4c 	andi	r2,r2,65533
   4a044:	2821883a 	mov	r16,r5
   4a048:	d8cb883a 	add	r5,sp,r3
   4a04c:	dc811c15 	stw	r18,1136(sp)
   4a050:	dc411b15 	stw	r17,1132(sp)
   4a054:	dfc11d15 	stw	ra,1140(sp)
   4a058:	2025883a 	mov	r18,r4
   4a05c:	d881030d 	sth	r2,1036(sp)
   4a060:	dac11915 	stw	r11,1124(sp)
   4a064:	da81038d 	sth	r10,1038(sp)
   4a068:	da410715 	stw	r9,1052(sp)
   4a06c:	da010915 	stw	r8,1060(sp)
   4a070:	dec10015 	stw	sp,1024(sp)
   4a074:	dec10415 	stw	sp,1040(sp)
   4a078:	d8c10215 	stw	r3,1032(sp)
   4a07c:	d8c10515 	stw	r3,1044(sp)
   4a080:	d8010615 	stw	zero,1048(sp)
   4a084:	0048af80 	call	48af8 <___vfiprintf_internal_r>
   4a088:	1023883a 	mov	r17,r2
   4a08c:	10000416 	blt	r2,zero,4a0a0 <__sbprintf+0x80>
   4a090:	d9410004 	addi	r5,sp,1024
   4a094:	9009883a 	mov	r4,r18
   4a098:	00407380 	call	40738 <_fflush_r>
   4a09c:	10000d1e 	bne	r2,zero,4a0d4 <__sbprintf+0xb4>
   4a0a0:	d881030b 	ldhu	r2,1036(sp)
   4a0a4:	1080100c 	andi	r2,r2,64
   4a0a8:	10000326 	beq	r2,zero,4a0b8 <__sbprintf+0x98>
   4a0ac:	8080030b 	ldhu	r2,12(r16)
   4a0b0:	10801014 	ori	r2,r2,64
   4a0b4:	8080030d 	sth	r2,12(r16)
   4a0b8:	8805883a 	mov	r2,r17
   4a0bc:	dfc11d17 	ldw	ra,1140(sp)
   4a0c0:	dc811c17 	ldw	r18,1136(sp)
   4a0c4:	dc411b17 	ldw	r17,1132(sp)
   4a0c8:	dc011a17 	ldw	r16,1128(sp)
   4a0cc:	dec11e04 	addi	sp,sp,1144
   4a0d0:	f800283a 	ret
   4a0d4:	047fffc4 	movi	r17,-1
   4a0d8:	003ff106 	br	4a0a0 <__alt_data_end+0xfffde180>

0004a0dc <_calloc_r>:
   4a0dc:	defffe04 	addi	sp,sp,-8
   4a0e0:	2805883a 	mov	r2,r5
   4a0e4:	dc000015 	stw	r16,0(sp)
   4a0e8:	300b883a 	mov	r5,r6
   4a0ec:	2021883a 	mov	r16,r4
   4a0f0:	1009883a 	mov	r4,r2
   4a0f4:	dfc00115 	stw	ra,4(sp)
   4a0f8:	004b4740 	call	4b474 <__mulsi3>
   4a0fc:	100b883a 	mov	r5,r2
   4a100:	8009883a 	mov	r4,r16
   4a104:	0041a180 	call	41a18 <_malloc_r>
   4a108:	10002926 	beq	r2,zero,4a1b0 <_calloc_r+0xd4>
   4a10c:	11bfff17 	ldw	r6,-4(r2)
   4a110:	1021883a 	mov	r16,r2
   4a114:	00bfff04 	movi	r2,-4
   4a118:	308c703a 	and	r6,r6,r2
   4a11c:	00c00904 	movi	r3,36
   4a120:	308d883a 	add	r6,r6,r2
   4a124:	19801636 	bltu	r3,r6,4a180 <_calloc_r+0xa4>
   4a128:	008004c4 	movi	r2,19
   4a12c:	11800b2e 	bgeu	r2,r6,4a15c <_calloc_r+0x80>
   4a130:	80000015 	stw	zero,0(r16)
   4a134:	80000115 	stw	zero,4(r16)
   4a138:	008006c4 	movi	r2,27
   4a13c:	11801a2e 	bgeu	r2,r6,4a1a8 <_calloc_r+0xcc>
   4a140:	80000215 	stw	zero,8(r16)
   4a144:	80000315 	stw	zero,12(r16)
   4a148:	30c0151e 	bne	r6,r3,4a1a0 <_calloc_r+0xc4>
   4a14c:	80000415 	stw	zero,16(r16)
   4a150:	80800604 	addi	r2,r16,24
   4a154:	80000515 	stw	zero,20(r16)
   4a158:	00000106 	br	4a160 <_calloc_r+0x84>
   4a15c:	8005883a 	mov	r2,r16
   4a160:	10000015 	stw	zero,0(r2)
   4a164:	10000115 	stw	zero,4(r2)
   4a168:	10000215 	stw	zero,8(r2)
   4a16c:	8005883a 	mov	r2,r16
   4a170:	dfc00117 	ldw	ra,4(sp)
   4a174:	dc000017 	ldw	r16,0(sp)
   4a178:	dec00204 	addi	sp,sp,8
   4a17c:	f800283a 	ret
   4a180:	000b883a 	mov	r5,zero
   4a184:	8009883a 	mov	r4,r16
   4a188:	00422240 	call	42224 <memset>
   4a18c:	8005883a 	mov	r2,r16
   4a190:	dfc00117 	ldw	ra,4(sp)
   4a194:	dc000017 	ldw	r16,0(sp)
   4a198:	dec00204 	addi	sp,sp,8
   4a19c:	f800283a 	ret
   4a1a0:	80800404 	addi	r2,r16,16
   4a1a4:	003fee06 	br	4a160 <__alt_data_end+0xfffde240>
   4a1a8:	80800204 	addi	r2,r16,8
   4a1ac:	003fec06 	br	4a160 <__alt_data_end+0xfffde240>
   4a1b0:	0005883a 	mov	r2,zero
   4a1b4:	003fee06 	br	4a170 <__alt_data_end+0xfffde250>

0004a1b8 <__fputwc>:
   4a1b8:	defff804 	addi	sp,sp,-32
   4a1bc:	dcc00415 	stw	r19,16(sp)
   4a1c0:	dc800315 	stw	r18,12(sp)
   4a1c4:	dc000115 	stw	r16,4(sp)
   4a1c8:	dfc00715 	stw	ra,28(sp)
   4a1cc:	dd400615 	stw	r21,24(sp)
   4a1d0:	dd000515 	stw	r20,20(sp)
   4a1d4:	dc400215 	stw	r17,8(sp)
   4a1d8:	2027883a 	mov	r19,r4
   4a1dc:	2825883a 	mov	r18,r5
   4a1e0:	3021883a 	mov	r16,r6
   4a1e4:	0046ddc0 	call	46ddc <__locale_mb_cur_max>
   4a1e8:	00c00044 	movi	r3,1
   4a1ec:	10c03e26 	beq	r2,r3,4a2e8 <__fputwc+0x130>
   4a1f0:	81c01704 	addi	r7,r16,92
   4a1f4:	900d883a 	mov	r6,r18
   4a1f8:	d80b883a 	mov	r5,sp
   4a1fc:	9809883a 	mov	r4,r19
   4a200:	004a5180 	call	4a518 <_wcrtomb_r>
   4a204:	1029883a 	mov	r20,r2
   4a208:	00bfffc4 	movi	r2,-1
   4a20c:	a0802026 	beq	r20,r2,4a290 <__fputwc+0xd8>
   4a210:	d9400003 	ldbu	r5,0(sp)
   4a214:	a0001c26 	beq	r20,zero,4a288 <__fputwc+0xd0>
   4a218:	0023883a 	mov	r17,zero
   4a21c:	05400284 	movi	r21,10
   4a220:	00000906 	br	4a248 <__fputwc+0x90>
   4a224:	80800017 	ldw	r2,0(r16)
   4a228:	11400005 	stb	r5,0(r2)
   4a22c:	80c00017 	ldw	r3,0(r16)
   4a230:	18c00044 	addi	r3,r3,1
   4a234:	80c00015 	stw	r3,0(r16)
   4a238:	8c400044 	addi	r17,r17,1
   4a23c:	dc45883a 	add	r2,sp,r17
   4a240:	8d00112e 	bgeu	r17,r20,4a288 <__fputwc+0xd0>
   4a244:	11400003 	ldbu	r5,0(r2)
   4a248:	80c00217 	ldw	r3,8(r16)
   4a24c:	18ffffc4 	addi	r3,r3,-1
   4a250:	80c00215 	stw	r3,8(r16)
   4a254:	183ff30e 	bge	r3,zero,4a224 <__alt_data_end+0xfffde304>
   4a258:	80800617 	ldw	r2,24(r16)
   4a25c:	18801916 	blt	r3,r2,4a2c4 <__fputwc+0x10c>
   4a260:	80800017 	ldw	r2,0(r16)
   4a264:	11400005 	stb	r5,0(r2)
   4a268:	80800017 	ldw	r2,0(r16)
   4a26c:	10c00003 	ldbu	r3,0(r2)
   4a270:	10800044 	addi	r2,r2,1
   4a274:	1d402326 	beq	r3,r21,4a304 <__fputwc+0x14c>
   4a278:	80800015 	stw	r2,0(r16)
   4a27c:	8c400044 	addi	r17,r17,1
   4a280:	dc45883a 	add	r2,sp,r17
   4a284:	8d3fef36 	bltu	r17,r20,4a244 <__alt_data_end+0xfffde324>
   4a288:	9005883a 	mov	r2,r18
   4a28c:	00000406 	br	4a2a0 <__fputwc+0xe8>
   4a290:	80c0030b 	ldhu	r3,12(r16)
   4a294:	a005883a 	mov	r2,r20
   4a298:	18c01014 	ori	r3,r3,64
   4a29c:	80c0030d 	sth	r3,12(r16)
   4a2a0:	dfc00717 	ldw	ra,28(sp)
   4a2a4:	dd400617 	ldw	r21,24(sp)
   4a2a8:	dd000517 	ldw	r20,20(sp)
   4a2ac:	dcc00417 	ldw	r19,16(sp)
   4a2b0:	dc800317 	ldw	r18,12(sp)
   4a2b4:	dc400217 	ldw	r17,8(sp)
   4a2b8:	dc000117 	ldw	r16,4(sp)
   4a2bc:	dec00804 	addi	sp,sp,32
   4a2c0:	f800283a 	ret
   4a2c4:	800d883a 	mov	r6,r16
   4a2c8:	29403fcc 	andi	r5,r5,255
   4a2cc:	9809883a 	mov	r4,r19
   4a2d0:	004a3c00 	call	4a3c0 <__swbuf_r>
   4a2d4:	10bfffe0 	cmpeqi	r2,r2,-1
   4a2d8:	10803fcc 	andi	r2,r2,255
   4a2dc:	103fd626 	beq	r2,zero,4a238 <__alt_data_end+0xfffde318>
   4a2e0:	00bfffc4 	movi	r2,-1
   4a2e4:	003fee06 	br	4a2a0 <__alt_data_end+0xfffde380>
   4a2e8:	90ffffc4 	addi	r3,r18,-1
   4a2ec:	01003f84 	movi	r4,254
   4a2f0:	20ffbf36 	bltu	r4,r3,4a1f0 <__alt_data_end+0xfffde2d0>
   4a2f4:	900b883a 	mov	r5,r18
   4a2f8:	dc800005 	stb	r18,0(sp)
   4a2fc:	1029883a 	mov	r20,r2
   4a300:	003fc506 	br	4a218 <__alt_data_end+0xfffde2f8>
   4a304:	800d883a 	mov	r6,r16
   4a308:	a80b883a 	mov	r5,r21
   4a30c:	9809883a 	mov	r4,r19
   4a310:	004a3c00 	call	4a3c0 <__swbuf_r>
   4a314:	10bfffe0 	cmpeqi	r2,r2,-1
   4a318:	003fef06 	br	4a2d8 <__alt_data_end+0xfffde3b8>

0004a31c <_fputwc_r>:
   4a31c:	3080030b 	ldhu	r2,12(r6)
   4a320:	10c8000c 	andi	r3,r2,8192
   4a324:	1800051e 	bne	r3,zero,4a33c <_fputwc_r+0x20>
   4a328:	30c01917 	ldw	r3,100(r6)
   4a32c:	10880014 	ori	r2,r2,8192
   4a330:	3080030d 	sth	r2,12(r6)
   4a334:	18880014 	ori	r2,r3,8192
   4a338:	30801915 	stw	r2,100(r6)
   4a33c:	004a1b81 	jmpi	4a1b8 <__fputwc>

0004a340 <fputwc>:
   4a340:	00800174 	movhi	r2,5
   4a344:	defffc04 	addi	sp,sp,-16
   4a348:	10897204 	addi	r2,r2,9672
   4a34c:	dc000115 	stw	r16,4(sp)
   4a350:	14000017 	ldw	r16,0(r2)
   4a354:	dc400215 	stw	r17,8(sp)
   4a358:	dfc00315 	stw	ra,12(sp)
   4a35c:	2023883a 	mov	r17,r4
   4a360:	80000226 	beq	r16,zero,4a36c <fputwc+0x2c>
   4a364:	80800e17 	ldw	r2,56(r16)
   4a368:	10001026 	beq	r2,zero,4a3ac <fputwc+0x6c>
   4a36c:	2880030b 	ldhu	r2,12(r5)
   4a370:	10c8000c 	andi	r3,r2,8192
   4a374:	1800051e 	bne	r3,zero,4a38c <fputwc+0x4c>
   4a378:	28c01917 	ldw	r3,100(r5)
   4a37c:	10880014 	ori	r2,r2,8192
   4a380:	2880030d 	sth	r2,12(r5)
   4a384:	18880014 	ori	r2,r3,8192
   4a388:	28801915 	stw	r2,100(r5)
   4a38c:	280d883a 	mov	r6,r5
   4a390:	8009883a 	mov	r4,r16
   4a394:	880b883a 	mov	r5,r17
   4a398:	dfc00317 	ldw	ra,12(sp)
   4a39c:	dc400217 	ldw	r17,8(sp)
   4a3a0:	dc000117 	ldw	r16,4(sp)
   4a3a4:	dec00404 	addi	sp,sp,16
   4a3a8:	004a1b81 	jmpi	4a1b8 <__fputwc>
   4a3ac:	8009883a 	mov	r4,r16
   4a3b0:	d9400015 	stw	r5,0(sp)
   4a3b4:	0040b240 	call	40b24 <__sinit>
   4a3b8:	d9400017 	ldw	r5,0(sp)
   4a3bc:	003feb06 	br	4a36c <__alt_data_end+0xfffde44c>

0004a3c0 <__swbuf_r>:
   4a3c0:	defffb04 	addi	sp,sp,-20
   4a3c4:	dcc00315 	stw	r19,12(sp)
   4a3c8:	dc800215 	stw	r18,8(sp)
   4a3cc:	dc000015 	stw	r16,0(sp)
   4a3d0:	dfc00415 	stw	ra,16(sp)
   4a3d4:	dc400115 	stw	r17,4(sp)
   4a3d8:	2025883a 	mov	r18,r4
   4a3dc:	2827883a 	mov	r19,r5
   4a3e0:	3021883a 	mov	r16,r6
   4a3e4:	20000226 	beq	r4,zero,4a3f0 <__swbuf_r+0x30>
   4a3e8:	20800e17 	ldw	r2,56(r4)
   4a3ec:	10004226 	beq	r2,zero,4a4f8 <__swbuf_r+0x138>
   4a3f0:	80800617 	ldw	r2,24(r16)
   4a3f4:	8100030b 	ldhu	r4,12(r16)
   4a3f8:	80800215 	stw	r2,8(r16)
   4a3fc:	2080020c 	andi	r2,r4,8
   4a400:	10003626 	beq	r2,zero,4a4dc <__swbuf_r+0x11c>
   4a404:	80c00417 	ldw	r3,16(r16)
   4a408:	18003426 	beq	r3,zero,4a4dc <__swbuf_r+0x11c>
   4a40c:	2088000c 	andi	r2,r4,8192
   4a410:	9c403fcc 	andi	r17,r19,255
   4a414:	10001a26 	beq	r2,zero,4a480 <__swbuf_r+0xc0>
   4a418:	80800017 	ldw	r2,0(r16)
   4a41c:	81000517 	ldw	r4,20(r16)
   4a420:	10c7c83a 	sub	r3,r2,r3
   4a424:	1900200e 	bge	r3,r4,4a4a8 <__swbuf_r+0xe8>
   4a428:	18c00044 	addi	r3,r3,1
   4a42c:	81000217 	ldw	r4,8(r16)
   4a430:	11400044 	addi	r5,r2,1
   4a434:	81400015 	stw	r5,0(r16)
   4a438:	213fffc4 	addi	r4,r4,-1
   4a43c:	81000215 	stw	r4,8(r16)
   4a440:	14c00005 	stb	r19,0(r2)
   4a444:	80800517 	ldw	r2,20(r16)
   4a448:	10c01e26 	beq	r2,r3,4a4c4 <__swbuf_r+0x104>
   4a44c:	8080030b 	ldhu	r2,12(r16)
   4a450:	1080004c 	andi	r2,r2,1
   4a454:	10000226 	beq	r2,zero,4a460 <__swbuf_r+0xa0>
   4a458:	00800284 	movi	r2,10
   4a45c:	88801926 	beq	r17,r2,4a4c4 <__swbuf_r+0x104>
   4a460:	8805883a 	mov	r2,r17
   4a464:	dfc00417 	ldw	ra,16(sp)
   4a468:	dcc00317 	ldw	r19,12(sp)
   4a46c:	dc800217 	ldw	r18,8(sp)
   4a470:	dc400117 	ldw	r17,4(sp)
   4a474:	dc000017 	ldw	r16,0(sp)
   4a478:	dec00504 	addi	sp,sp,20
   4a47c:	f800283a 	ret
   4a480:	81401917 	ldw	r5,100(r16)
   4a484:	00b7ffc4 	movi	r2,-8193
   4a488:	21080014 	ori	r4,r4,8192
   4a48c:	2884703a 	and	r2,r5,r2
   4a490:	80801915 	stw	r2,100(r16)
   4a494:	80800017 	ldw	r2,0(r16)
   4a498:	8100030d 	sth	r4,12(r16)
   4a49c:	81000517 	ldw	r4,20(r16)
   4a4a0:	10c7c83a 	sub	r3,r2,r3
   4a4a4:	193fe016 	blt	r3,r4,4a428 <__alt_data_end+0xfffde508>
   4a4a8:	800b883a 	mov	r5,r16
   4a4ac:	9009883a 	mov	r4,r18
   4a4b0:	00407380 	call	40738 <_fflush_r>
   4a4b4:	1000071e 	bne	r2,zero,4a4d4 <__swbuf_r+0x114>
   4a4b8:	80800017 	ldw	r2,0(r16)
   4a4bc:	00c00044 	movi	r3,1
   4a4c0:	003fda06 	br	4a42c <__alt_data_end+0xfffde50c>
   4a4c4:	800b883a 	mov	r5,r16
   4a4c8:	9009883a 	mov	r4,r18
   4a4cc:	00407380 	call	40738 <_fflush_r>
   4a4d0:	103fe326 	beq	r2,zero,4a460 <__alt_data_end+0xfffde540>
   4a4d4:	00bfffc4 	movi	r2,-1
   4a4d8:	003fe206 	br	4a464 <__alt_data_end+0xfffde544>
   4a4dc:	800b883a 	mov	r5,r16
   4a4e0:	9009883a 	mov	r4,r18
   4a4e4:	0044d340 	call	44d34 <__swsetup_r>
   4a4e8:	103ffa1e 	bne	r2,zero,4a4d4 <__alt_data_end+0xfffde5b4>
   4a4ec:	8100030b 	ldhu	r4,12(r16)
   4a4f0:	80c00417 	ldw	r3,16(r16)
   4a4f4:	003fc506 	br	4a40c <__alt_data_end+0xfffde4ec>
   4a4f8:	0040b240 	call	40b24 <__sinit>
   4a4fc:	003fbc06 	br	4a3f0 <__alt_data_end+0xfffde4d0>

0004a500 <__swbuf>:
   4a500:	00800174 	movhi	r2,5
   4a504:	10897204 	addi	r2,r2,9672
   4a508:	280d883a 	mov	r6,r5
   4a50c:	200b883a 	mov	r5,r4
   4a510:	11000017 	ldw	r4,0(r2)
   4a514:	004a3c01 	jmpi	4a3c0 <__swbuf_r>

0004a518 <_wcrtomb_r>:
   4a518:	defff604 	addi	sp,sp,-40
   4a51c:	00800174 	movhi	r2,5
   4a520:	dc800815 	stw	r18,32(sp)
   4a524:	dc400715 	stw	r17,28(sp)
   4a528:	dc000615 	stw	r16,24(sp)
   4a52c:	10897604 	addi	r2,r2,9688
   4a530:	dfc00915 	stw	ra,36(sp)
   4a534:	2021883a 	mov	r16,r4
   4a538:	3823883a 	mov	r17,r7
   4a53c:	14800017 	ldw	r18,0(r2)
   4a540:	28001426 	beq	r5,zero,4a594 <_wcrtomb_r+0x7c>
   4a544:	d9400415 	stw	r5,16(sp)
   4a548:	d9800515 	stw	r6,20(sp)
   4a54c:	0046dd00 	call	46dd0 <__locale_charset>
   4a550:	d9800517 	ldw	r6,20(sp)
   4a554:	d9400417 	ldw	r5,16(sp)
   4a558:	100f883a 	mov	r7,r2
   4a55c:	dc400015 	stw	r17,0(sp)
   4a560:	8009883a 	mov	r4,r16
   4a564:	903ee83a 	callr	r18
   4a568:	00ffffc4 	movi	r3,-1
   4a56c:	10c0031e 	bne	r2,r3,4a57c <_wcrtomb_r+0x64>
   4a570:	88000015 	stw	zero,0(r17)
   4a574:	00c02284 	movi	r3,138
   4a578:	80c00015 	stw	r3,0(r16)
   4a57c:	dfc00917 	ldw	ra,36(sp)
   4a580:	dc800817 	ldw	r18,32(sp)
   4a584:	dc400717 	ldw	r17,28(sp)
   4a588:	dc000617 	ldw	r16,24(sp)
   4a58c:	dec00a04 	addi	sp,sp,40
   4a590:	f800283a 	ret
   4a594:	0046dd00 	call	46dd0 <__locale_charset>
   4a598:	100f883a 	mov	r7,r2
   4a59c:	dc400015 	stw	r17,0(sp)
   4a5a0:	000d883a 	mov	r6,zero
   4a5a4:	d9400104 	addi	r5,sp,4
   4a5a8:	8009883a 	mov	r4,r16
   4a5ac:	903ee83a 	callr	r18
   4a5b0:	003fed06 	br	4a568 <__alt_data_end+0xfffde648>

0004a5b4 <wcrtomb>:
   4a5b4:	defff604 	addi	sp,sp,-40
   4a5b8:	00800174 	movhi	r2,5
   4a5bc:	dc800615 	stw	r18,24(sp)
   4a5c0:	dc400515 	stw	r17,20(sp)
   4a5c4:	10897204 	addi	r2,r2,9672
   4a5c8:	dfc00915 	stw	ra,36(sp)
   4a5cc:	dd000815 	stw	r20,32(sp)
   4a5d0:	dcc00715 	stw	r19,28(sp)
   4a5d4:	dc000415 	stw	r16,16(sp)
   4a5d8:	3025883a 	mov	r18,r6
   4a5dc:	14400017 	ldw	r17,0(r2)
   4a5e0:	20001926 	beq	r4,zero,4a648 <wcrtomb+0x94>
   4a5e4:	00800174 	movhi	r2,5
   4a5e8:	10897604 	addi	r2,r2,9688
   4a5ec:	15000017 	ldw	r20,0(r2)
   4a5f0:	2021883a 	mov	r16,r4
   4a5f4:	2827883a 	mov	r19,r5
   4a5f8:	0046dd00 	call	46dd0 <__locale_charset>
   4a5fc:	100f883a 	mov	r7,r2
   4a600:	dc800015 	stw	r18,0(sp)
   4a604:	980d883a 	mov	r6,r19
   4a608:	800b883a 	mov	r5,r16
   4a60c:	8809883a 	mov	r4,r17
   4a610:	a03ee83a 	callr	r20
   4a614:	00ffffc4 	movi	r3,-1
   4a618:	10c0031e 	bne	r2,r3,4a628 <wcrtomb+0x74>
   4a61c:	90000015 	stw	zero,0(r18)
   4a620:	00c02284 	movi	r3,138
   4a624:	88c00015 	stw	r3,0(r17)
   4a628:	dfc00917 	ldw	ra,36(sp)
   4a62c:	dd000817 	ldw	r20,32(sp)
   4a630:	dcc00717 	ldw	r19,28(sp)
   4a634:	dc800617 	ldw	r18,24(sp)
   4a638:	dc400517 	ldw	r17,20(sp)
   4a63c:	dc000417 	ldw	r16,16(sp)
   4a640:	dec00a04 	addi	sp,sp,40
   4a644:	f800283a 	ret
   4a648:	00800174 	movhi	r2,5
   4a64c:	10897604 	addi	r2,r2,9688
   4a650:	14000017 	ldw	r16,0(r2)
   4a654:	0046dd00 	call	46dd0 <__locale_charset>
   4a658:	100f883a 	mov	r7,r2
   4a65c:	dc800015 	stw	r18,0(sp)
   4a660:	000d883a 	mov	r6,zero
   4a664:	d9400104 	addi	r5,sp,4
   4a668:	8809883a 	mov	r4,r17
   4a66c:	803ee83a 	callr	r16
   4a670:	003fe806 	br	4a614 <__alt_data_end+0xfffde6f4>

0004a674 <__ascii_wctomb>:
   4a674:	28000526 	beq	r5,zero,4a68c <__ascii_wctomb+0x18>
   4a678:	00803fc4 	movi	r2,255
   4a67c:	11800536 	bltu	r2,r6,4a694 <__ascii_wctomb+0x20>
   4a680:	29800005 	stb	r6,0(r5)
   4a684:	00800044 	movi	r2,1
   4a688:	f800283a 	ret
   4a68c:	0005883a 	mov	r2,zero
   4a690:	f800283a 	ret
   4a694:	00802284 	movi	r2,138
   4a698:	20800015 	stw	r2,0(r4)
   4a69c:	00bfffc4 	movi	r2,-1
   4a6a0:	f800283a 	ret

0004a6a4 <_wctomb_r>:
   4a6a4:	00800174 	movhi	r2,5
   4a6a8:	defff904 	addi	sp,sp,-28
   4a6ac:	10897604 	addi	r2,r2,9688
   4a6b0:	dfc00615 	stw	ra,24(sp)
   4a6b4:	dc400515 	stw	r17,20(sp)
   4a6b8:	dc000415 	stw	r16,16(sp)
   4a6bc:	3823883a 	mov	r17,r7
   4a6c0:	14000017 	ldw	r16,0(r2)
   4a6c4:	d9000115 	stw	r4,4(sp)
   4a6c8:	d9400215 	stw	r5,8(sp)
   4a6cc:	d9800315 	stw	r6,12(sp)
   4a6d0:	0046dd00 	call	46dd0 <__locale_charset>
   4a6d4:	d9800317 	ldw	r6,12(sp)
   4a6d8:	d9400217 	ldw	r5,8(sp)
   4a6dc:	d9000117 	ldw	r4,4(sp)
   4a6e0:	100f883a 	mov	r7,r2
   4a6e4:	dc400015 	stw	r17,0(sp)
   4a6e8:	803ee83a 	callr	r16
   4a6ec:	dfc00617 	ldw	ra,24(sp)
   4a6f0:	dc400517 	ldw	r17,20(sp)
   4a6f4:	dc000417 	ldw	r16,16(sp)
   4a6f8:	dec00704 	addi	sp,sp,28
   4a6fc:	f800283a 	ret

0004a700 <__udivdi3>:
   4a700:	defff404 	addi	sp,sp,-48
   4a704:	dcc00515 	stw	r19,20(sp)
   4a708:	dc000215 	stw	r16,8(sp)
   4a70c:	dfc00b15 	stw	ra,44(sp)
   4a710:	df000a15 	stw	fp,40(sp)
   4a714:	ddc00915 	stw	r23,36(sp)
   4a718:	dd800815 	stw	r22,32(sp)
   4a71c:	dd400715 	stw	r21,28(sp)
   4a720:	dd000615 	stw	r20,24(sp)
   4a724:	dc800415 	stw	r18,16(sp)
   4a728:	dc400315 	stw	r17,12(sp)
   4a72c:	2027883a 	mov	r19,r4
   4a730:	2821883a 	mov	r16,r5
   4a734:	3800461e 	bne	r7,zero,4a850 <__udivdi3+0x150>
   4a738:	3023883a 	mov	r17,r6
   4a73c:	2025883a 	mov	r18,r4
   4a740:	2980572e 	bgeu	r5,r6,4a8a0 <__udivdi3+0x1a0>
   4a744:	00bfffd4 	movui	r2,65535
   4a748:	282d883a 	mov	r22,r5
   4a74c:	1180b236 	bltu	r2,r6,4aa18 <__udivdi3+0x318>
   4a750:	00803fc4 	movi	r2,255
   4a754:	1185803a 	cmpltu	r2,r2,r6
   4a758:	100490fa 	slli	r2,r2,3
   4a75c:	3086d83a 	srl	r3,r6,r2
   4a760:	01000174 	movhi	r4,5
   4a764:	21026a04 	addi	r4,r4,2472
   4a768:	20c7883a 	add	r3,r4,r3
   4a76c:	18c00003 	ldbu	r3,0(r3)
   4a770:	1885883a 	add	r2,r3,r2
   4a774:	00c00804 	movi	r3,32
   4a778:	1887c83a 	sub	r3,r3,r2
   4a77c:	18000526 	beq	r3,zero,4a794 <__udivdi3+0x94>
   4a780:	80e0983a 	sll	r16,r16,r3
   4a784:	9884d83a 	srl	r2,r19,r2
   4a788:	30e2983a 	sll	r17,r6,r3
   4a78c:	98e4983a 	sll	r18,r19,r3
   4a790:	142cb03a 	or	r22,r2,r16
   4a794:	882ad43a 	srli	r21,r17,16
   4a798:	b009883a 	mov	r4,r22
   4a79c:	8d3fffcc 	andi	r20,r17,65535
   4a7a0:	a80b883a 	mov	r5,r21
   4a7a4:	004b41c0 	call	4b41c <__umodsi3>
   4a7a8:	b009883a 	mov	r4,r22
   4a7ac:	a80b883a 	mov	r5,r21
   4a7b0:	1027883a 	mov	r19,r2
   4a7b4:	004b3b80 	call	4b3b8 <__udivsi3>
   4a7b8:	100b883a 	mov	r5,r2
   4a7bc:	a009883a 	mov	r4,r20
   4a7c0:	102d883a 	mov	r22,r2
   4a7c4:	004b4740 	call	4b474 <__mulsi3>
   4a7c8:	9826943a 	slli	r19,r19,16
   4a7cc:	9006d43a 	srli	r3,r18,16
   4a7d0:	1cc6b03a 	or	r3,r3,r19
   4a7d4:	1880052e 	bgeu	r3,r2,4a7ec <__udivdi3+0xec>
   4a7d8:	1c47883a 	add	r3,r3,r17
   4a7dc:	b13fffc4 	addi	r4,r22,-1
   4a7e0:	1c400136 	bltu	r3,r17,4a7e8 <__udivdi3+0xe8>
   4a7e4:	18814236 	bltu	r3,r2,4acf0 <__udivdi3+0x5f0>
   4a7e8:	202d883a 	mov	r22,r4
   4a7ec:	18a1c83a 	sub	r16,r3,r2
   4a7f0:	8009883a 	mov	r4,r16
   4a7f4:	a80b883a 	mov	r5,r21
   4a7f8:	004b41c0 	call	4b41c <__umodsi3>
   4a7fc:	1027883a 	mov	r19,r2
   4a800:	8009883a 	mov	r4,r16
   4a804:	a80b883a 	mov	r5,r21
   4a808:	9826943a 	slli	r19,r19,16
   4a80c:	004b3b80 	call	4b3b8 <__udivsi3>
   4a810:	100b883a 	mov	r5,r2
   4a814:	a009883a 	mov	r4,r20
   4a818:	94bfffcc 	andi	r18,r18,65535
   4a81c:	1021883a 	mov	r16,r2
   4a820:	94e4b03a 	or	r18,r18,r19
   4a824:	004b4740 	call	4b474 <__mulsi3>
   4a828:	9080052e 	bgeu	r18,r2,4a840 <__udivdi3+0x140>
   4a82c:	8ca5883a 	add	r18,r17,r18
   4a830:	80ffffc4 	addi	r3,r16,-1
   4a834:	94410c36 	bltu	r18,r17,4ac68 <__udivdi3+0x568>
   4a838:	90810b2e 	bgeu	r18,r2,4ac68 <__udivdi3+0x568>
   4a83c:	843fff84 	addi	r16,r16,-2
   4a840:	b004943a 	slli	r2,r22,16
   4a844:	0007883a 	mov	r3,zero
   4a848:	1404b03a 	or	r2,r2,r16
   4a84c:	00005e06 	br	4a9c8 <__udivdi3+0x2c8>
   4a850:	29c05b36 	bltu	r5,r7,4a9c0 <__udivdi3+0x2c0>
   4a854:	00bfffd4 	movui	r2,65535
   4a858:	11c0672e 	bgeu	r2,r7,4a9f8 <__udivdi3+0x2f8>
   4a85c:	00804034 	movhi	r2,256
   4a860:	10bfffc4 	addi	r2,r2,-1
   4a864:	11c10a36 	bltu	r2,r7,4ac90 <__udivdi3+0x590>
   4a868:	00800404 	movi	r2,16
   4a86c:	3886d83a 	srl	r3,r7,r2
   4a870:	01000174 	movhi	r4,5
   4a874:	21026a04 	addi	r4,r4,2472
   4a878:	20c7883a 	add	r3,r4,r3
   4a87c:	18c00003 	ldbu	r3,0(r3)
   4a880:	05c00804 	movi	r23,32
   4a884:	1885883a 	add	r2,r3,r2
   4a888:	b8afc83a 	sub	r23,r23,r2
   4a88c:	b800671e 	bne	r23,zero,4aa2c <__udivdi3+0x32c>
   4a890:	3c010536 	bltu	r7,r16,4aca8 <__udivdi3+0x5a8>
   4a894:	9985403a 	cmpgeu	r2,r19,r6
   4a898:	0007883a 	mov	r3,zero
   4a89c:	00004a06 	br	4a9c8 <__udivdi3+0x2c8>
   4a8a0:	3000041e 	bne	r6,zero,4a8b4 <__udivdi3+0x1b4>
   4a8a4:	000b883a 	mov	r5,zero
   4a8a8:	01000044 	movi	r4,1
   4a8ac:	004b3b80 	call	4b3b8 <__udivsi3>
   4a8b0:	1023883a 	mov	r17,r2
   4a8b4:	00bfffd4 	movui	r2,65535
   4a8b8:	1440532e 	bgeu	r2,r17,4aa08 <__udivdi3+0x308>
   4a8bc:	00804034 	movhi	r2,256
   4a8c0:	10bfffc4 	addi	r2,r2,-1
   4a8c4:	1440f436 	bltu	r2,r17,4ac98 <__udivdi3+0x598>
   4a8c8:	00800404 	movi	r2,16
   4a8cc:	8886d83a 	srl	r3,r17,r2
   4a8d0:	01000174 	movhi	r4,5
   4a8d4:	21026a04 	addi	r4,r4,2472
   4a8d8:	20c7883a 	add	r3,r4,r3
   4a8dc:	18c00003 	ldbu	r3,0(r3)
   4a8e0:	1885883a 	add	r2,r3,r2
   4a8e4:	00c00804 	movi	r3,32
   4a8e8:	1887c83a 	sub	r3,r3,r2
   4a8ec:	1800a51e 	bne	r3,zero,4ab84 <__udivdi3+0x484>
   4a8f0:	882ad43a 	srli	r21,r17,16
   4a8f4:	8461c83a 	sub	r16,r16,r17
   4a8f8:	8d3fffcc 	andi	r20,r17,65535
   4a8fc:	00c00044 	movi	r3,1
   4a900:	a80b883a 	mov	r5,r21
   4a904:	8009883a 	mov	r4,r16
   4a908:	d8c00115 	stw	r3,4(sp)
   4a90c:	004b41c0 	call	4b41c <__umodsi3>
   4a910:	a80b883a 	mov	r5,r21
   4a914:	8009883a 	mov	r4,r16
   4a918:	1027883a 	mov	r19,r2
   4a91c:	004b3b80 	call	4b3b8 <__udivsi3>
   4a920:	a00b883a 	mov	r5,r20
   4a924:	1009883a 	mov	r4,r2
   4a928:	102d883a 	mov	r22,r2
   4a92c:	004b4740 	call	4b474 <__mulsi3>
   4a930:	9826943a 	slli	r19,r19,16
   4a934:	900ed43a 	srli	r7,r18,16
   4a938:	d8c00117 	ldw	r3,4(sp)
   4a93c:	3cceb03a 	or	r7,r7,r19
   4a940:	3880052e 	bgeu	r7,r2,4a958 <__udivdi3+0x258>
   4a944:	3c4f883a 	add	r7,r7,r17
   4a948:	b13fffc4 	addi	r4,r22,-1
   4a94c:	3c400136 	bltu	r7,r17,4a954 <__udivdi3+0x254>
   4a950:	3880e436 	bltu	r7,r2,4ace4 <__udivdi3+0x5e4>
   4a954:	202d883a 	mov	r22,r4
   4a958:	38a1c83a 	sub	r16,r7,r2
   4a95c:	8009883a 	mov	r4,r16
   4a960:	a80b883a 	mov	r5,r21
   4a964:	d8c00115 	stw	r3,4(sp)
   4a968:	004b41c0 	call	4b41c <__umodsi3>
   4a96c:	1027883a 	mov	r19,r2
   4a970:	8009883a 	mov	r4,r16
   4a974:	a80b883a 	mov	r5,r21
   4a978:	9826943a 	slli	r19,r19,16
   4a97c:	004b3b80 	call	4b3b8 <__udivsi3>
   4a980:	a00b883a 	mov	r5,r20
   4a984:	1009883a 	mov	r4,r2
   4a988:	94bfffcc 	andi	r18,r18,65535
   4a98c:	1021883a 	mov	r16,r2
   4a990:	94e4b03a 	or	r18,r18,r19
   4a994:	004b4740 	call	4b474 <__mulsi3>
   4a998:	d8c00117 	ldw	r3,4(sp)
   4a99c:	9080052e 	bgeu	r18,r2,4a9b4 <__udivdi3+0x2b4>
   4a9a0:	8ca5883a 	add	r18,r17,r18
   4a9a4:	813fffc4 	addi	r4,r16,-1
   4a9a8:	9440ad36 	bltu	r18,r17,4ac60 <__udivdi3+0x560>
   4a9ac:	9080ac2e 	bgeu	r18,r2,4ac60 <__udivdi3+0x560>
   4a9b0:	843fff84 	addi	r16,r16,-2
   4a9b4:	b004943a 	slli	r2,r22,16
   4a9b8:	1404b03a 	or	r2,r2,r16
   4a9bc:	00000206 	br	4a9c8 <__udivdi3+0x2c8>
   4a9c0:	0007883a 	mov	r3,zero
   4a9c4:	0005883a 	mov	r2,zero
   4a9c8:	dfc00b17 	ldw	ra,44(sp)
   4a9cc:	df000a17 	ldw	fp,40(sp)
   4a9d0:	ddc00917 	ldw	r23,36(sp)
   4a9d4:	dd800817 	ldw	r22,32(sp)
   4a9d8:	dd400717 	ldw	r21,28(sp)
   4a9dc:	dd000617 	ldw	r20,24(sp)
   4a9e0:	dcc00517 	ldw	r19,20(sp)
   4a9e4:	dc800417 	ldw	r18,16(sp)
   4a9e8:	dc400317 	ldw	r17,12(sp)
   4a9ec:	dc000217 	ldw	r16,8(sp)
   4a9f0:	dec00c04 	addi	sp,sp,48
   4a9f4:	f800283a 	ret
   4a9f8:	00803fc4 	movi	r2,255
   4a9fc:	11c5803a 	cmpltu	r2,r2,r7
   4aa00:	100490fa 	slli	r2,r2,3
   4aa04:	003f9906 	br	4a86c <__alt_data_end+0xfffde94c>
   4aa08:	00803fc4 	movi	r2,255
   4aa0c:	1445803a 	cmpltu	r2,r2,r17
   4aa10:	100490fa 	slli	r2,r2,3
   4aa14:	003fad06 	br	4a8cc <__alt_data_end+0xfffde9ac>
   4aa18:	00804034 	movhi	r2,256
   4aa1c:	10bfffc4 	addi	r2,r2,-1
   4aa20:	11809f36 	bltu	r2,r6,4aca0 <__udivdi3+0x5a0>
   4aa24:	00800404 	movi	r2,16
   4aa28:	003f4c06 	br	4a75c <__alt_data_end+0xfffde83c>
   4aa2c:	3dce983a 	sll	r7,r7,r23
   4aa30:	30b8d83a 	srl	fp,r6,r2
   4aa34:	80a2d83a 	srl	r17,r16,r2
   4aa38:	35cc983a 	sll	r6,r6,r23
   4aa3c:	3f38b03a 	or	fp,r7,fp
   4aa40:	e024d43a 	srli	r18,fp,16
   4aa44:	9884d83a 	srl	r2,r19,r2
   4aa48:	85e0983a 	sll	r16,r16,r23
   4aa4c:	8809883a 	mov	r4,r17
   4aa50:	900b883a 	mov	r5,r18
   4aa54:	d9800015 	stw	r6,0(sp)
   4aa58:	1420b03a 	or	r16,r2,r16
   4aa5c:	004b41c0 	call	4b41c <__umodsi3>
   4aa60:	900b883a 	mov	r5,r18
   4aa64:	8809883a 	mov	r4,r17
   4aa68:	1029883a 	mov	r20,r2
   4aa6c:	e5bfffcc 	andi	r22,fp,65535
   4aa70:	004b3b80 	call	4b3b8 <__udivsi3>
   4aa74:	100b883a 	mov	r5,r2
   4aa78:	b009883a 	mov	r4,r22
   4aa7c:	102b883a 	mov	r21,r2
   4aa80:	004b4740 	call	4b474 <__mulsi3>
   4aa84:	a028943a 	slli	r20,r20,16
   4aa88:	8006d43a 	srli	r3,r16,16
   4aa8c:	1d06b03a 	or	r3,r3,r20
   4aa90:	1880042e 	bgeu	r3,r2,4aaa4 <__udivdi3+0x3a4>
   4aa94:	1f07883a 	add	r3,r3,fp
   4aa98:	a93fffc4 	addi	r4,r21,-1
   4aa9c:	1f00892e 	bgeu	r3,fp,4acc4 <__udivdi3+0x5c4>
   4aaa0:	202b883a 	mov	r21,r4
   4aaa4:	18a3c83a 	sub	r17,r3,r2
   4aaa8:	8809883a 	mov	r4,r17
   4aaac:	900b883a 	mov	r5,r18
   4aab0:	004b41c0 	call	4b41c <__umodsi3>
   4aab4:	1029883a 	mov	r20,r2
   4aab8:	8809883a 	mov	r4,r17
   4aabc:	900b883a 	mov	r5,r18
   4aac0:	a028943a 	slli	r20,r20,16
   4aac4:	004b3b80 	call	4b3b8 <__udivsi3>
   4aac8:	100b883a 	mov	r5,r2
   4aacc:	b009883a 	mov	r4,r22
   4aad0:	843fffcc 	andi	r16,r16,65535
   4aad4:	1023883a 	mov	r17,r2
   4aad8:	8520b03a 	or	r16,r16,r20
   4aadc:	004b4740 	call	4b474 <__mulsi3>
   4aae0:	8080042e 	bgeu	r16,r2,4aaf4 <__udivdi3+0x3f4>
   4aae4:	8721883a 	add	r16,r16,fp
   4aae8:	88ffffc4 	addi	r3,r17,-1
   4aaec:	8700712e 	bgeu	r16,fp,4acb4 <__udivdi3+0x5b4>
   4aaf0:	1823883a 	mov	r17,r3
   4aaf4:	a80e943a 	slli	r7,r21,16
   4aaf8:	d8c00017 	ldw	r3,0(sp)
   4aafc:	80a1c83a 	sub	r16,r16,r2
   4ab00:	3c64b03a 	or	r18,r7,r17
   4ab04:	1d3fffcc 	andi	r20,r3,65535
   4ab08:	9022d43a 	srli	r17,r18,16
   4ab0c:	95bfffcc 	andi	r22,r18,65535
   4ab10:	a00b883a 	mov	r5,r20
   4ab14:	b009883a 	mov	r4,r22
   4ab18:	182ad43a 	srli	r21,r3,16
   4ab1c:	004b4740 	call	4b474 <__mulsi3>
   4ab20:	a00b883a 	mov	r5,r20
   4ab24:	8809883a 	mov	r4,r17
   4ab28:	1039883a 	mov	fp,r2
   4ab2c:	004b4740 	call	4b474 <__mulsi3>
   4ab30:	8809883a 	mov	r4,r17
   4ab34:	a80b883a 	mov	r5,r21
   4ab38:	1029883a 	mov	r20,r2
   4ab3c:	004b4740 	call	4b474 <__mulsi3>
   4ab40:	a80b883a 	mov	r5,r21
   4ab44:	b009883a 	mov	r4,r22
   4ab48:	1023883a 	mov	r17,r2
   4ab4c:	004b4740 	call	4b474 <__mulsi3>
   4ab50:	e006d43a 	srli	r3,fp,16
   4ab54:	1505883a 	add	r2,r2,r20
   4ab58:	1887883a 	add	r3,r3,r2
   4ab5c:	1d00022e 	bgeu	r3,r20,4ab68 <__udivdi3+0x468>
   4ab60:	00800074 	movhi	r2,1
   4ab64:	88a3883a 	add	r17,r17,r2
   4ab68:	1804d43a 	srli	r2,r3,16
   4ab6c:	1463883a 	add	r17,r2,r17
   4ab70:	84404436 	bltu	r16,r17,4ac84 <__udivdi3+0x584>
   4ab74:	84403e26 	beq	r16,r17,4ac70 <__udivdi3+0x570>
   4ab78:	9005883a 	mov	r2,r18
   4ab7c:	0007883a 	mov	r3,zero
   4ab80:	003f9106 	br	4a9c8 <__alt_data_end+0xfffdeaa8>
   4ab84:	88e2983a 	sll	r17,r17,r3
   4ab88:	80aed83a 	srl	r23,r16,r2
   4ab8c:	80e0983a 	sll	r16,r16,r3
   4ab90:	882ad43a 	srli	r21,r17,16
   4ab94:	9884d83a 	srl	r2,r19,r2
   4ab98:	b809883a 	mov	r4,r23
   4ab9c:	a80b883a 	mov	r5,r21
   4aba0:	98e4983a 	sll	r18,r19,r3
   4aba4:	142cb03a 	or	r22,r2,r16
   4aba8:	004b41c0 	call	4b41c <__umodsi3>
   4abac:	b809883a 	mov	r4,r23
   4abb0:	a80b883a 	mov	r5,r21
   4abb4:	1027883a 	mov	r19,r2
   4abb8:	8d3fffcc 	andi	r20,r17,65535
   4abbc:	004b3b80 	call	4b3b8 <__udivsi3>
   4abc0:	a009883a 	mov	r4,r20
   4abc4:	100b883a 	mov	r5,r2
   4abc8:	102f883a 	mov	r23,r2
   4abcc:	004b4740 	call	4b474 <__mulsi3>
   4abd0:	9826943a 	slli	r19,r19,16
   4abd4:	b008d43a 	srli	r4,r22,16
   4abd8:	24c8b03a 	or	r4,r4,r19
   4abdc:	2080062e 	bgeu	r4,r2,4abf8 <__udivdi3+0x4f8>
   4abe0:	2449883a 	add	r4,r4,r17
   4abe4:	b8ffffc4 	addi	r3,r23,-1
   4abe8:	24403c36 	bltu	r4,r17,4acdc <__udivdi3+0x5dc>
   4abec:	20803b2e 	bgeu	r4,r2,4acdc <__udivdi3+0x5dc>
   4abf0:	bdffff84 	addi	r23,r23,-2
   4abf4:	2449883a 	add	r4,r4,r17
   4abf8:	20a1c83a 	sub	r16,r4,r2
   4abfc:	a80b883a 	mov	r5,r21
   4ac00:	8009883a 	mov	r4,r16
   4ac04:	004b41c0 	call	4b41c <__umodsi3>
   4ac08:	a80b883a 	mov	r5,r21
   4ac0c:	8009883a 	mov	r4,r16
   4ac10:	1027883a 	mov	r19,r2
   4ac14:	004b3b80 	call	4b3b8 <__udivsi3>
   4ac18:	a009883a 	mov	r4,r20
   4ac1c:	100b883a 	mov	r5,r2
   4ac20:	9826943a 	slli	r19,r19,16
   4ac24:	1039883a 	mov	fp,r2
   4ac28:	004b4740 	call	4b474 <__mulsi3>
   4ac2c:	b13fffcc 	andi	r4,r22,65535
   4ac30:	24c8b03a 	or	r4,r4,r19
   4ac34:	2080062e 	bgeu	r4,r2,4ac50 <__udivdi3+0x550>
   4ac38:	2449883a 	add	r4,r4,r17
   4ac3c:	e0ffffc4 	addi	r3,fp,-1
   4ac40:	24402436 	bltu	r4,r17,4acd4 <__udivdi3+0x5d4>
   4ac44:	2080232e 	bgeu	r4,r2,4acd4 <__udivdi3+0x5d4>
   4ac48:	e73fff84 	addi	fp,fp,-2
   4ac4c:	2449883a 	add	r4,r4,r17
   4ac50:	b82e943a 	slli	r23,r23,16
   4ac54:	20a1c83a 	sub	r16,r4,r2
   4ac58:	bf06b03a 	or	r3,r23,fp
   4ac5c:	003f2806 	br	4a900 <__alt_data_end+0xfffde9e0>
   4ac60:	2021883a 	mov	r16,r4
   4ac64:	003f5306 	br	4a9b4 <__alt_data_end+0xfffdea94>
   4ac68:	1821883a 	mov	r16,r3
   4ac6c:	003ef406 	br	4a840 <__alt_data_end+0xfffde920>
   4ac70:	1806943a 	slli	r3,r3,16
   4ac74:	9de6983a 	sll	r19,r19,r23
   4ac78:	e73fffcc 	andi	fp,fp,65535
   4ac7c:	1f07883a 	add	r3,r3,fp
   4ac80:	98ffbd2e 	bgeu	r19,r3,4ab78 <__alt_data_end+0xfffdec58>
   4ac84:	90bfffc4 	addi	r2,r18,-1
   4ac88:	0007883a 	mov	r3,zero
   4ac8c:	003f4e06 	br	4a9c8 <__alt_data_end+0xfffdeaa8>
   4ac90:	00800604 	movi	r2,24
   4ac94:	003ef506 	br	4a86c <__alt_data_end+0xfffde94c>
   4ac98:	00800604 	movi	r2,24
   4ac9c:	003f0b06 	br	4a8cc <__alt_data_end+0xfffde9ac>
   4aca0:	00800604 	movi	r2,24
   4aca4:	003ead06 	br	4a75c <__alt_data_end+0xfffde83c>
   4aca8:	0007883a 	mov	r3,zero
   4acac:	00800044 	movi	r2,1
   4acb0:	003f4506 	br	4a9c8 <__alt_data_end+0xfffdeaa8>
   4acb4:	80bf8e2e 	bgeu	r16,r2,4aaf0 <__alt_data_end+0xfffdebd0>
   4acb8:	8c7fff84 	addi	r17,r17,-2
   4acbc:	8721883a 	add	r16,r16,fp
   4acc0:	003f8c06 	br	4aaf4 <__alt_data_end+0xfffdebd4>
   4acc4:	18bf762e 	bgeu	r3,r2,4aaa0 <__alt_data_end+0xfffdeb80>
   4acc8:	ad7fff84 	addi	r21,r21,-2
   4accc:	1f07883a 	add	r3,r3,fp
   4acd0:	003f7406 	br	4aaa4 <__alt_data_end+0xfffdeb84>
   4acd4:	1839883a 	mov	fp,r3
   4acd8:	003fdd06 	br	4ac50 <__alt_data_end+0xfffded30>
   4acdc:	182f883a 	mov	r23,r3
   4ace0:	003fc506 	br	4abf8 <__alt_data_end+0xfffdecd8>
   4ace4:	b5bfff84 	addi	r22,r22,-2
   4ace8:	3c4f883a 	add	r7,r7,r17
   4acec:	003f1a06 	br	4a958 <__alt_data_end+0xfffdea38>
   4acf0:	b5bfff84 	addi	r22,r22,-2
   4acf4:	1c47883a 	add	r3,r3,r17
   4acf8:	003ebc06 	br	4a7ec <__alt_data_end+0xfffde8cc>

0004acfc <__umoddi3>:
   4acfc:	defff304 	addi	sp,sp,-52
   4ad00:	df000b15 	stw	fp,44(sp)
   4ad04:	dc400415 	stw	r17,16(sp)
   4ad08:	dc000315 	stw	r16,12(sp)
   4ad0c:	dfc00c15 	stw	ra,48(sp)
   4ad10:	ddc00a15 	stw	r23,40(sp)
   4ad14:	dd800915 	stw	r22,36(sp)
   4ad18:	dd400815 	stw	r21,32(sp)
   4ad1c:	dd000715 	stw	r20,28(sp)
   4ad20:	dcc00615 	stw	r19,24(sp)
   4ad24:	dc800515 	stw	r18,20(sp)
   4ad28:	2021883a 	mov	r16,r4
   4ad2c:	2823883a 	mov	r17,r5
   4ad30:	2839883a 	mov	fp,r5
   4ad34:	3800401e 	bne	r7,zero,4ae38 <__umoddi3+0x13c>
   4ad38:	3027883a 	mov	r19,r6
   4ad3c:	2029883a 	mov	r20,r4
   4ad40:	2980552e 	bgeu	r5,r6,4ae98 <__umoddi3+0x19c>
   4ad44:	00bfffd4 	movui	r2,65535
   4ad48:	1180a236 	bltu	r2,r6,4afd4 <__umoddi3+0x2d8>
   4ad4c:	01003fc4 	movi	r4,255
   4ad50:	2189803a 	cmpltu	r4,r4,r6
   4ad54:	200890fa 	slli	r4,r4,3
   4ad58:	3104d83a 	srl	r2,r6,r4
   4ad5c:	00c00174 	movhi	r3,5
   4ad60:	18c26a04 	addi	r3,r3,2472
   4ad64:	1885883a 	add	r2,r3,r2
   4ad68:	10c00003 	ldbu	r3,0(r2)
   4ad6c:	00800804 	movi	r2,32
   4ad70:	1909883a 	add	r4,r3,r4
   4ad74:	1125c83a 	sub	r18,r2,r4
   4ad78:	90000526 	beq	r18,zero,4ad90 <__umoddi3+0x94>
   4ad7c:	8ca2983a 	sll	r17,r17,r18
   4ad80:	8108d83a 	srl	r4,r16,r4
   4ad84:	34a6983a 	sll	r19,r6,r18
   4ad88:	84a8983a 	sll	r20,r16,r18
   4ad8c:	2478b03a 	or	fp,r4,r17
   4ad90:	982cd43a 	srli	r22,r19,16
   4ad94:	e009883a 	mov	r4,fp
   4ad98:	9dffffcc 	andi	r23,r19,65535
   4ad9c:	b00b883a 	mov	r5,r22
   4ada0:	004b41c0 	call	4b41c <__umodsi3>
   4ada4:	b00b883a 	mov	r5,r22
   4ada8:	e009883a 	mov	r4,fp
   4adac:	102b883a 	mov	r21,r2
   4adb0:	004b3b80 	call	4b3b8 <__udivsi3>
   4adb4:	100b883a 	mov	r5,r2
   4adb8:	b809883a 	mov	r4,r23
   4adbc:	004b4740 	call	4b474 <__mulsi3>
   4adc0:	a82a943a 	slli	r21,r21,16
   4adc4:	a006d43a 	srli	r3,r20,16
   4adc8:	1d46b03a 	or	r3,r3,r21
   4adcc:	1880032e 	bgeu	r3,r2,4addc <__umoddi3+0xe0>
   4add0:	1cc7883a 	add	r3,r3,r19
   4add4:	1cc00136 	bltu	r3,r19,4addc <__umoddi3+0xe0>
   4add8:	18813136 	bltu	r3,r2,4b2a0 <__umoddi3+0x5a4>
   4addc:	18a1c83a 	sub	r16,r3,r2
   4ade0:	b00b883a 	mov	r5,r22
   4ade4:	8009883a 	mov	r4,r16
   4ade8:	004b41c0 	call	4b41c <__umodsi3>
   4adec:	b00b883a 	mov	r5,r22
   4adf0:	8009883a 	mov	r4,r16
   4adf4:	1023883a 	mov	r17,r2
   4adf8:	004b3b80 	call	4b3b8 <__udivsi3>
   4adfc:	100b883a 	mov	r5,r2
   4ae00:	b809883a 	mov	r4,r23
   4ae04:	8822943a 	slli	r17,r17,16
   4ae08:	004b4740 	call	4b474 <__mulsi3>
   4ae0c:	a0ffffcc 	andi	r3,r20,65535
   4ae10:	1c46b03a 	or	r3,r3,r17
   4ae14:	1880042e 	bgeu	r3,r2,4ae28 <__umoddi3+0x12c>
   4ae18:	1cc7883a 	add	r3,r3,r19
   4ae1c:	1cc00236 	bltu	r3,r19,4ae28 <__umoddi3+0x12c>
   4ae20:	1880012e 	bgeu	r3,r2,4ae28 <__umoddi3+0x12c>
   4ae24:	1cc7883a 	add	r3,r3,r19
   4ae28:	1885c83a 	sub	r2,r3,r2
   4ae2c:	1484d83a 	srl	r2,r2,r18
   4ae30:	0007883a 	mov	r3,zero
   4ae34:	00005306 	br	4af84 <__umoddi3+0x288>
   4ae38:	29c05036 	bltu	r5,r7,4af7c <__umoddi3+0x280>
   4ae3c:	00bfffd4 	movui	r2,65535
   4ae40:	11c05c2e 	bgeu	r2,r7,4afb4 <__umoddi3+0x2b8>
   4ae44:	00804034 	movhi	r2,256
   4ae48:	10bfffc4 	addi	r2,r2,-1
   4ae4c:	11c10636 	bltu	r2,r7,4b268 <__umoddi3+0x56c>
   4ae50:	01000404 	movi	r4,16
   4ae54:	3904d83a 	srl	r2,r7,r4
   4ae58:	00c00174 	movhi	r3,5
   4ae5c:	18c26a04 	addi	r3,r3,2472
   4ae60:	1885883a 	add	r2,r3,r2
   4ae64:	14c00003 	ldbu	r19,0(r2)
   4ae68:	00c00804 	movi	r3,32
   4ae6c:	9927883a 	add	r19,r19,r4
   4ae70:	1ce9c83a 	sub	r20,r3,r19
   4ae74:	a0005c1e 	bne	r20,zero,4afe8 <__umoddi3+0x2ec>
   4ae78:	3c400136 	bltu	r7,r17,4ae80 <__umoddi3+0x184>
   4ae7c:	81810a36 	bltu	r16,r6,4b2a8 <__umoddi3+0x5ac>
   4ae80:	8185c83a 	sub	r2,r16,r6
   4ae84:	89e3c83a 	sub	r17,r17,r7
   4ae88:	8089803a 	cmpltu	r4,r16,r2
   4ae8c:	8939c83a 	sub	fp,r17,r4
   4ae90:	e007883a 	mov	r3,fp
   4ae94:	00003b06 	br	4af84 <__umoddi3+0x288>
   4ae98:	3000041e 	bne	r6,zero,4aeac <__umoddi3+0x1b0>
   4ae9c:	000b883a 	mov	r5,zero
   4aea0:	01000044 	movi	r4,1
   4aea4:	004b3b80 	call	4b3b8 <__udivsi3>
   4aea8:	1027883a 	mov	r19,r2
   4aeac:	00bfffd4 	movui	r2,65535
   4aeb0:	14c0442e 	bgeu	r2,r19,4afc4 <__umoddi3+0x2c8>
   4aeb4:	00804034 	movhi	r2,256
   4aeb8:	10bfffc4 	addi	r2,r2,-1
   4aebc:	14c0ec36 	bltu	r2,r19,4b270 <__umoddi3+0x574>
   4aec0:	00800404 	movi	r2,16
   4aec4:	9886d83a 	srl	r3,r19,r2
   4aec8:	01000174 	movhi	r4,5
   4aecc:	21026a04 	addi	r4,r4,2472
   4aed0:	20c7883a 	add	r3,r4,r3
   4aed4:	18c00003 	ldbu	r3,0(r3)
   4aed8:	1887883a 	add	r3,r3,r2
   4aedc:	00800804 	movi	r2,32
   4aee0:	10e5c83a 	sub	r18,r2,r3
   4aee4:	9000ab1e 	bne	r18,zero,4b194 <__umoddi3+0x498>
   4aee8:	982cd43a 	srli	r22,r19,16
   4aeec:	8ce3c83a 	sub	r17,r17,r19
   4aef0:	9dffffcc 	andi	r23,r19,65535
   4aef4:	b00b883a 	mov	r5,r22
   4aef8:	8809883a 	mov	r4,r17
   4aefc:	004b41c0 	call	4b41c <__umodsi3>
   4af00:	b00b883a 	mov	r5,r22
   4af04:	8809883a 	mov	r4,r17
   4af08:	102b883a 	mov	r21,r2
   4af0c:	004b3b80 	call	4b3b8 <__udivsi3>
   4af10:	b80b883a 	mov	r5,r23
   4af14:	1009883a 	mov	r4,r2
   4af18:	004b4740 	call	4b474 <__mulsi3>
   4af1c:	a82a943a 	slli	r21,r21,16
   4af20:	a006d43a 	srli	r3,r20,16
   4af24:	1d46b03a 	or	r3,r3,r21
   4af28:	1880042e 	bgeu	r3,r2,4af3c <__umoddi3+0x240>
   4af2c:	1cc7883a 	add	r3,r3,r19
   4af30:	1cc00236 	bltu	r3,r19,4af3c <__umoddi3+0x240>
   4af34:	1880012e 	bgeu	r3,r2,4af3c <__umoddi3+0x240>
   4af38:	1cc7883a 	add	r3,r3,r19
   4af3c:	18a1c83a 	sub	r16,r3,r2
   4af40:	b00b883a 	mov	r5,r22
   4af44:	8009883a 	mov	r4,r16
   4af48:	004b41c0 	call	4b41c <__umodsi3>
   4af4c:	1023883a 	mov	r17,r2
   4af50:	b00b883a 	mov	r5,r22
   4af54:	8009883a 	mov	r4,r16
   4af58:	004b3b80 	call	4b3b8 <__udivsi3>
   4af5c:	8822943a 	slli	r17,r17,16
   4af60:	b80b883a 	mov	r5,r23
   4af64:	1009883a 	mov	r4,r2
   4af68:	004b4740 	call	4b474 <__mulsi3>
   4af6c:	a53fffcc 	andi	r20,r20,65535
   4af70:	a446b03a 	or	r3,r20,r17
   4af74:	18bfac2e 	bgeu	r3,r2,4ae28 <__alt_data_end+0xfffdef08>
   4af78:	003fa706 	br	4ae18 <__alt_data_end+0xfffdeef8>
   4af7c:	2005883a 	mov	r2,r4
   4af80:	2807883a 	mov	r3,r5
   4af84:	dfc00c17 	ldw	ra,48(sp)
   4af88:	df000b17 	ldw	fp,44(sp)
   4af8c:	ddc00a17 	ldw	r23,40(sp)
   4af90:	dd800917 	ldw	r22,36(sp)
   4af94:	dd400817 	ldw	r21,32(sp)
   4af98:	dd000717 	ldw	r20,28(sp)
   4af9c:	dcc00617 	ldw	r19,24(sp)
   4afa0:	dc800517 	ldw	r18,20(sp)
   4afa4:	dc400417 	ldw	r17,16(sp)
   4afa8:	dc000317 	ldw	r16,12(sp)
   4afac:	dec00d04 	addi	sp,sp,52
   4afb0:	f800283a 	ret
   4afb4:	04c03fc4 	movi	r19,255
   4afb8:	99c9803a 	cmpltu	r4,r19,r7
   4afbc:	200890fa 	slli	r4,r4,3
   4afc0:	003fa406 	br	4ae54 <__alt_data_end+0xfffdef34>
   4afc4:	00803fc4 	movi	r2,255
   4afc8:	14c5803a 	cmpltu	r2,r2,r19
   4afcc:	100490fa 	slli	r2,r2,3
   4afd0:	003fbc06 	br	4aec4 <__alt_data_end+0xfffdefa4>
   4afd4:	00804034 	movhi	r2,256
   4afd8:	10bfffc4 	addi	r2,r2,-1
   4afdc:	1180a636 	bltu	r2,r6,4b278 <__umoddi3+0x57c>
   4afe0:	01000404 	movi	r4,16
   4afe4:	003f5c06 	br	4ad58 <__alt_data_end+0xfffdee38>
   4afe8:	3d0e983a 	sll	r7,r7,r20
   4afec:	34ead83a 	srl	r21,r6,r19
   4aff0:	8cc6d83a 	srl	r3,r17,r19
   4aff4:	8d10983a 	sll	r8,r17,r20
   4aff8:	3d6ab03a 	or	r21,r7,r21
   4affc:	a82cd43a 	srli	r22,r21,16
   4b000:	84e2d83a 	srl	r17,r16,r19
   4b004:	1809883a 	mov	r4,r3
   4b008:	b00b883a 	mov	r5,r22
   4b00c:	8a22b03a 	or	r17,r17,r8
   4b010:	3524983a 	sll	r18,r6,r20
   4b014:	dc400015 	stw	r17,0(sp)
   4b018:	d8c00115 	stw	r3,4(sp)
   4b01c:	004b41c0 	call	4b41c <__umodsi3>
   4b020:	d8c00117 	ldw	r3,4(sp)
   4b024:	b00b883a 	mov	r5,r22
   4b028:	1039883a 	mov	fp,r2
   4b02c:	1809883a 	mov	r4,r3
   4b030:	004b3b80 	call	4b3b8 <__udivsi3>
   4b034:	adffffcc 	andi	r23,r21,65535
   4b038:	100b883a 	mov	r5,r2
   4b03c:	b809883a 	mov	r4,r23
   4b040:	1023883a 	mov	r17,r2
   4b044:	004b4740 	call	4b474 <__mulsi3>
   4b048:	d9400017 	ldw	r5,0(sp)
   4b04c:	e008943a 	slli	r4,fp,16
   4b050:	8520983a 	sll	r16,r16,r20
   4b054:	2806d43a 	srli	r3,r5,16
   4b058:	1906b03a 	or	r3,r3,r4
   4b05c:	1880042e 	bgeu	r3,r2,4b070 <__umoddi3+0x374>
   4b060:	1d47883a 	add	r3,r3,r21
   4b064:	893fffc4 	addi	r4,r17,-1
   4b068:	1d40892e 	bgeu	r3,r21,4b290 <__umoddi3+0x594>
   4b06c:	2023883a 	mov	r17,r4
   4b070:	18b9c83a 	sub	fp,r3,r2
   4b074:	b00b883a 	mov	r5,r22
   4b078:	e009883a 	mov	r4,fp
   4b07c:	004b41c0 	call	4b41c <__umodsi3>
   4b080:	b00b883a 	mov	r5,r22
   4b084:	e009883a 	mov	r4,fp
   4b088:	d8800215 	stw	r2,8(sp)
   4b08c:	004b3b80 	call	4b3b8 <__udivsi3>
   4b090:	100b883a 	mov	r5,r2
   4b094:	b809883a 	mov	r4,r23
   4b098:	102d883a 	mov	r22,r2
   4b09c:	004b4740 	call	4b474 <__mulsi3>
   4b0a0:	d9800217 	ldw	r6,8(sp)
   4b0a4:	d8c00017 	ldw	r3,0(sp)
   4b0a8:	300c943a 	slli	r6,r6,16
   4b0ac:	1a3fffcc 	andi	r8,r3,65535
   4b0b0:	4190b03a 	or	r8,r8,r6
   4b0b4:	4080042e 	bgeu	r8,r2,4b0c8 <__umoddi3+0x3cc>
   4b0b8:	4551883a 	add	r8,r8,r21
   4b0bc:	b0ffffc4 	addi	r3,r22,-1
   4b0c0:	45406f2e 	bgeu	r8,r21,4b280 <__umoddi3+0x584>
   4b0c4:	182d883a 	mov	r22,r3
   4b0c8:	880e943a 	slli	r7,r17,16
   4b0cc:	9006d43a 	srli	r3,r18,16
   4b0d0:	91bfffcc 	andi	r6,r18,65535
   4b0d4:	3dacb03a 	or	r22,r7,r22
   4b0d8:	b02ed43a 	srli	r23,r22,16
   4b0dc:	b5bfffcc 	andi	r22,r22,65535
   4b0e0:	300b883a 	mov	r5,r6
   4b0e4:	b009883a 	mov	r4,r22
   4b0e8:	40a3c83a 	sub	r17,r8,r2
   4b0ec:	d8c00115 	stw	r3,4(sp)
   4b0f0:	d9800215 	stw	r6,8(sp)
   4b0f4:	004b4740 	call	4b474 <__mulsi3>
   4b0f8:	d9800217 	ldw	r6,8(sp)
   4b0fc:	b809883a 	mov	r4,r23
   4b100:	1039883a 	mov	fp,r2
   4b104:	300b883a 	mov	r5,r6
   4b108:	004b4740 	call	4b474 <__mulsi3>
   4b10c:	d8c00117 	ldw	r3,4(sp)
   4b110:	b809883a 	mov	r4,r23
   4b114:	d8800215 	stw	r2,8(sp)
   4b118:	180b883a 	mov	r5,r3
   4b11c:	004b4740 	call	4b474 <__mulsi3>
   4b120:	d8c00117 	ldw	r3,4(sp)
   4b124:	b009883a 	mov	r4,r22
   4b128:	102f883a 	mov	r23,r2
   4b12c:	180b883a 	mov	r5,r3
   4b130:	004b4740 	call	4b474 <__mulsi3>
   4b134:	d9800217 	ldw	r6,8(sp)
   4b138:	e006d43a 	srli	r3,fp,16
   4b13c:	1185883a 	add	r2,r2,r6
   4b140:	1885883a 	add	r2,r3,r2
   4b144:	1180022e 	bgeu	r2,r6,4b150 <__umoddi3+0x454>
   4b148:	00c00074 	movhi	r3,1
   4b14c:	b8ef883a 	add	r23,r23,r3
   4b150:	1006d43a 	srli	r3,r2,16
   4b154:	1004943a 	slli	r2,r2,16
   4b158:	e73fffcc 	andi	fp,fp,65535
   4b15c:	1dc7883a 	add	r3,r3,r23
   4b160:	1739883a 	add	fp,r2,fp
   4b164:	88c03a36 	bltu	r17,r3,4b250 <__umoddi3+0x554>
   4b168:	88c05126 	beq	r17,r3,4b2b0 <__umoddi3+0x5b4>
   4b16c:	88c9c83a 	sub	r4,r17,r3
   4b170:	e00f883a 	mov	r7,fp
   4b174:	81cfc83a 	sub	r7,r16,r7
   4b178:	81c7803a 	cmpltu	r3,r16,r7
   4b17c:	20c7c83a 	sub	r3,r4,r3
   4b180:	1cc4983a 	sll	r2,r3,r19
   4b184:	3d0ed83a 	srl	r7,r7,r20
   4b188:	1d06d83a 	srl	r3,r3,r20
   4b18c:	11c4b03a 	or	r2,r2,r7
   4b190:	003f7c06 	br	4af84 <__alt_data_end+0xfffdf064>
   4b194:	9ca6983a 	sll	r19,r19,r18
   4b198:	88f8d83a 	srl	fp,r17,r3
   4b19c:	80c4d83a 	srl	r2,r16,r3
   4b1a0:	982cd43a 	srli	r22,r19,16
   4b1a4:	8ca2983a 	sll	r17,r17,r18
   4b1a8:	e009883a 	mov	r4,fp
   4b1ac:	b00b883a 	mov	r5,r22
   4b1b0:	146ab03a 	or	r21,r2,r17
   4b1b4:	004b41c0 	call	4b41c <__umodsi3>
   4b1b8:	b00b883a 	mov	r5,r22
   4b1bc:	e009883a 	mov	r4,fp
   4b1c0:	1029883a 	mov	r20,r2
   4b1c4:	9dffffcc 	andi	r23,r19,65535
   4b1c8:	004b3b80 	call	4b3b8 <__udivsi3>
   4b1cc:	b809883a 	mov	r4,r23
   4b1d0:	100b883a 	mov	r5,r2
   4b1d4:	004b4740 	call	4b474 <__mulsi3>
   4b1d8:	a008943a 	slli	r4,r20,16
   4b1dc:	a806d43a 	srli	r3,r21,16
   4b1e0:	84a8983a 	sll	r20,r16,r18
   4b1e4:	1906b03a 	or	r3,r3,r4
   4b1e8:	1880042e 	bgeu	r3,r2,4b1fc <__umoddi3+0x500>
   4b1ec:	1cc7883a 	add	r3,r3,r19
   4b1f0:	1cc00236 	bltu	r3,r19,4b1fc <__umoddi3+0x500>
   4b1f4:	1880012e 	bgeu	r3,r2,4b1fc <__umoddi3+0x500>
   4b1f8:	1cc7883a 	add	r3,r3,r19
   4b1fc:	18a3c83a 	sub	r17,r3,r2
   4b200:	b00b883a 	mov	r5,r22
   4b204:	8809883a 	mov	r4,r17
   4b208:	004b41c0 	call	4b41c <__umodsi3>
   4b20c:	b00b883a 	mov	r5,r22
   4b210:	8809883a 	mov	r4,r17
   4b214:	1021883a 	mov	r16,r2
   4b218:	004b3b80 	call	4b3b8 <__udivsi3>
   4b21c:	100b883a 	mov	r5,r2
   4b220:	b809883a 	mov	r4,r23
   4b224:	8020943a 	slli	r16,r16,16
   4b228:	004b4740 	call	4b474 <__mulsi3>
   4b22c:	a8ffffcc 	andi	r3,r21,65535
   4b230:	1c06b03a 	or	r3,r3,r16
   4b234:	1880042e 	bgeu	r3,r2,4b248 <__umoddi3+0x54c>
   4b238:	1cc7883a 	add	r3,r3,r19
   4b23c:	1cc00236 	bltu	r3,r19,4b248 <__umoddi3+0x54c>
   4b240:	1880012e 	bgeu	r3,r2,4b248 <__umoddi3+0x54c>
   4b244:	1cc7883a 	add	r3,r3,r19
   4b248:	18a3c83a 	sub	r17,r3,r2
   4b24c:	003f2906 	br	4aef4 <__alt_data_end+0xfffdefd4>
   4b250:	e48fc83a 	sub	r7,fp,r18
   4b254:	1d49c83a 	sub	r4,r3,r21
   4b258:	e1f9803a 	cmpltu	fp,fp,r7
   4b25c:	2739c83a 	sub	fp,r4,fp
   4b260:	8f09c83a 	sub	r4,r17,fp
   4b264:	003fc306 	br	4b174 <__alt_data_end+0xfffdf254>
   4b268:	01000604 	movi	r4,24
   4b26c:	003ef906 	br	4ae54 <__alt_data_end+0xfffdef34>
   4b270:	00800604 	movi	r2,24
   4b274:	003f1306 	br	4aec4 <__alt_data_end+0xfffdefa4>
   4b278:	01000604 	movi	r4,24
   4b27c:	003eb606 	br	4ad58 <__alt_data_end+0xfffdee38>
   4b280:	40bf902e 	bgeu	r8,r2,4b0c4 <__alt_data_end+0xfffdf1a4>
   4b284:	b5bfff84 	addi	r22,r22,-2
   4b288:	4551883a 	add	r8,r8,r21
   4b28c:	003f8e06 	br	4b0c8 <__alt_data_end+0xfffdf1a8>
   4b290:	18bf762e 	bgeu	r3,r2,4b06c <__alt_data_end+0xfffdf14c>
   4b294:	8c7fff84 	addi	r17,r17,-2
   4b298:	1d47883a 	add	r3,r3,r21
   4b29c:	003f7406 	br	4b070 <__alt_data_end+0xfffdf150>
   4b2a0:	1cc7883a 	add	r3,r3,r19
   4b2a4:	003ecd06 	br	4addc <__alt_data_end+0xfffdeebc>
   4b2a8:	8005883a 	mov	r2,r16
   4b2ac:	003ef806 	br	4ae90 <__alt_data_end+0xfffdef70>
   4b2b0:	873fe736 	bltu	r16,fp,4b250 <__alt_data_end+0xfffdf330>
   4b2b4:	e00f883a 	mov	r7,fp
   4b2b8:	0009883a 	mov	r4,zero
   4b2bc:	003fad06 	br	4b174 <__alt_data_end+0xfffdf254>

0004b2c0 <__divsi3>:
   4b2c0:	20001b16 	blt	r4,zero,4b330 <__divsi3+0x70>
   4b2c4:	000f883a 	mov	r7,zero
   4b2c8:	28001616 	blt	r5,zero,4b324 <__divsi3+0x64>
   4b2cc:	200d883a 	mov	r6,r4
   4b2d0:	29001a2e 	bgeu	r5,r4,4b33c <__divsi3+0x7c>
   4b2d4:	00800804 	movi	r2,32
   4b2d8:	00c00044 	movi	r3,1
   4b2dc:	00000106 	br	4b2e4 <__divsi3+0x24>
   4b2e0:	10000d26 	beq	r2,zero,4b318 <__divsi3+0x58>
   4b2e4:	294b883a 	add	r5,r5,r5
   4b2e8:	10bfffc4 	addi	r2,r2,-1
   4b2ec:	18c7883a 	add	r3,r3,r3
   4b2f0:	293ffb36 	bltu	r5,r4,4b2e0 <__alt_data_end+0xfffdf3c0>
   4b2f4:	0005883a 	mov	r2,zero
   4b2f8:	18000726 	beq	r3,zero,4b318 <__divsi3+0x58>
   4b2fc:	0005883a 	mov	r2,zero
   4b300:	31400236 	bltu	r6,r5,4b30c <__divsi3+0x4c>
   4b304:	314dc83a 	sub	r6,r6,r5
   4b308:	10c4b03a 	or	r2,r2,r3
   4b30c:	1806d07a 	srli	r3,r3,1
   4b310:	280ad07a 	srli	r5,r5,1
   4b314:	183ffa1e 	bne	r3,zero,4b300 <__alt_data_end+0xfffdf3e0>
   4b318:	38000126 	beq	r7,zero,4b320 <__divsi3+0x60>
   4b31c:	0085c83a 	sub	r2,zero,r2
   4b320:	f800283a 	ret
   4b324:	014bc83a 	sub	r5,zero,r5
   4b328:	39c0005c 	xori	r7,r7,1
   4b32c:	003fe706 	br	4b2cc <__alt_data_end+0xfffdf3ac>
   4b330:	0109c83a 	sub	r4,zero,r4
   4b334:	01c00044 	movi	r7,1
   4b338:	003fe306 	br	4b2c8 <__alt_data_end+0xfffdf3a8>
   4b33c:	00c00044 	movi	r3,1
   4b340:	003fee06 	br	4b2fc <__alt_data_end+0xfffdf3dc>

0004b344 <__modsi3>:
   4b344:	20001716 	blt	r4,zero,4b3a4 <__modsi3+0x60>
   4b348:	000f883a 	mov	r7,zero
   4b34c:	2005883a 	mov	r2,r4
   4b350:	28001216 	blt	r5,zero,4b39c <__modsi3+0x58>
   4b354:	2900162e 	bgeu	r5,r4,4b3b0 <__modsi3+0x6c>
   4b358:	01800804 	movi	r6,32
   4b35c:	00c00044 	movi	r3,1
   4b360:	00000106 	br	4b368 <__modsi3+0x24>
   4b364:	30000a26 	beq	r6,zero,4b390 <__modsi3+0x4c>
   4b368:	294b883a 	add	r5,r5,r5
   4b36c:	31bfffc4 	addi	r6,r6,-1
   4b370:	18c7883a 	add	r3,r3,r3
   4b374:	293ffb36 	bltu	r5,r4,4b364 <__alt_data_end+0xfffdf444>
   4b378:	18000526 	beq	r3,zero,4b390 <__modsi3+0x4c>
   4b37c:	1806d07a 	srli	r3,r3,1
   4b380:	11400136 	bltu	r2,r5,4b388 <__modsi3+0x44>
   4b384:	1145c83a 	sub	r2,r2,r5
   4b388:	280ad07a 	srli	r5,r5,1
   4b38c:	183ffb1e 	bne	r3,zero,4b37c <__alt_data_end+0xfffdf45c>
   4b390:	38000126 	beq	r7,zero,4b398 <__modsi3+0x54>
   4b394:	0085c83a 	sub	r2,zero,r2
   4b398:	f800283a 	ret
   4b39c:	014bc83a 	sub	r5,zero,r5
   4b3a0:	003fec06 	br	4b354 <__alt_data_end+0xfffdf434>
   4b3a4:	0109c83a 	sub	r4,zero,r4
   4b3a8:	01c00044 	movi	r7,1
   4b3ac:	003fe706 	br	4b34c <__alt_data_end+0xfffdf42c>
   4b3b0:	00c00044 	movi	r3,1
   4b3b4:	003ff106 	br	4b37c <__alt_data_end+0xfffdf45c>

0004b3b8 <__udivsi3>:
   4b3b8:	200d883a 	mov	r6,r4
   4b3bc:	2900152e 	bgeu	r5,r4,4b414 <__udivsi3+0x5c>
   4b3c0:	28001416 	blt	r5,zero,4b414 <__udivsi3+0x5c>
   4b3c4:	00800804 	movi	r2,32
   4b3c8:	00c00044 	movi	r3,1
   4b3cc:	00000206 	br	4b3d8 <__udivsi3+0x20>
   4b3d0:	10000e26 	beq	r2,zero,4b40c <__udivsi3+0x54>
   4b3d4:	28000516 	blt	r5,zero,4b3ec <__udivsi3+0x34>
   4b3d8:	294b883a 	add	r5,r5,r5
   4b3dc:	10bfffc4 	addi	r2,r2,-1
   4b3e0:	18c7883a 	add	r3,r3,r3
   4b3e4:	293ffa36 	bltu	r5,r4,4b3d0 <__alt_data_end+0xfffdf4b0>
   4b3e8:	18000826 	beq	r3,zero,4b40c <__udivsi3+0x54>
   4b3ec:	0005883a 	mov	r2,zero
   4b3f0:	31400236 	bltu	r6,r5,4b3fc <__udivsi3+0x44>
   4b3f4:	314dc83a 	sub	r6,r6,r5
   4b3f8:	10c4b03a 	or	r2,r2,r3
   4b3fc:	1806d07a 	srli	r3,r3,1
   4b400:	280ad07a 	srli	r5,r5,1
   4b404:	183ffa1e 	bne	r3,zero,4b3f0 <__alt_data_end+0xfffdf4d0>
   4b408:	f800283a 	ret
   4b40c:	0005883a 	mov	r2,zero
   4b410:	f800283a 	ret
   4b414:	00c00044 	movi	r3,1
   4b418:	003ff406 	br	4b3ec <__alt_data_end+0xfffdf4cc>

0004b41c <__umodsi3>:
   4b41c:	2005883a 	mov	r2,r4
   4b420:	2900122e 	bgeu	r5,r4,4b46c <__umodsi3+0x50>
   4b424:	28001116 	blt	r5,zero,4b46c <__umodsi3+0x50>
   4b428:	01800804 	movi	r6,32
   4b42c:	00c00044 	movi	r3,1
   4b430:	00000206 	br	4b43c <__umodsi3+0x20>
   4b434:	30000c26 	beq	r6,zero,4b468 <__umodsi3+0x4c>
   4b438:	28000516 	blt	r5,zero,4b450 <__umodsi3+0x34>
   4b43c:	294b883a 	add	r5,r5,r5
   4b440:	31bfffc4 	addi	r6,r6,-1
   4b444:	18c7883a 	add	r3,r3,r3
   4b448:	293ffa36 	bltu	r5,r4,4b434 <__alt_data_end+0xfffdf514>
   4b44c:	18000626 	beq	r3,zero,4b468 <__umodsi3+0x4c>
   4b450:	1806d07a 	srli	r3,r3,1
   4b454:	11400136 	bltu	r2,r5,4b45c <__umodsi3+0x40>
   4b458:	1145c83a 	sub	r2,r2,r5
   4b45c:	280ad07a 	srli	r5,r5,1
   4b460:	183ffb1e 	bne	r3,zero,4b450 <__alt_data_end+0xfffdf530>
   4b464:	f800283a 	ret
   4b468:	f800283a 	ret
   4b46c:	00c00044 	movi	r3,1
   4b470:	003ff706 	br	4b450 <__alt_data_end+0xfffdf530>

0004b474 <__mulsi3>:
   4b474:	0005883a 	mov	r2,zero
   4b478:	20000726 	beq	r4,zero,4b498 <__mulsi3+0x24>
   4b47c:	20c0004c 	andi	r3,r4,1
   4b480:	2008d07a 	srli	r4,r4,1
   4b484:	18000126 	beq	r3,zero,4b48c <__mulsi3+0x18>
   4b488:	1145883a 	add	r2,r2,r5
   4b48c:	294b883a 	add	r5,r5,r5
   4b490:	203ffa1e 	bne	r4,zero,4b47c <__alt_data_end+0xfffdf55c>
   4b494:	f800283a 	ret
   4b498:	f800283a 	ret

0004b49c <__adddf3>:
   4b49c:	02c00434 	movhi	r11,16
   4b4a0:	5affffc4 	addi	r11,r11,-1
   4b4a4:	2806d7fa 	srli	r3,r5,31
   4b4a8:	2ad4703a 	and	r10,r5,r11
   4b4ac:	3ad2703a 	and	r9,r7,r11
   4b4b0:	3804d53a 	srli	r2,r7,20
   4b4b4:	3018d77a 	srli	r12,r6,29
   4b4b8:	280ad53a 	srli	r5,r5,20
   4b4bc:	501490fa 	slli	r10,r10,3
   4b4c0:	2010d77a 	srli	r8,r4,29
   4b4c4:	481290fa 	slli	r9,r9,3
   4b4c8:	380ed7fa 	srli	r7,r7,31
   4b4cc:	defffb04 	addi	sp,sp,-20
   4b4d0:	dc800215 	stw	r18,8(sp)
   4b4d4:	dc400115 	stw	r17,4(sp)
   4b4d8:	dc000015 	stw	r16,0(sp)
   4b4dc:	dfc00415 	stw	ra,16(sp)
   4b4e0:	dcc00315 	stw	r19,12(sp)
   4b4e4:	1c803fcc 	andi	r18,r3,255
   4b4e8:	2c01ffcc 	andi	r16,r5,2047
   4b4ec:	5210b03a 	or	r8,r10,r8
   4b4f0:	202290fa 	slli	r17,r4,3
   4b4f4:	1081ffcc 	andi	r2,r2,2047
   4b4f8:	4b12b03a 	or	r9,r9,r12
   4b4fc:	300c90fa 	slli	r6,r6,3
   4b500:	91c07526 	beq	r18,r7,4b6d8 <__adddf3+0x23c>
   4b504:	8087c83a 	sub	r3,r16,r2
   4b508:	00c0ab0e 	bge	zero,r3,4b7b8 <__adddf3+0x31c>
   4b50c:	10002a1e 	bne	r2,zero,4b5b8 <__adddf3+0x11c>
   4b510:	4984b03a 	or	r2,r9,r6
   4b514:	1000961e 	bne	r2,zero,4b770 <__adddf3+0x2d4>
   4b518:	888001cc 	andi	r2,r17,7
   4b51c:	10000726 	beq	r2,zero,4b53c <__adddf3+0xa0>
   4b520:	888003cc 	andi	r2,r17,15
   4b524:	00c00104 	movi	r3,4
   4b528:	10c00426 	beq	r2,r3,4b53c <__adddf3+0xa0>
   4b52c:	88c7883a 	add	r3,r17,r3
   4b530:	1c63803a 	cmpltu	r17,r3,r17
   4b534:	4451883a 	add	r8,r8,r17
   4b538:	1823883a 	mov	r17,r3
   4b53c:	4080202c 	andhi	r2,r8,128
   4b540:	10005926 	beq	r2,zero,4b6a8 <__adddf3+0x20c>
   4b544:	84000044 	addi	r16,r16,1
   4b548:	0081ffc4 	movi	r2,2047
   4b54c:	8080ba26 	beq	r16,r2,4b838 <__adddf3+0x39c>
   4b550:	00bfe034 	movhi	r2,65408
   4b554:	10bfffc4 	addi	r2,r2,-1
   4b558:	4090703a 	and	r8,r8,r2
   4b55c:	4004977a 	slli	r2,r8,29
   4b560:	4010927a 	slli	r8,r8,9
   4b564:	8822d0fa 	srli	r17,r17,3
   4b568:	8401ffcc 	andi	r16,r16,2047
   4b56c:	4010d33a 	srli	r8,r8,12
   4b570:	9007883a 	mov	r3,r18
   4b574:	1444b03a 	or	r2,r2,r17
   4b578:	8401ffcc 	andi	r16,r16,2047
   4b57c:	8020953a 	slli	r16,r16,20
   4b580:	18c03fcc 	andi	r3,r3,255
   4b584:	01000434 	movhi	r4,16
   4b588:	213fffc4 	addi	r4,r4,-1
   4b58c:	180697fa 	slli	r3,r3,31
   4b590:	4110703a 	and	r8,r8,r4
   4b594:	4410b03a 	or	r8,r8,r16
   4b598:	40c6b03a 	or	r3,r8,r3
   4b59c:	dfc00417 	ldw	ra,16(sp)
   4b5a0:	dcc00317 	ldw	r19,12(sp)
   4b5a4:	dc800217 	ldw	r18,8(sp)
   4b5a8:	dc400117 	ldw	r17,4(sp)
   4b5ac:	dc000017 	ldw	r16,0(sp)
   4b5b0:	dec00504 	addi	sp,sp,20
   4b5b4:	f800283a 	ret
   4b5b8:	0081ffc4 	movi	r2,2047
   4b5bc:	80bfd626 	beq	r16,r2,4b518 <__alt_data_end+0xfffdf5f8>
   4b5c0:	4a402034 	orhi	r9,r9,128
   4b5c4:	00800e04 	movi	r2,56
   4b5c8:	10c09f16 	blt	r2,r3,4b848 <__adddf3+0x3ac>
   4b5cc:	008007c4 	movi	r2,31
   4b5d0:	10c0c216 	blt	r2,r3,4b8dc <__adddf3+0x440>
   4b5d4:	00800804 	movi	r2,32
   4b5d8:	10c5c83a 	sub	r2,r2,r3
   4b5dc:	488a983a 	sll	r5,r9,r2
   4b5e0:	30c8d83a 	srl	r4,r6,r3
   4b5e4:	3084983a 	sll	r2,r6,r2
   4b5e8:	48c6d83a 	srl	r3,r9,r3
   4b5ec:	290cb03a 	or	r6,r5,r4
   4b5f0:	1004c03a 	cmpne	r2,r2,zero
   4b5f4:	308cb03a 	or	r6,r6,r2
   4b5f8:	898dc83a 	sub	r6,r17,r6
   4b5fc:	89a3803a 	cmpltu	r17,r17,r6
   4b600:	40d1c83a 	sub	r8,r8,r3
   4b604:	4451c83a 	sub	r8,r8,r17
   4b608:	3023883a 	mov	r17,r6
   4b60c:	4080202c 	andhi	r2,r8,128
   4b610:	10002326 	beq	r2,zero,4b6a0 <__adddf3+0x204>
   4b614:	04c02034 	movhi	r19,128
   4b618:	9cffffc4 	addi	r19,r19,-1
   4b61c:	44e6703a 	and	r19,r8,r19
   4b620:	98007626 	beq	r19,zero,4b7fc <__adddf3+0x360>
   4b624:	9809883a 	mov	r4,r19
   4b628:	004dcdc0 	call	4dcdc <__clzsi2>
   4b62c:	10fffe04 	addi	r3,r2,-8
   4b630:	010007c4 	movi	r4,31
   4b634:	20c07716 	blt	r4,r3,4b814 <__adddf3+0x378>
   4b638:	00800804 	movi	r2,32
   4b63c:	10c5c83a 	sub	r2,r2,r3
   4b640:	8884d83a 	srl	r2,r17,r2
   4b644:	98d0983a 	sll	r8,r19,r3
   4b648:	88e2983a 	sll	r17,r17,r3
   4b64c:	1204b03a 	or	r2,r2,r8
   4b650:	1c007416 	blt	r3,r16,4b824 <__adddf3+0x388>
   4b654:	1c21c83a 	sub	r16,r3,r16
   4b658:	82000044 	addi	r8,r16,1
   4b65c:	00c007c4 	movi	r3,31
   4b660:	1a009116 	blt	r3,r8,4b8a8 <__adddf3+0x40c>
   4b664:	00c00804 	movi	r3,32
   4b668:	1a07c83a 	sub	r3,r3,r8
   4b66c:	8a08d83a 	srl	r4,r17,r8
   4b670:	88e2983a 	sll	r17,r17,r3
   4b674:	10c6983a 	sll	r3,r2,r3
   4b678:	1210d83a 	srl	r8,r2,r8
   4b67c:	8804c03a 	cmpne	r2,r17,zero
   4b680:	1906b03a 	or	r3,r3,r4
   4b684:	18a2b03a 	or	r17,r3,r2
   4b688:	0021883a 	mov	r16,zero
   4b68c:	003fa206 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b690:	1890b03a 	or	r8,r3,r2
   4b694:	40017d26 	beq	r8,zero,4bc8c <__adddf3+0x7f0>
   4b698:	1011883a 	mov	r8,r2
   4b69c:	1823883a 	mov	r17,r3
   4b6a0:	888001cc 	andi	r2,r17,7
   4b6a4:	103f9e1e 	bne	r2,zero,4b520 <__alt_data_end+0xfffdf600>
   4b6a8:	4004977a 	slli	r2,r8,29
   4b6ac:	8822d0fa 	srli	r17,r17,3
   4b6b0:	4010d0fa 	srli	r8,r8,3
   4b6b4:	9007883a 	mov	r3,r18
   4b6b8:	1444b03a 	or	r2,r2,r17
   4b6bc:	0101ffc4 	movi	r4,2047
   4b6c0:	81002426 	beq	r16,r4,4b754 <__adddf3+0x2b8>
   4b6c4:	8120703a 	and	r16,r16,r4
   4b6c8:	01000434 	movhi	r4,16
   4b6cc:	213fffc4 	addi	r4,r4,-1
   4b6d0:	4110703a 	and	r8,r8,r4
   4b6d4:	003fa806 	br	4b578 <__alt_data_end+0xfffdf658>
   4b6d8:	8089c83a 	sub	r4,r16,r2
   4b6dc:	01005e0e 	bge	zero,r4,4b858 <__adddf3+0x3bc>
   4b6e0:	10002b26 	beq	r2,zero,4b790 <__adddf3+0x2f4>
   4b6e4:	0081ffc4 	movi	r2,2047
   4b6e8:	80bf8b26 	beq	r16,r2,4b518 <__alt_data_end+0xfffdf5f8>
   4b6ec:	4a402034 	orhi	r9,r9,128
   4b6f0:	00800e04 	movi	r2,56
   4b6f4:	1100a40e 	bge	r2,r4,4b988 <__adddf3+0x4ec>
   4b6f8:	498cb03a 	or	r6,r9,r6
   4b6fc:	300ac03a 	cmpne	r5,r6,zero
   4b700:	0013883a 	mov	r9,zero
   4b704:	2c4b883a 	add	r5,r5,r17
   4b708:	2c63803a 	cmpltu	r17,r5,r17
   4b70c:	4a11883a 	add	r8,r9,r8
   4b710:	8a11883a 	add	r8,r17,r8
   4b714:	2823883a 	mov	r17,r5
   4b718:	4080202c 	andhi	r2,r8,128
   4b71c:	103fe026 	beq	r2,zero,4b6a0 <__alt_data_end+0xfffdf780>
   4b720:	84000044 	addi	r16,r16,1
   4b724:	0081ffc4 	movi	r2,2047
   4b728:	8080d226 	beq	r16,r2,4ba74 <__adddf3+0x5d8>
   4b72c:	00bfe034 	movhi	r2,65408
   4b730:	10bfffc4 	addi	r2,r2,-1
   4b734:	4090703a 	and	r8,r8,r2
   4b738:	880ad07a 	srli	r5,r17,1
   4b73c:	400897fa 	slli	r4,r8,31
   4b740:	88c0004c 	andi	r3,r17,1
   4b744:	28e2b03a 	or	r17,r5,r3
   4b748:	4010d07a 	srli	r8,r8,1
   4b74c:	2462b03a 	or	r17,r4,r17
   4b750:	003f7106 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b754:	4088b03a 	or	r4,r8,r2
   4b758:	20014526 	beq	r4,zero,4bc70 <__adddf3+0x7d4>
   4b75c:	01000434 	movhi	r4,16
   4b760:	42000234 	orhi	r8,r8,8
   4b764:	213fffc4 	addi	r4,r4,-1
   4b768:	4110703a 	and	r8,r8,r4
   4b76c:	003f8206 	br	4b578 <__alt_data_end+0xfffdf658>
   4b770:	18ffffc4 	addi	r3,r3,-1
   4b774:	1800491e 	bne	r3,zero,4b89c <__adddf3+0x400>
   4b778:	898bc83a 	sub	r5,r17,r6
   4b77c:	8963803a 	cmpltu	r17,r17,r5
   4b780:	4251c83a 	sub	r8,r8,r9
   4b784:	4451c83a 	sub	r8,r8,r17
   4b788:	2823883a 	mov	r17,r5
   4b78c:	003f9f06 	br	4b60c <__alt_data_end+0xfffdf6ec>
   4b790:	4984b03a 	or	r2,r9,r6
   4b794:	103f6026 	beq	r2,zero,4b518 <__alt_data_end+0xfffdf5f8>
   4b798:	213fffc4 	addi	r4,r4,-1
   4b79c:	2000931e 	bne	r4,zero,4b9ec <__adddf3+0x550>
   4b7a0:	898d883a 	add	r6,r17,r6
   4b7a4:	3463803a 	cmpltu	r17,r6,r17
   4b7a8:	4251883a 	add	r8,r8,r9
   4b7ac:	8a11883a 	add	r8,r17,r8
   4b7b0:	3023883a 	mov	r17,r6
   4b7b4:	003fd806 	br	4b718 <__alt_data_end+0xfffdf7f8>
   4b7b8:	1800541e 	bne	r3,zero,4b90c <__adddf3+0x470>
   4b7bc:	80800044 	addi	r2,r16,1
   4b7c0:	1081ffcc 	andi	r2,r2,2047
   4b7c4:	00c00044 	movi	r3,1
   4b7c8:	1880a00e 	bge	r3,r2,4ba4c <__adddf3+0x5b0>
   4b7cc:	8989c83a 	sub	r4,r17,r6
   4b7d0:	8905803a 	cmpltu	r2,r17,r4
   4b7d4:	4267c83a 	sub	r19,r8,r9
   4b7d8:	98a7c83a 	sub	r19,r19,r2
   4b7dc:	9880202c 	andhi	r2,r19,128
   4b7e0:	10006326 	beq	r2,zero,4b970 <__adddf3+0x4d4>
   4b7e4:	3463c83a 	sub	r17,r6,r17
   4b7e8:	4a07c83a 	sub	r3,r9,r8
   4b7ec:	344d803a 	cmpltu	r6,r6,r17
   4b7f0:	19a7c83a 	sub	r19,r3,r6
   4b7f4:	3825883a 	mov	r18,r7
   4b7f8:	983f8a1e 	bne	r19,zero,4b624 <__alt_data_end+0xfffdf704>
   4b7fc:	8809883a 	mov	r4,r17
   4b800:	004dcdc0 	call	4dcdc <__clzsi2>
   4b804:	10800804 	addi	r2,r2,32
   4b808:	10fffe04 	addi	r3,r2,-8
   4b80c:	010007c4 	movi	r4,31
   4b810:	20ff890e 	bge	r4,r3,4b638 <__alt_data_end+0xfffdf718>
   4b814:	10bff604 	addi	r2,r2,-40
   4b818:	8884983a 	sll	r2,r17,r2
   4b81c:	0023883a 	mov	r17,zero
   4b820:	1c3f8c0e 	bge	r3,r16,4b654 <__alt_data_end+0xfffdf734>
   4b824:	023fe034 	movhi	r8,65408
   4b828:	423fffc4 	addi	r8,r8,-1
   4b82c:	80e1c83a 	sub	r16,r16,r3
   4b830:	1210703a 	and	r8,r2,r8
   4b834:	003f3806 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b838:	9007883a 	mov	r3,r18
   4b83c:	0011883a 	mov	r8,zero
   4b840:	0005883a 	mov	r2,zero
   4b844:	003f4c06 	br	4b578 <__alt_data_end+0xfffdf658>
   4b848:	498cb03a 	or	r6,r9,r6
   4b84c:	300cc03a 	cmpne	r6,r6,zero
   4b850:	0007883a 	mov	r3,zero
   4b854:	003f6806 	br	4b5f8 <__alt_data_end+0xfffdf6d8>
   4b858:	20009c1e 	bne	r4,zero,4bacc <__adddf3+0x630>
   4b85c:	80800044 	addi	r2,r16,1
   4b860:	1141ffcc 	andi	r5,r2,2047
   4b864:	01000044 	movi	r4,1
   4b868:	2140670e 	bge	r4,r5,4ba08 <__adddf3+0x56c>
   4b86c:	0101ffc4 	movi	r4,2047
   4b870:	11007f26 	beq	r2,r4,4ba70 <__adddf3+0x5d4>
   4b874:	898d883a 	add	r6,r17,r6
   4b878:	4247883a 	add	r3,r8,r9
   4b87c:	3451803a 	cmpltu	r8,r6,r17
   4b880:	40d1883a 	add	r8,r8,r3
   4b884:	402297fa 	slli	r17,r8,31
   4b888:	300cd07a 	srli	r6,r6,1
   4b88c:	4010d07a 	srli	r8,r8,1
   4b890:	1021883a 	mov	r16,r2
   4b894:	89a2b03a 	or	r17,r17,r6
   4b898:	003f1f06 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b89c:	0081ffc4 	movi	r2,2047
   4b8a0:	80bf481e 	bne	r16,r2,4b5c4 <__alt_data_end+0xfffdf6a4>
   4b8a4:	003f1c06 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b8a8:	843ff844 	addi	r16,r16,-31
   4b8ac:	01000804 	movi	r4,32
   4b8b0:	1406d83a 	srl	r3,r2,r16
   4b8b4:	41005026 	beq	r8,r4,4b9f8 <__adddf3+0x55c>
   4b8b8:	01001004 	movi	r4,64
   4b8bc:	2211c83a 	sub	r8,r4,r8
   4b8c0:	1204983a 	sll	r2,r2,r8
   4b8c4:	88a2b03a 	or	r17,r17,r2
   4b8c8:	8822c03a 	cmpne	r17,r17,zero
   4b8cc:	1c62b03a 	or	r17,r3,r17
   4b8d0:	0011883a 	mov	r8,zero
   4b8d4:	0021883a 	mov	r16,zero
   4b8d8:	003f7106 	br	4b6a0 <__alt_data_end+0xfffdf780>
   4b8dc:	193ff804 	addi	r4,r3,-32
   4b8e0:	00800804 	movi	r2,32
   4b8e4:	4908d83a 	srl	r4,r9,r4
   4b8e8:	18804526 	beq	r3,r2,4ba00 <__adddf3+0x564>
   4b8ec:	00801004 	movi	r2,64
   4b8f0:	10c5c83a 	sub	r2,r2,r3
   4b8f4:	4886983a 	sll	r3,r9,r2
   4b8f8:	198cb03a 	or	r6,r3,r6
   4b8fc:	300cc03a 	cmpne	r6,r6,zero
   4b900:	218cb03a 	or	r6,r4,r6
   4b904:	0007883a 	mov	r3,zero
   4b908:	003f3b06 	br	4b5f8 <__alt_data_end+0xfffdf6d8>
   4b90c:	80002a26 	beq	r16,zero,4b9b8 <__adddf3+0x51c>
   4b910:	0101ffc4 	movi	r4,2047
   4b914:	11006826 	beq	r2,r4,4bab8 <__adddf3+0x61c>
   4b918:	00c7c83a 	sub	r3,zero,r3
   4b91c:	42002034 	orhi	r8,r8,128
   4b920:	01000e04 	movi	r4,56
   4b924:	20c07c16 	blt	r4,r3,4bb18 <__adddf3+0x67c>
   4b928:	010007c4 	movi	r4,31
   4b92c:	20c0da16 	blt	r4,r3,4bc98 <__adddf3+0x7fc>
   4b930:	01000804 	movi	r4,32
   4b934:	20c9c83a 	sub	r4,r4,r3
   4b938:	4114983a 	sll	r10,r8,r4
   4b93c:	88cad83a 	srl	r5,r17,r3
   4b940:	8908983a 	sll	r4,r17,r4
   4b944:	40c6d83a 	srl	r3,r8,r3
   4b948:	5162b03a 	or	r17,r10,r5
   4b94c:	2008c03a 	cmpne	r4,r4,zero
   4b950:	8922b03a 	or	r17,r17,r4
   4b954:	3463c83a 	sub	r17,r6,r17
   4b958:	48c7c83a 	sub	r3,r9,r3
   4b95c:	344d803a 	cmpltu	r6,r6,r17
   4b960:	1991c83a 	sub	r8,r3,r6
   4b964:	1021883a 	mov	r16,r2
   4b968:	3825883a 	mov	r18,r7
   4b96c:	003f2706 	br	4b60c <__alt_data_end+0xfffdf6ec>
   4b970:	24d0b03a 	or	r8,r4,r19
   4b974:	40001b1e 	bne	r8,zero,4b9e4 <__adddf3+0x548>
   4b978:	0005883a 	mov	r2,zero
   4b97c:	0007883a 	mov	r3,zero
   4b980:	0021883a 	mov	r16,zero
   4b984:	003f4d06 	br	4b6bc <__alt_data_end+0xfffdf79c>
   4b988:	008007c4 	movi	r2,31
   4b98c:	11003c16 	blt	r2,r4,4ba80 <__adddf3+0x5e4>
   4b990:	00800804 	movi	r2,32
   4b994:	1105c83a 	sub	r2,r2,r4
   4b998:	488e983a 	sll	r7,r9,r2
   4b99c:	310ad83a 	srl	r5,r6,r4
   4b9a0:	3084983a 	sll	r2,r6,r2
   4b9a4:	4912d83a 	srl	r9,r9,r4
   4b9a8:	394ab03a 	or	r5,r7,r5
   4b9ac:	1004c03a 	cmpne	r2,r2,zero
   4b9b0:	288ab03a 	or	r5,r5,r2
   4b9b4:	003f5306 	br	4b704 <__alt_data_end+0xfffdf7e4>
   4b9b8:	4448b03a 	or	r4,r8,r17
   4b9bc:	20003e26 	beq	r4,zero,4bab8 <__adddf3+0x61c>
   4b9c0:	00c6303a 	nor	r3,zero,r3
   4b9c4:	18003a1e 	bne	r3,zero,4bab0 <__adddf3+0x614>
   4b9c8:	3463c83a 	sub	r17,r6,r17
   4b9cc:	4a07c83a 	sub	r3,r9,r8
   4b9d0:	344d803a 	cmpltu	r6,r6,r17
   4b9d4:	1991c83a 	sub	r8,r3,r6
   4b9d8:	1021883a 	mov	r16,r2
   4b9dc:	3825883a 	mov	r18,r7
   4b9e0:	003f0a06 	br	4b60c <__alt_data_end+0xfffdf6ec>
   4b9e4:	2023883a 	mov	r17,r4
   4b9e8:	003f0d06 	br	4b620 <__alt_data_end+0xfffdf700>
   4b9ec:	0081ffc4 	movi	r2,2047
   4b9f0:	80bf3f1e 	bne	r16,r2,4b6f0 <__alt_data_end+0xfffdf7d0>
   4b9f4:	003ec806 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4b9f8:	0005883a 	mov	r2,zero
   4b9fc:	003fb106 	br	4b8c4 <__alt_data_end+0xfffdf9a4>
   4ba00:	0007883a 	mov	r3,zero
   4ba04:	003fbc06 	br	4b8f8 <__alt_data_end+0xfffdf9d8>
   4ba08:	4444b03a 	or	r2,r8,r17
   4ba0c:	8000871e 	bne	r16,zero,4bc2c <__adddf3+0x790>
   4ba10:	1000ba26 	beq	r2,zero,4bcfc <__adddf3+0x860>
   4ba14:	4984b03a 	or	r2,r9,r6
   4ba18:	103ebf26 	beq	r2,zero,4b518 <__alt_data_end+0xfffdf5f8>
   4ba1c:	8985883a 	add	r2,r17,r6
   4ba20:	4247883a 	add	r3,r8,r9
   4ba24:	1451803a 	cmpltu	r8,r2,r17
   4ba28:	40d1883a 	add	r8,r8,r3
   4ba2c:	40c0202c 	andhi	r3,r8,128
   4ba30:	1023883a 	mov	r17,r2
   4ba34:	183f1a26 	beq	r3,zero,4b6a0 <__alt_data_end+0xfffdf780>
   4ba38:	00bfe034 	movhi	r2,65408
   4ba3c:	10bfffc4 	addi	r2,r2,-1
   4ba40:	2021883a 	mov	r16,r4
   4ba44:	4090703a 	and	r8,r8,r2
   4ba48:	003eb306 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4ba4c:	4444b03a 	or	r2,r8,r17
   4ba50:	8000291e 	bne	r16,zero,4baf8 <__adddf3+0x65c>
   4ba54:	10004b1e 	bne	r2,zero,4bb84 <__adddf3+0x6e8>
   4ba58:	4990b03a 	or	r8,r9,r6
   4ba5c:	40008b26 	beq	r8,zero,4bc8c <__adddf3+0x7f0>
   4ba60:	4811883a 	mov	r8,r9
   4ba64:	3023883a 	mov	r17,r6
   4ba68:	3825883a 	mov	r18,r7
   4ba6c:	003eaa06 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4ba70:	1021883a 	mov	r16,r2
   4ba74:	0011883a 	mov	r8,zero
   4ba78:	0005883a 	mov	r2,zero
   4ba7c:	003f0f06 	br	4b6bc <__alt_data_end+0xfffdf79c>
   4ba80:	217ff804 	addi	r5,r4,-32
   4ba84:	00800804 	movi	r2,32
   4ba88:	494ad83a 	srl	r5,r9,r5
   4ba8c:	20807d26 	beq	r4,r2,4bc84 <__adddf3+0x7e8>
   4ba90:	00801004 	movi	r2,64
   4ba94:	1109c83a 	sub	r4,r2,r4
   4ba98:	4912983a 	sll	r9,r9,r4
   4ba9c:	498cb03a 	or	r6,r9,r6
   4baa0:	300cc03a 	cmpne	r6,r6,zero
   4baa4:	298ab03a 	or	r5,r5,r6
   4baa8:	0013883a 	mov	r9,zero
   4baac:	003f1506 	br	4b704 <__alt_data_end+0xfffdf7e4>
   4bab0:	0101ffc4 	movi	r4,2047
   4bab4:	113f9a1e 	bne	r2,r4,4b920 <__alt_data_end+0xfffdfa00>
   4bab8:	4811883a 	mov	r8,r9
   4babc:	3023883a 	mov	r17,r6
   4bac0:	1021883a 	mov	r16,r2
   4bac4:	3825883a 	mov	r18,r7
   4bac8:	003e9306 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bacc:	8000161e 	bne	r16,zero,4bb28 <__adddf3+0x68c>
   4bad0:	444ab03a 	or	r5,r8,r17
   4bad4:	28005126 	beq	r5,zero,4bc1c <__adddf3+0x780>
   4bad8:	0108303a 	nor	r4,zero,r4
   4badc:	20004d1e 	bne	r4,zero,4bc14 <__adddf3+0x778>
   4bae0:	89a3883a 	add	r17,r17,r6
   4bae4:	4253883a 	add	r9,r8,r9
   4bae8:	898d803a 	cmpltu	r6,r17,r6
   4baec:	3251883a 	add	r8,r6,r9
   4baf0:	1021883a 	mov	r16,r2
   4baf4:	003f0806 	br	4b718 <__alt_data_end+0xfffdf7f8>
   4baf8:	1000301e 	bne	r2,zero,4bbbc <__adddf3+0x720>
   4bafc:	4984b03a 	or	r2,r9,r6
   4bb00:	10007126 	beq	r2,zero,4bcc8 <__adddf3+0x82c>
   4bb04:	4811883a 	mov	r8,r9
   4bb08:	3023883a 	mov	r17,r6
   4bb0c:	3825883a 	mov	r18,r7
   4bb10:	0401ffc4 	movi	r16,2047
   4bb14:	003e8006 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bb18:	4462b03a 	or	r17,r8,r17
   4bb1c:	8822c03a 	cmpne	r17,r17,zero
   4bb20:	0007883a 	mov	r3,zero
   4bb24:	003f8b06 	br	4b954 <__alt_data_end+0xfffdfa34>
   4bb28:	0141ffc4 	movi	r5,2047
   4bb2c:	11403b26 	beq	r2,r5,4bc1c <__adddf3+0x780>
   4bb30:	0109c83a 	sub	r4,zero,r4
   4bb34:	42002034 	orhi	r8,r8,128
   4bb38:	01400e04 	movi	r5,56
   4bb3c:	29006716 	blt	r5,r4,4bcdc <__adddf3+0x840>
   4bb40:	014007c4 	movi	r5,31
   4bb44:	29007016 	blt	r5,r4,4bd08 <__adddf3+0x86c>
   4bb48:	01400804 	movi	r5,32
   4bb4c:	290bc83a 	sub	r5,r5,r4
   4bb50:	4154983a 	sll	r10,r8,r5
   4bb54:	890ed83a 	srl	r7,r17,r4
   4bb58:	894a983a 	sll	r5,r17,r5
   4bb5c:	4108d83a 	srl	r4,r8,r4
   4bb60:	51e2b03a 	or	r17,r10,r7
   4bb64:	280ac03a 	cmpne	r5,r5,zero
   4bb68:	8962b03a 	or	r17,r17,r5
   4bb6c:	89a3883a 	add	r17,r17,r6
   4bb70:	2253883a 	add	r9,r4,r9
   4bb74:	898d803a 	cmpltu	r6,r17,r6
   4bb78:	3251883a 	add	r8,r6,r9
   4bb7c:	1021883a 	mov	r16,r2
   4bb80:	003ee506 	br	4b718 <__alt_data_end+0xfffdf7f8>
   4bb84:	4984b03a 	or	r2,r9,r6
   4bb88:	103e6326 	beq	r2,zero,4b518 <__alt_data_end+0xfffdf5f8>
   4bb8c:	8987c83a 	sub	r3,r17,r6
   4bb90:	88c9803a 	cmpltu	r4,r17,r3
   4bb94:	4245c83a 	sub	r2,r8,r9
   4bb98:	1105c83a 	sub	r2,r2,r4
   4bb9c:	1100202c 	andhi	r4,r2,128
   4bba0:	203ebb26 	beq	r4,zero,4b690 <__alt_data_end+0xfffdf770>
   4bba4:	3463c83a 	sub	r17,r6,r17
   4bba8:	4a07c83a 	sub	r3,r9,r8
   4bbac:	344d803a 	cmpltu	r6,r6,r17
   4bbb0:	1991c83a 	sub	r8,r3,r6
   4bbb4:	3825883a 	mov	r18,r7
   4bbb8:	003e5706 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bbbc:	4984b03a 	or	r2,r9,r6
   4bbc0:	10002e26 	beq	r2,zero,4bc7c <__adddf3+0x7e0>
   4bbc4:	4004d0fa 	srli	r2,r8,3
   4bbc8:	8822d0fa 	srli	r17,r17,3
   4bbcc:	4010977a 	slli	r8,r8,29
   4bbd0:	10c0022c 	andhi	r3,r2,8
   4bbd4:	4462b03a 	or	r17,r8,r17
   4bbd8:	18000826 	beq	r3,zero,4bbfc <__adddf3+0x760>
   4bbdc:	4808d0fa 	srli	r4,r9,3
   4bbe0:	20c0022c 	andhi	r3,r4,8
   4bbe4:	1800051e 	bne	r3,zero,4bbfc <__adddf3+0x760>
   4bbe8:	300cd0fa 	srli	r6,r6,3
   4bbec:	4806977a 	slli	r3,r9,29
   4bbf0:	2005883a 	mov	r2,r4
   4bbf4:	3825883a 	mov	r18,r7
   4bbf8:	19a2b03a 	or	r17,r3,r6
   4bbfc:	8810d77a 	srli	r8,r17,29
   4bc00:	100490fa 	slli	r2,r2,3
   4bc04:	882290fa 	slli	r17,r17,3
   4bc08:	0401ffc4 	movi	r16,2047
   4bc0c:	4090b03a 	or	r8,r8,r2
   4bc10:	003e4106 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bc14:	0141ffc4 	movi	r5,2047
   4bc18:	117fc71e 	bne	r2,r5,4bb38 <__alt_data_end+0xfffdfc18>
   4bc1c:	4811883a 	mov	r8,r9
   4bc20:	3023883a 	mov	r17,r6
   4bc24:	1021883a 	mov	r16,r2
   4bc28:	003e3b06 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bc2c:	10002f26 	beq	r2,zero,4bcec <__adddf3+0x850>
   4bc30:	4984b03a 	or	r2,r9,r6
   4bc34:	10001126 	beq	r2,zero,4bc7c <__adddf3+0x7e0>
   4bc38:	4004d0fa 	srli	r2,r8,3
   4bc3c:	8822d0fa 	srli	r17,r17,3
   4bc40:	4010977a 	slli	r8,r8,29
   4bc44:	10c0022c 	andhi	r3,r2,8
   4bc48:	4462b03a 	or	r17,r8,r17
   4bc4c:	183feb26 	beq	r3,zero,4bbfc <__alt_data_end+0xfffdfcdc>
   4bc50:	4808d0fa 	srli	r4,r9,3
   4bc54:	20c0022c 	andhi	r3,r4,8
   4bc58:	183fe81e 	bne	r3,zero,4bbfc <__alt_data_end+0xfffdfcdc>
   4bc5c:	300cd0fa 	srli	r6,r6,3
   4bc60:	4806977a 	slli	r3,r9,29
   4bc64:	2005883a 	mov	r2,r4
   4bc68:	19a2b03a 	or	r17,r3,r6
   4bc6c:	003fe306 	br	4bbfc <__alt_data_end+0xfffdfcdc>
   4bc70:	0011883a 	mov	r8,zero
   4bc74:	0005883a 	mov	r2,zero
   4bc78:	003e3f06 	br	4b578 <__alt_data_end+0xfffdf658>
   4bc7c:	0401ffc4 	movi	r16,2047
   4bc80:	003e2506 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bc84:	0013883a 	mov	r9,zero
   4bc88:	003f8406 	br	4ba9c <__alt_data_end+0xfffdfb7c>
   4bc8c:	0005883a 	mov	r2,zero
   4bc90:	0007883a 	mov	r3,zero
   4bc94:	003e8906 	br	4b6bc <__alt_data_end+0xfffdf79c>
   4bc98:	197ff804 	addi	r5,r3,-32
   4bc9c:	01000804 	movi	r4,32
   4bca0:	414ad83a 	srl	r5,r8,r5
   4bca4:	19002426 	beq	r3,r4,4bd38 <__adddf3+0x89c>
   4bca8:	01001004 	movi	r4,64
   4bcac:	20c7c83a 	sub	r3,r4,r3
   4bcb0:	40c6983a 	sll	r3,r8,r3
   4bcb4:	1c46b03a 	or	r3,r3,r17
   4bcb8:	1806c03a 	cmpne	r3,r3,zero
   4bcbc:	28e2b03a 	or	r17,r5,r3
   4bcc0:	0007883a 	mov	r3,zero
   4bcc4:	003f2306 	br	4b954 <__alt_data_end+0xfffdfa34>
   4bcc8:	0007883a 	mov	r3,zero
   4bccc:	5811883a 	mov	r8,r11
   4bcd0:	00bfffc4 	movi	r2,-1
   4bcd4:	0401ffc4 	movi	r16,2047
   4bcd8:	003e7806 	br	4b6bc <__alt_data_end+0xfffdf79c>
   4bcdc:	4462b03a 	or	r17,r8,r17
   4bce0:	8822c03a 	cmpne	r17,r17,zero
   4bce4:	0009883a 	mov	r4,zero
   4bce8:	003fa006 	br	4bb6c <__alt_data_end+0xfffdfc4c>
   4bcec:	4811883a 	mov	r8,r9
   4bcf0:	3023883a 	mov	r17,r6
   4bcf4:	0401ffc4 	movi	r16,2047
   4bcf8:	003e0706 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bcfc:	4811883a 	mov	r8,r9
   4bd00:	3023883a 	mov	r17,r6
   4bd04:	003e0406 	br	4b518 <__alt_data_end+0xfffdf5f8>
   4bd08:	21fff804 	addi	r7,r4,-32
   4bd0c:	01400804 	movi	r5,32
   4bd10:	41ced83a 	srl	r7,r8,r7
   4bd14:	21400a26 	beq	r4,r5,4bd40 <__adddf3+0x8a4>
   4bd18:	01401004 	movi	r5,64
   4bd1c:	2909c83a 	sub	r4,r5,r4
   4bd20:	4108983a 	sll	r4,r8,r4
   4bd24:	2448b03a 	or	r4,r4,r17
   4bd28:	2008c03a 	cmpne	r4,r4,zero
   4bd2c:	3922b03a 	or	r17,r7,r4
   4bd30:	0009883a 	mov	r4,zero
   4bd34:	003f8d06 	br	4bb6c <__alt_data_end+0xfffdfc4c>
   4bd38:	0007883a 	mov	r3,zero
   4bd3c:	003fdd06 	br	4bcb4 <__alt_data_end+0xfffdfd94>
   4bd40:	0009883a 	mov	r4,zero
   4bd44:	003ff706 	br	4bd24 <__alt_data_end+0xfffdfe04>

0004bd48 <__divdf3>:
   4bd48:	defff004 	addi	sp,sp,-64
   4bd4c:	dc800815 	stw	r18,32(sp)
   4bd50:	2824d53a 	srli	r18,r5,20
   4bd54:	dd800c15 	stw	r22,48(sp)
   4bd58:	282cd7fa 	srli	r22,r5,31
   4bd5c:	dc000615 	stw	r16,24(sp)
   4bd60:	04000434 	movhi	r16,16
   4bd64:	843fffc4 	addi	r16,r16,-1
   4bd68:	dfc00f15 	stw	ra,60(sp)
   4bd6c:	df000e15 	stw	fp,56(sp)
   4bd70:	ddc00d15 	stw	r23,52(sp)
   4bd74:	dd400b15 	stw	r21,44(sp)
   4bd78:	dd000a15 	stw	r20,40(sp)
   4bd7c:	dcc00915 	stw	r19,36(sp)
   4bd80:	dc400715 	stw	r17,28(sp)
   4bd84:	9481ffcc 	andi	r18,r18,2047
   4bd88:	2c20703a 	and	r16,r5,r16
   4bd8c:	b2003fcc 	andi	r8,r22,255
   4bd90:	90006126 	beq	r18,zero,4bf18 <__divdf3+0x1d0>
   4bd94:	0081ffc4 	movi	r2,2047
   4bd98:	202b883a 	mov	r21,r4
   4bd9c:	90803726 	beq	r18,r2,4be7c <__divdf3+0x134>
   4bda0:	80800434 	orhi	r2,r16,16
   4bda4:	100490fa 	slli	r2,r2,3
   4bda8:	2020d77a 	srli	r16,r4,29
   4bdac:	202a90fa 	slli	r21,r4,3
   4bdb0:	94bf0044 	addi	r18,r18,-1023
   4bdb4:	80a0b03a 	or	r16,r16,r2
   4bdb8:	0013883a 	mov	r9,zero
   4bdbc:	000b883a 	mov	r5,zero
   4bdc0:	3806d53a 	srli	r3,r7,20
   4bdc4:	382ed7fa 	srli	r23,r7,31
   4bdc8:	04400434 	movhi	r17,16
   4bdcc:	8c7fffc4 	addi	r17,r17,-1
   4bdd0:	18c1ffcc 	andi	r3,r3,2047
   4bdd4:	3029883a 	mov	r20,r6
   4bdd8:	3c62703a 	and	r17,r7,r17
   4bddc:	bf003fcc 	andi	fp,r23,255
   4bde0:	18006e26 	beq	r3,zero,4bf9c <__divdf3+0x254>
   4bde4:	0081ffc4 	movi	r2,2047
   4bde8:	18806626 	beq	r3,r2,4bf84 <__divdf3+0x23c>
   4bdec:	88800434 	orhi	r2,r17,16
   4bdf0:	100490fa 	slli	r2,r2,3
   4bdf4:	3022d77a 	srli	r17,r6,29
   4bdf8:	302890fa 	slli	r20,r6,3
   4bdfc:	18ff0044 	addi	r3,r3,-1023
   4be00:	88a2b03a 	or	r17,r17,r2
   4be04:	000f883a 	mov	r7,zero
   4be08:	b5e6f03a 	xor	r19,r22,r23
   4be0c:	3a4cb03a 	or	r6,r7,r9
   4be10:	008003c4 	movi	r2,15
   4be14:	9809883a 	mov	r4,r19
   4be18:	90c7c83a 	sub	r3,r18,r3
   4be1c:	9cc03fcc 	andi	r19,r19,255
   4be20:	11809636 	bltu	r2,r6,4c07c <__divdf3+0x334>
   4be24:	300c90ba 	slli	r6,r6,2
   4be28:	00800174 	movhi	r2,5
   4be2c:	10af8f04 	addi	r2,r2,-16836
   4be30:	308d883a 	add	r6,r6,r2
   4be34:	30800017 	ldw	r2,0(r6)
   4be38:	1000683a 	jmp	r2
   4be3c:	0004c07c 	xorhi	zero,zero,4865
   4be40:	0004beb4 	movhi	zero,4858
   4be44:	0004c06c 	andhi	zero,zero,4865
   4be48:	0004bea8 	cmpgeui	zero,zero,4858
   4be4c:	0004c06c 	andhi	zero,zero,4865
   4be50:	0004c040 	call	4c04 <__reset-0x3b3fc>
   4be54:	0004c06c 	andhi	zero,zero,4865
   4be58:	0004bea8 	cmpgeui	zero,zero,4858
   4be5c:	0004beb4 	movhi	zero,4858
   4be60:	0004beb4 	movhi	zero,4858
   4be64:	0004c040 	call	4c04 <__reset-0x3b3fc>
   4be68:	0004bea8 	cmpgeui	zero,zero,4858
   4be6c:	0004be98 	cmpnei	zero,zero,4858
   4be70:	0004be98 	cmpnei	zero,zero,4858
   4be74:	0004be98 	cmpnei	zero,zero,4858
   4be78:	0004c404 	movi	zero,4880
   4be7c:	2404b03a 	or	r2,r4,r16
   4be80:	10006c1e 	bne	r2,zero,4c034 <__divdf3+0x2ec>
   4be84:	02400204 	movi	r9,8
   4be88:	0021883a 	mov	r16,zero
   4be8c:	002b883a 	mov	r21,zero
   4be90:	01400084 	movi	r5,2
   4be94:	003fca06 	br	4bdc0 <__alt_data_end+0xfffdfea0>
   4be98:	8023883a 	mov	r17,r16
   4be9c:	a829883a 	mov	r20,r21
   4bea0:	4039883a 	mov	fp,r8
   4bea4:	280f883a 	mov	r7,r5
   4bea8:	00800084 	movi	r2,2
   4beac:	3881601e 	bne	r7,r2,4c430 <__divdf3+0x6e8>
   4beb0:	e027883a 	mov	r19,fp
   4beb4:	9900004c 	andi	r4,r19,1
   4beb8:	0081ffc4 	movi	r2,2047
   4bebc:	0021883a 	mov	r16,zero
   4bec0:	002b883a 	mov	r21,zero
   4bec4:	1004953a 	slli	r2,r2,20
   4bec8:	20c03fcc 	andi	r3,r4,255
   4becc:	01400434 	movhi	r5,16
   4bed0:	297fffc4 	addi	r5,r5,-1
   4bed4:	180697fa 	slli	r3,r3,31
   4bed8:	8160703a 	and	r16,r16,r5
   4bedc:	80a0b03a 	or	r16,r16,r2
   4bee0:	80c6b03a 	or	r3,r16,r3
   4bee4:	a805883a 	mov	r2,r21
   4bee8:	dfc00f17 	ldw	ra,60(sp)
   4beec:	df000e17 	ldw	fp,56(sp)
   4bef0:	ddc00d17 	ldw	r23,52(sp)
   4bef4:	dd800c17 	ldw	r22,48(sp)
   4bef8:	dd400b17 	ldw	r21,44(sp)
   4befc:	dd000a17 	ldw	r20,40(sp)
   4bf00:	dcc00917 	ldw	r19,36(sp)
   4bf04:	dc800817 	ldw	r18,32(sp)
   4bf08:	dc400717 	ldw	r17,28(sp)
   4bf0c:	dc000617 	ldw	r16,24(sp)
   4bf10:	dec01004 	addi	sp,sp,64
   4bf14:	f800283a 	ret
   4bf18:	2404b03a 	or	r2,r4,r16
   4bf1c:	2023883a 	mov	r17,r4
   4bf20:	10003f26 	beq	r2,zero,4c020 <__divdf3+0x2d8>
   4bf24:	80015e26 	beq	r16,zero,4c4a0 <__divdf3+0x758>
   4bf28:	8009883a 	mov	r4,r16
   4bf2c:	d9800215 	stw	r6,8(sp)
   4bf30:	d9c00515 	stw	r7,20(sp)
   4bf34:	da000415 	stw	r8,16(sp)
   4bf38:	004dcdc0 	call	4dcdc <__clzsi2>
   4bf3c:	d9800217 	ldw	r6,8(sp)
   4bf40:	d9c00517 	ldw	r7,20(sp)
   4bf44:	da000417 	ldw	r8,16(sp)
   4bf48:	113ffd44 	addi	r4,r2,-11
   4bf4c:	00c00704 	movi	r3,28
   4bf50:	19014f16 	blt	r3,r4,4c490 <__divdf3+0x748>
   4bf54:	00c00744 	movi	r3,29
   4bf58:	157ffe04 	addi	r21,r2,-8
   4bf5c:	1907c83a 	sub	r3,r3,r4
   4bf60:	8560983a 	sll	r16,r16,r21
   4bf64:	88c6d83a 	srl	r3,r17,r3
   4bf68:	8d6a983a 	sll	r21,r17,r21
   4bf6c:	1c20b03a 	or	r16,r3,r16
   4bf70:	1080fcc4 	addi	r2,r2,1011
   4bf74:	00a5c83a 	sub	r18,zero,r2
   4bf78:	0013883a 	mov	r9,zero
   4bf7c:	000b883a 	mov	r5,zero
   4bf80:	003f8f06 	br	4bdc0 <__alt_data_end+0xfffdfea0>
   4bf84:	3444b03a 	or	r2,r6,r17
   4bf88:	1000231e 	bne	r2,zero,4c018 <__divdf3+0x2d0>
   4bf8c:	0023883a 	mov	r17,zero
   4bf90:	0029883a 	mov	r20,zero
   4bf94:	01c00084 	movi	r7,2
   4bf98:	003f9b06 	br	4be08 <__alt_data_end+0xfffdfee8>
   4bf9c:	3444b03a 	or	r2,r6,r17
   4bfa0:	10001926 	beq	r2,zero,4c008 <__divdf3+0x2c0>
   4bfa4:	88014b26 	beq	r17,zero,4c4d4 <__divdf3+0x78c>
   4bfa8:	8809883a 	mov	r4,r17
   4bfac:	d9400115 	stw	r5,4(sp)
   4bfb0:	d9800215 	stw	r6,8(sp)
   4bfb4:	da000415 	stw	r8,16(sp)
   4bfb8:	da400315 	stw	r9,12(sp)
   4bfbc:	004dcdc0 	call	4dcdc <__clzsi2>
   4bfc0:	d9400117 	ldw	r5,4(sp)
   4bfc4:	d9800217 	ldw	r6,8(sp)
   4bfc8:	da000417 	ldw	r8,16(sp)
   4bfcc:	da400317 	ldw	r9,12(sp)
   4bfd0:	113ffd44 	addi	r4,r2,-11
   4bfd4:	00c00704 	movi	r3,28
   4bfd8:	19013a16 	blt	r3,r4,4c4c4 <__divdf3+0x77c>
   4bfdc:	00c00744 	movi	r3,29
   4bfe0:	153ffe04 	addi	r20,r2,-8
   4bfe4:	1907c83a 	sub	r3,r3,r4
   4bfe8:	8d22983a 	sll	r17,r17,r20
   4bfec:	30c6d83a 	srl	r3,r6,r3
   4bff0:	3528983a 	sll	r20,r6,r20
   4bff4:	1c62b03a 	or	r17,r3,r17
   4bff8:	1080fcc4 	addi	r2,r2,1011
   4bffc:	0087c83a 	sub	r3,zero,r2
   4c000:	000f883a 	mov	r7,zero
   4c004:	003f8006 	br	4be08 <__alt_data_end+0xfffdfee8>
   4c008:	0023883a 	mov	r17,zero
   4c00c:	0029883a 	mov	r20,zero
   4c010:	01c00044 	movi	r7,1
   4c014:	003f7c06 	br	4be08 <__alt_data_end+0xfffdfee8>
   4c018:	01c000c4 	movi	r7,3
   4c01c:	003f7a06 	br	4be08 <__alt_data_end+0xfffdfee8>
   4c020:	02400104 	movi	r9,4
   4c024:	0021883a 	mov	r16,zero
   4c028:	002b883a 	mov	r21,zero
   4c02c:	01400044 	movi	r5,1
   4c030:	003f6306 	br	4bdc0 <__alt_data_end+0xfffdfea0>
   4c034:	02400304 	movi	r9,12
   4c038:	014000c4 	movi	r5,3
   4c03c:	003f6006 	br	4bdc0 <__alt_data_end+0xfffdfea0>
   4c040:	04000434 	movhi	r16,16
   4c044:	0009883a 	mov	r4,zero
   4c048:	843fffc4 	addi	r16,r16,-1
   4c04c:	057fffc4 	movi	r21,-1
   4c050:	0081ffc4 	movi	r2,2047
   4c054:	003f9b06 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c058:	00c00044 	movi	r3,1
   4c05c:	1887c83a 	sub	r3,r3,r2
   4c060:	01000e04 	movi	r4,56
   4c064:	20c1530e 	bge	r4,r3,4c5b4 <__divdf3+0x86c>
   4c068:	9900004c 	andi	r4,r19,1
   4c06c:	0005883a 	mov	r2,zero
   4c070:	0021883a 	mov	r16,zero
   4c074:	002b883a 	mov	r21,zero
   4c078:	003f9206 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c07c:	8c012e36 	bltu	r17,r16,4c538 <__divdf3+0x7f0>
   4c080:	84412c26 	beq	r16,r17,4c534 <__divdf3+0x7ec>
   4c084:	a82f883a 	mov	r23,r21
   4c088:	18ffffc4 	addi	r3,r3,-1
   4c08c:	002b883a 	mov	r21,zero
   4c090:	a004d63a 	srli	r2,r20,24
   4c094:	8822923a 	slli	r17,r17,8
   4c098:	a028923a 	slli	r20,r20,8
   4c09c:	8009883a 	mov	r4,r16
   4c0a0:	88acb03a 	or	r22,r17,r2
   4c0a4:	dd000015 	stw	r20,0(sp)
   4c0a8:	b028d43a 	srli	r20,r22,16
   4c0ac:	d8c00215 	stw	r3,8(sp)
   4c0b0:	b4bfffcc 	andi	r18,r22,65535
   4c0b4:	a00b883a 	mov	r5,r20
   4c0b8:	004b3b80 	call	4b3b8 <__udivsi3>
   4c0bc:	100b883a 	mov	r5,r2
   4c0c0:	9009883a 	mov	r4,r18
   4c0c4:	1023883a 	mov	r17,r2
   4c0c8:	004b4740 	call	4b474 <__mulsi3>
   4c0cc:	8009883a 	mov	r4,r16
   4c0d0:	a00b883a 	mov	r5,r20
   4c0d4:	1039883a 	mov	fp,r2
   4c0d8:	004b41c0 	call	4b41c <__umodsi3>
   4c0dc:	1004943a 	slli	r2,r2,16
   4c0e0:	b808d43a 	srli	r4,r23,16
   4c0e4:	d8c00217 	ldw	r3,8(sp)
   4c0e8:	2084b03a 	or	r2,r4,r2
   4c0ec:	1700062e 	bgeu	r2,fp,4c108 <__divdf3+0x3c0>
   4c0f0:	1585883a 	add	r2,r2,r22
   4c0f4:	893fffc4 	addi	r4,r17,-1
   4c0f8:	15811d36 	bltu	r2,r22,4c570 <__divdf3+0x828>
   4c0fc:	17011c2e 	bgeu	r2,fp,4c570 <__divdf3+0x828>
   4c100:	8c7fff84 	addi	r17,r17,-2
   4c104:	1585883a 	add	r2,r2,r22
   4c108:	1739c83a 	sub	fp,r2,fp
   4c10c:	a00b883a 	mov	r5,r20
   4c110:	e009883a 	mov	r4,fp
   4c114:	d8c00215 	stw	r3,8(sp)
   4c118:	004b3b80 	call	4b3b8 <__udivsi3>
   4c11c:	100b883a 	mov	r5,r2
   4c120:	9009883a 	mov	r4,r18
   4c124:	1021883a 	mov	r16,r2
   4c128:	004b4740 	call	4b474 <__mulsi3>
   4c12c:	a00b883a 	mov	r5,r20
   4c130:	e009883a 	mov	r4,fp
   4c134:	d8800415 	stw	r2,16(sp)
   4c138:	004b41c0 	call	4b41c <__umodsi3>
   4c13c:	1004943a 	slli	r2,r2,16
   4c140:	da000417 	ldw	r8,16(sp)
   4c144:	bdffffcc 	andi	r23,r23,65535
   4c148:	b884b03a 	or	r2,r23,r2
   4c14c:	d8c00217 	ldw	r3,8(sp)
   4c150:	1200062e 	bgeu	r2,r8,4c16c <__divdf3+0x424>
   4c154:	1585883a 	add	r2,r2,r22
   4c158:	813fffc4 	addi	r4,r16,-1
   4c15c:	15810236 	bltu	r2,r22,4c568 <__divdf3+0x820>
   4c160:	1201012e 	bgeu	r2,r8,4c568 <__divdf3+0x820>
   4c164:	843fff84 	addi	r16,r16,-2
   4c168:	1585883a 	add	r2,r2,r22
   4c16c:	8822943a 	slli	r17,r17,16
   4c170:	d9800017 	ldw	r6,0(sp)
   4c174:	1211c83a 	sub	r8,r2,r8
   4c178:	8c22b03a 	or	r17,r17,r16
   4c17c:	373fffcc 	andi	fp,r6,65535
   4c180:	8abfffcc 	andi	r10,r17,65535
   4c184:	8820d43a 	srli	r16,r17,16
   4c188:	5009883a 	mov	r4,r10
   4c18c:	e00b883a 	mov	r5,fp
   4c190:	302ed43a 	srli	r23,r6,16
   4c194:	d8c00215 	stw	r3,8(sp)
   4c198:	da000415 	stw	r8,16(sp)
   4c19c:	da800115 	stw	r10,4(sp)
   4c1a0:	004b4740 	call	4b474 <__mulsi3>
   4c1a4:	800b883a 	mov	r5,r16
   4c1a8:	e009883a 	mov	r4,fp
   4c1ac:	d8800515 	stw	r2,20(sp)
   4c1b0:	004b4740 	call	4b474 <__mulsi3>
   4c1b4:	8009883a 	mov	r4,r16
   4c1b8:	b80b883a 	mov	r5,r23
   4c1bc:	d8800315 	stw	r2,12(sp)
   4c1c0:	004b4740 	call	4b474 <__mulsi3>
   4c1c4:	da800117 	ldw	r10,4(sp)
   4c1c8:	b80b883a 	mov	r5,r23
   4c1cc:	1021883a 	mov	r16,r2
   4c1d0:	5009883a 	mov	r4,r10
   4c1d4:	004b4740 	call	4b474 <__mulsi3>
   4c1d8:	d9c00517 	ldw	r7,20(sp)
   4c1dc:	da400317 	ldw	r9,12(sp)
   4c1e0:	d8c00217 	ldw	r3,8(sp)
   4c1e4:	3808d43a 	srli	r4,r7,16
   4c1e8:	1245883a 	add	r2,r2,r9
   4c1ec:	da000417 	ldw	r8,16(sp)
   4c1f0:	2085883a 	add	r2,r4,r2
   4c1f4:	1240022e 	bgeu	r2,r9,4c200 <__divdf3+0x4b8>
   4c1f8:	01000074 	movhi	r4,1
   4c1fc:	8121883a 	add	r16,r16,r4
   4c200:	1008d43a 	srli	r4,r2,16
   4c204:	1004943a 	slli	r2,r2,16
   4c208:	39ffffcc 	andi	r7,r7,65535
   4c20c:	2409883a 	add	r4,r4,r16
   4c210:	11c5883a 	add	r2,r2,r7
   4c214:	4100bb36 	bltu	r8,r4,4c504 <__divdf3+0x7bc>
   4c218:	4100d726 	beq	r8,r4,4c578 <__divdf3+0x830>
   4c21c:	4109c83a 	sub	r4,r8,r4
   4c220:	a8a1c83a 	sub	r16,r21,r2
   4c224:	ac2b803a 	cmpltu	r21,r21,r16
   4c228:	256bc83a 	sub	r21,r4,r21
   4c22c:	b540d926 	beq	r22,r21,4c594 <__divdf3+0x84c>
   4c230:	a00b883a 	mov	r5,r20
   4c234:	a809883a 	mov	r4,r21
   4c238:	d8c00215 	stw	r3,8(sp)
   4c23c:	004b3b80 	call	4b3b8 <__udivsi3>
   4c240:	100b883a 	mov	r5,r2
   4c244:	9009883a 	mov	r4,r18
   4c248:	d8800515 	stw	r2,20(sp)
   4c24c:	004b4740 	call	4b474 <__mulsi3>
   4c250:	a809883a 	mov	r4,r21
   4c254:	a00b883a 	mov	r5,r20
   4c258:	d8800415 	stw	r2,16(sp)
   4c25c:	004b41c0 	call	4b41c <__umodsi3>
   4c260:	1004943a 	slli	r2,r2,16
   4c264:	8008d43a 	srli	r4,r16,16
   4c268:	da000417 	ldw	r8,16(sp)
   4c26c:	d8c00217 	ldw	r3,8(sp)
   4c270:	2084b03a 	or	r2,r4,r2
   4c274:	d9c00517 	ldw	r7,20(sp)
   4c278:	1200062e 	bgeu	r2,r8,4c294 <__divdf3+0x54c>
   4c27c:	1585883a 	add	r2,r2,r22
   4c280:	393fffc4 	addi	r4,r7,-1
   4c284:	1580c536 	bltu	r2,r22,4c59c <__divdf3+0x854>
   4c288:	1200c42e 	bgeu	r2,r8,4c59c <__divdf3+0x854>
   4c28c:	39ffff84 	addi	r7,r7,-2
   4c290:	1585883a 	add	r2,r2,r22
   4c294:	122bc83a 	sub	r21,r2,r8
   4c298:	a00b883a 	mov	r5,r20
   4c29c:	a809883a 	mov	r4,r21
   4c2a0:	d8c00215 	stw	r3,8(sp)
   4c2a4:	d9c00515 	stw	r7,20(sp)
   4c2a8:	004b3b80 	call	4b3b8 <__udivsi3>
   4c2ac:	9009883a 	mov	r4,r18
   4c2b0:	100b883a 	mov	r5,r2
   4c2b4:	d8800415 	stw	r2,16(sp)
   4c2b8:	004b4740 	call	4b474 <__mulsi3>
   4c2bc:	a809883a 	mov	r4,r21
   4c2c0:	a00b883a 	mov	r5,r20
   4c2c4:	1025883a 	mov	r18,r2
   4c2c8:	004b41c0 	call	4b41c <__umodsi3>
   4c2cc:	1004943a 	slli	r2,r2,16
   4c2d0:	813fffcc 	andi	r4,r16,65535
   4c2d4:	d8c00217 	ldw	r3,8(sp)
   4c2d8:	20a0b03a 	or	r16,r4,r2
   4c2dc:	d9c00517 	ldw	r7,20(sp)
   4c2e0:	da000417 	ldw	r8,16(sp)
   4c2e4:	8480062e 	bgeu	r16,r18,4c300 <__divdf3+0x5b8>
   4c2e8:	85a1883a 	add	r16,r16,r22
   4c2ec:	40bfffc4 	addi	r2,r8,-1
   4c2f0:	8580ac36 	bltu	r16,r22,4c5a4 <__divdf3+0x85c>
   4c2f4:	8480ab2e 	bgeu	r16,r18,4c5a4 <__divdf3+0x85c>
   4c2f8:	423fff84 	addi	r8,r8,-2
   4c2fc:	85a1883a 	add	r16,r16,r22
   4c300:	3804943a 	slli	r2,r7,16
   4c304:	84a1c83a 	sub	r16,r16,r18
   4c308:	e009883a 	mov	r4,fp
   4c30c:	1228b03a 	or	r20,r2,r8
   4c310:	a1ffffcc 	andi	r7,r20,65535
   4c314:	a024d43a 	srli	r18,r20,16
   4c318:	380b883a 	mov	r5,r7
   4c31c:	d8c00215 	stw	r3,8(sp)
   4c320:	d9c00515 	stw	r7,20(sp)
   4c324:	004b4740 	call	4b474 <__mulsi3>
   4c328:	900b883a 	mov	r5,r18
   4c32c:	e009883a 	mov	r4,fp
   4c330:	102b883a 	mov	r21,r2
   4c334:	004b4740 	call	4b474 <__mulsi3>
   4c338:	900b883a 	mov	r5,r18
   4c33c:	b809883a 	mov	r4,r23
   4c340:	1039883a 	mov	fp,r2
   4c344:	004b4740 	call	4b474 <__mulsi3>
   4c348:	d9c00517 	ldw	r7,20(sp)
   4c34c:	b80b883a 	mov	r5,r23
   4c350:	1025883a 	mov	r18,r2
   4c354:	3809883a 	mov	r4,r7
   4c358:	004b4740 	call	4b474 <__mulsi3>
   4c35c:	a808d43a 	srli	r4,r21,16
   4c360:	1705883a 	add	r2,r2,fp
   4c364:	d8c00217 	ldw	r3,8(sp)
   4c368:	2085883a 	add	r2,r4,r2
   4c36c:	1700022e 	bgeu	r2,fp,4c378 <__divdf3+0x630>
   4c370:	01000074 	movhi	r4,1
   4c374:	9125883a 	add	r18,r18,r4
   4c378:	1008d43a 	srli	r4,r2,16
   4c37c:	1004943a 	slli	r2,r2,16
   4c380:	ad7fffcc 	andi	r21,r21,65535
   4c384:	2489883a 	add	r4,r4,r18
   4c388:	1545883a 	add	r2,r2,r21
   4c38c:	81003836 	bltu	r16,r4,4c470 <__divdf3+0x728>
   4c390:	81003626 	beq	r16,r4,4c46c <__divdf3+0x724>
   4c394:	a5000054 	ori	r20,r20,1
   4c398:	1880ffc4 	addi	r2,r3,1023
   4c39c:	00bf2e0e 	bge	zero,r2,4c058 <__alt_data_end+0xfffe0138>
   4c3a0:	a10001cc 	andi	r4,r20,7
   4c3a4:	20000726 	beq	r4,zero,4c3c4 <__divdf3+0x67c>
   4c3a8:	a10003cc 	andi	r4,r20,15
   4c3ac:	01400104 	movi	r5,4
   4c3b0:	21400426 	beq	r4,r5,4c3c4 <__divdf3+0x67c>
   4c3b4:	a149883a 	add	r4,r20,r5
   4c3b8:	2529803a 	cmpltu	r20,r4,r20
   4c3bc:	8d23883a 	add	r17,r17,r20
   4c3c0:	2029883a 	mov	r20,r4
   4c3c4:	8900402c 	andhi	r4,r17,256
   4c3c8:	20000426 	beq	r4,zero,4c3dc <__divdf3+0x694>
   4c3cc:	18810004 	addi	r2,r3,1024
   4c3d0:	00ffc034 	movhi	r3,65280
   4c3d4:	18ffffc4 	addi	r3,r3,-1
   4c3d8:	88e2703a 	and	r17,r17,r3
   4c3dc:	00c1ff84 	movi	r3,2046
   4c3e0:	18beb416 	blt	r3,r2,4beb4 <__alt_data_end+0xfffdff94>
   4c3e4:	a028d0fa 	srli	r20,r20,3
   4c3e8:	882a977a 	slli	r21,r17,29
   4c3ec:	8820927a 	slli	r16,r17,9
   4c3f0:	1081ffcc 	andi	r2,r2,2047
   4c3f4:	ad2ab03a 	or	r21,r21,r20
   4c3f8:	8020d33a 	srli	r16,r16,12
   4c3fc:	9900004c 	andi	r4,r19,1
   4c400:	003eb006 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c404:	8080022c 	andhi	r2,r16,8
   4c408:	10001226 	beq	r2,zero,4c454 <__divdf3+0x70c>
   4c40c:	8880022c 	andhi	r2,r17,8
   4c410:	1000101e 	bne	r2,zero,4c454 <__divdf3+0x70c>
   4c414:	00800434 	movhi	r2,16
   4c418:	8c000234 	orhi	r16,r17,8
   4c41c:	10bfffc4 	addi	r2,r2,-1
   4c420:	b809883a 	mov	r4,r23
   4c424:	80a0703a 	and	r16,r16,r2
   4c428:	a02b883a 	mov	r21,r20
   4c42c:	003f0806 	br	4c050 <__alt_data_end+0xfffe0130>
   4c430:	008000c4 	movi	r2,3
   4c434:	3880b126 	beq	r7,r2,4c6fc <__divdf3+0x9b4>
   4c438:	00800044 	movi	r2,1
   4c43c:	38805b1e 	bne	r7,r2,4c5ac <__divdf3+0x864>
   4c440:	e009883a 	mov	r4,fp
   4c444:	0005883a 	mov	r2,zero
   4c448:	0021883a 	mov	r16,zero
   4c44c:	002b883a 	mov	r21,zero
   4c450:	003e9c06 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c454:	00800434 	movhi	r2,16
   4c458:	84000234 	orhi	r16,r16,8
   4c45c:	10bfffc4 	addi	r2,r2,-1
   4c460:	b009883a 	mov	r4,r22
   4c464:	80a0703a 	and	r16,r16,r2
   4c468:	003ef906 	br	4c050 <__alt_data_end+0xfffe0130>
   4c46c:	103fca26 	beq	r2,zero,4c398 <__alt_data_end+0xfffe0478>
   4c470:	b421883a 	add	r16,r22,r16
   4c474:	a17fffc4 	addi	r5,r20,-1
   4c478:	8580422e 	bgeu	r16,r22,4c584 <__divdf3+0x83c>
   4c47c:	2829883a 	mov	r20,r5
   4c480:	813fc41e 	bne	r16,r4,4c394 <__alt_data_end+0xfffe0474>
   4c484:	d9800017 	ldw	r6,0(sp)
   4c488:	30bfc21e 	bne	r6,r2,4c394 <__alt_data_end+0xfffe0474>
   4c48c:	003fc206 	br	4c398 <__alt_data_end+0xfffe0478>
   4c490:	143ff604 	addi	r16,r2,-40
   4c494:	8c20983a 	sll	r16,r17,r16
   4c498:	002b883a 	mov	r21,zero
   4c49c:	003eb406 	br	4bf70 <__alt_data_end+0xfffe0050>
   4c4a0:	d9800215 	stw	r6,8(sp)
   4c4a4:	d9c00515 	stw	r7,20(sp)
   4c4a8:	da000415 	stw	r8,16(sp)
   4c4ac:	004dcdc0 	call	4dcdc <__clzsi2>
   4c4b0:	10800804 	addi	r2,r2,32
   4c4b4:	da000417 	ldw	r8,16(sp)
   4c4b8:	d9c00517 	ldw	r7,20(sp)
   4c4bc:	d9800217 	ldw	r6,8(sp)
   4c4c0:	003ea106 	br	4bf48 <__alt_data_end+0xfffe0028>
   4c4c4:	147ff604 	addi	r17,r2,-40
   4c4c8:	3462983a 	sll	r17,r6,r17
   4c4cc:	0029883a 	mov	r20,zero
   4c4d0:	003ec906 	br	4bff8 <__alt_data_end+0xfffe00d8>
   4c4d4:	3009883a 	mov	r4,r6
   4c4d8:	d9400115 	stw	r5,4(sp)
   4c4dc:	d9800215 	stw	r6,8(sp)
   4c4e0:	da000415 	stw	r8,16(sp)
   4c4e4:	da400315 	stw	r9,12(sp)
   4c4e8:	004dcdc0 	call	4dcdc <__clzsi2>
   4c4ec:	10800804 	addi	r2,r2,32
   4c4f0:	da400317 	ldw	r9,12(sp)
   4c4f4:	da000417 	ldw	r8,16(sp)
   4c4f8:	d9800217 	ldw	r6,8(sp)
   4c4fc:	d9400117 	ldw	r5,4(sp)
   4c500:	003eb306 	br	4bfd0 <__alt_data_end+0xfffe00b0>
   4c504:	d9800017 	ldw	r6,0(sp)
   4c508:	a9ab883a 	add	r21,r21,r6
   4c50c:	a98b803a 	cmpltu	r5,r21,r6
   4c510:	2d8b883a 	add	r5,r5,r22
   4c514:	2a11883a 	add	r8,r5,r8
   4c518:	897fffc4 	addi	r5,r17,-1
   4c51c:	b2000c2e 	bgeu	r22,r8,4c550 <__divdf3+0x808>
   4c520:	41003f36 	bltu	r8,r4,4c620 <__divdf3+0x8d8>
   4c524:	22006c26 	beq	r4,r8,4c6d8 <__divdf3+0x990>
   4c528:	4109c83a 	sub	r4,r8,r4
   4c52c:	2823883a 	mov	r17,r5
   4c530:	003f3b06 	br	4c220 <__alt_data_end+0xfffe0300>
   4c534:	ad3ed336 	bltu	r21,r20,4c084 <__alt_data_end+0xfffe0164>
   4c538:	a804d07a 	srli	r2,r21,1
   4c53c:	802e97fa 	slli	r23,r16,31
   4c540:	a82a97fa 	slli	r21,r21,31
   4c544:	8020d07a 	srli	r16,r16,1
   4c548:	b8aeb03a 	or	r23,r23,r2
   4c54c:	003ed006 	br	4c090 <__alt_data_end+0xfffe0170>
   4c550:	b23ff51e 	bne	r22,r8,4c528 <__alt_data_end+0xfffe0608>
   4c554:	d9800017 	ldw	r6,0(sp)
   4c558:	a9bff12e 	bgeu	r21,r6,4c520 <__alt_data_end+0xfffe0600>
   4c55c:	b109c83a 	sub	r4,r22,r4
   4c560:	2823883a 	mov	r17,r5
   4c564:	003f2e06 	br	4c220 <__alt_data_end+0xfffe0300>
   4c568:	2021883a 	mov	r16,r4
   4c56c:	003eff06 	br	4c16c <__alt_data_end+0xfffe024c>
   4c570:	2023883a 	mov	r17,r4
   4c574:	003ee406 	br	4c108 <__alt_data_end+0xfffe01e8>
   4c578:	a8bfe236 	bltu	r21,r2,4c504 <__alt_data_end+0xfffe05e4>
   4c57c:	0009883a 	mov	r4,zero
   4c580:	003f2706 	br	4c220 <__alt_data_end+0xfffe0300>
   4c584:	81002d36 	bltu	r16,r4,4c63c <__divdf3+0x8f4>
   4c588:	24005626 	beq	r4,r16,4c6e4 <__divdf3+0x99c>
   4c58c:	2829883a 	mov	r20,r5
   4c590:	003f8006 	br	4c394 <__alt_data_end+0xfffe0474>
   4c594:	053fffc4 	movi	r20,-1
   4c598:	003f7f06 	br	4c398 <__alt_data_end+0xfffe0478>
   4c59c:	200f883a 	mov	r7,r4
   4c5a0:	003f3c06 	br	4c294 <__alt_data_end+0xfffe0374>
   4c5a4:	1011883a 	mov	r8,r2
   4c5a8:	003f5506 	br	4c300 <__alt_data_end+0xfffe03e0>
   4c5ac:	e027883a 	mov	r19,fp
   4c5b0:	003f7906 	br	4c398 <__alt_data_end+0xfffe0478>
   4c5b4:	010007c4 	movi	r4,31
   4c5b8:	20c02816 	blt	r4,r3,4c65c <__divdf3+0x914>
   4c5bc:	00800804 	movi	r2,32
   4c5c0:	10c5c83a 	sub	r2,r2,r3
   4c5c4:	888a983a 	sll	r5,r17,r2
   4c5c8:	a0c8d83a 	srl	r4,r20,r3
   4c5cc:	a084983a 	sll	r2,r20,r2
   4c5d0:	88e2d83a 	srl	r17,r17,r3
   4c5d4:	2906b03a 	or	r3,r5,r4
   4c5d8:	1004c03a 	cmpne	r2,r2,zero
   4c5dc:	1886b03a 	or	r3,r3,r2
   4c5e0:	188001cc 	andi	r2,r3,7
   4c5e4:	10000726 	beq	r2,zero,4c604 <__divdf3+0x8bc>
   4c5e8:	188003cc 	andi	r2,r3,15
   4c5ec:	01000104 	movi	r4,4
   4c5f0:	11000426 	beq	r2,r4,4c604 <__divdf3+0x8bc>
   4c5f4:	1805883a 	mov	r2,r3
   4c5f8:	10c00104 	addi	r3,r2,4
   4c5fc:	1885803a 	cmpltu	r2,r3,r2
   4c600:	88a3883a 	add	r17,r17,r2
   4c604:	8880202c 	andhi	r2,r17,128
   4c608:	10002926 	beq	r2,zero,4c6b0 <__divdf3+0x968>
   4c60c:	9900004c 	andi	r4,r19,1
   4c610:	00800044 	movi	r2,1
   4c614:	0021883a 	mov	r16,zero
   4c618:	002b883a 	mov	r21,zero
   4c61c:	003e2906 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c620:	d9800017 	ldw	r6,0(sp)
   4c624:	8c7fff84 	addi	r17,r17,-2
   4c628:	a9ab883a 	add	r21,r21,r6
   4c62c:	a98b803a 	cmpltu	r5,r21,r6
   4c630:	2d8b883a 	add	r5,r5,r22
   4c634:	2a11883a 	add	r8,r5,r8
   4c638:	003ef806 	br	4c21c <__alt_data_end+0xfffe02fc>
   4c63c:	d9800017 	ldw	r6,0(sp)
   4c640:	318f883a 	add	r7,r6,r6
   4c644:	398b803a 	cmpltu	r5,r7,r6
   4c648:	2d8d883a 	add	r6,r5,r22
   4c64c:	81a1883a 	add	r16,r16,r6
   4c650:	a17fff84 	addi	r5,r20,-2
   4c654:	d9c00015 	stw	r7,0(sp)
   4c658:	003f8806 	br	4c47c <__alt_data_end+0xfffe055c>
   4c65c:	013ff844 	movi	r4,-31
   4c660:	2085c83a 	sub	r2,r4,r2
   4c664:	8888d83a 	srl	r4,r17,r2
   4c668:	00800804 	movi	r2,32
   4c66c:	18802126 	beq	r3,r2,4c6f4 <__divdf3+0x9ac>
   4c670:	04001004 	movi	r16,64
   4c674:	80c7c83a 	sub	r3,r16,r3
   4c678:	88e0983a 	sll	r16,r17,r3
   4c67c:	8504b03a 	or	r2,r16,r20
   4c680:	1004c03a 	cmpne	r2,r2,zero
   4c684:	2084b03a 	or	r2,r4,r2
   4c688:	144001cc 	andi	r17,r2,7
   4c68c:	88000d1e 	bne	r17,zero,4c6c4 <__divdf3+0x97c>
   4c690:	0021883a 	mov	r16,zero
   4c694:	102ad0fa 	srli	r21,r2,3
   4c698:	9900004c 	andi	r4,r19,1
   4c69c:	0005883a 	mov	r2,zero
   4c6a0:	ac6ab03a 	or	r21,r21,r17
   4c6a4:	003e0706 	br	4bec4 <__alt_data_end+0xfffdffa4>
   4c6a8:	1007883a 	mov	r3,r2
   4c6ac:	0023883a 	mov	r17,zero
   4c6b0:	8820927a 	slli	r16,r17,9
   4c6b4:	1805883a 	mov	r2,r3
   4c6b8:	8822977a 	slli	r17,r17,29
   4c6bc:	8020d33a 	srli	r16,r16,12
   4c6c0:	003ff406 	br	4c694 <__alt_data_end+0xfffe0774>
   4c6c4:	10c003cc 	andi	r3,r2,15
   4c6c8:	01000104 	movi	r4,4
   4c6cc:	193ff626 	beq	r3,r4,4c6a8 <__alt_data_end+0xfffe0788>
   4c6d0:	0023883a 	mov	r17,zero
   4c6d4:	003fc806 	br	4c5f8 <__alt_data_end+0xfffe06d8>
   4c6d8:	a8bfd136 	bltu	r21,r2,4c620 <__alt_data_end+0xfffe0700>
   4c6dc:	2823883a 	mov	r17,r5
   4c6e0:	003fa606 	br	4c57c <__alt_data_end+0xfffe065c>
   4c6e4:	d9800017 	ldw	r6,0(sp)
   4c6e8:	30bfd436 	bltu	r6,r2,4c63c <__alt_data_end+0xfffe071c>
   4c6ec:	2829883a 	mov	r20,r5
   4c6f0:	003f6406 	br	4c484 <__alt_data_end+0xfffe0564>
   4c6f4:	0021883a 	mov	r16,zero
   4c6f8:	003fe006 	br	4c67c <__alt_data_end+0xfffe075c>
   4c6fc:	00800434 	movhi	r2,16
   4c700:	8c000234 	orhi	r16,r17,8
   4c704:	10bfffc4 	addi	r2,r2,-1
   4c708:	e009883a 	mov	r4,fp
   4c70c:	80a0703a 	and	r16,r16,r2
   4c710:	a02b883a 	mov	r21,r20
   4c714:	003e4e06 	br	4c050 <__alt_data_end+0xfffe0130>

0004c718 <__eqdf2>:
   4c718:	2804d53a 	srli	r2,r5,20
   4c71c:	3806d53a 	srli	r3,r7,20
   4c720:	02000434 	movhi	r8,16
   4c724:	423fffc4 	addi	r8,r8,-1
   4c728:	1081ffcc 	andi	r2,r2,2047
   4c72c:	0281ffc4 	movi	r10,2047
   4c730:	2a12703a 	and	r9,r5,r8
   4c734:	18c1ffcc 	andi	r3,r3,2047
   4c738:	3a10703a 	and	r8,r7,r8
   4c73c:	280ad7fa 	srli	r5,r5,31
   4c740:	380ed7fa 	srli	r7,r7,31
   4c744:	12801026 	beq	r2,r10,4c788 <__eqdf2+0x70>
   4c748:	0281ffc4 	movi	r10,2047
   4c74c:	1a800a26 	beq	r3,r10,4c778 <__eqdf2+0x60>
   4c750:	10c00226 	beq	r2,r3,4c75c <__eqdf2+0x44>
   4c754:	00800044 	movi	r2,1
   4c758:	f800283a 	ret
   4c75c:	4a3ffd1e 	bne	r9,r8,4c754 <__alt_data_end+0xfffe0834>
   4c760:	21bffc1e 	bne	r4,r6,4c754 <__alt_data_end+0xfffe0834>
   4c764:	29c00c26 	beq	r5,r7,4c798 <__eqdf2+0x80>
   4c768:	103ffa1e 	bne	r2,zero,4c754 <__alt_data_end+0xfffe0834>
   4c76c:	2244b03a 	or	r2,r4,r9
   4c770:	1004c03a 	cmpne	r2,r2,zero
   4c774:	f800283a 	ret
   4c778:	3214b03a 	or	r10,r6,r8
   4c77c:	503ff426 	beq	r10,zero,4c750 <__alt_data_end+0xfffe0830>
   4c780:	00800044 	movi	r2,1
   4c784:	f800283a 	ret
   4c788:	2254b03a 	or	r10,r4,r9
   4c78c:	503fee26 	beq	r10,zero,4c748 <__alt_data_end+0xfffe0828>
   4c790:	00800044 	movi	r2,1
   4c794:	f800283a 	ret
   4c798:	0005883a 	mov	r2,zero
   4c79c:	f800283a 	ret

0004c7a0 <__gedf2>:
   4c7a0:	2804d53a 	srli	r2,r5,20
   4c7a4:	3806d53a 	srli	r3,r7,20
   4c7a8:	02000434 	movhi	r8,16
   4c7ac:	423fffc4 	addi	r8,r8,-1
   4c7b0:	1081ffcc 	andi	r2,r2,2047
   4c7b4:	0241ffc4 	movi	r9,2047
   4c7b8:	2a14703a 	and	r10,r5,r8
   4c7bc:	18c1ffcc 	andi	r3,r3,2047
   4c7c0:	3a10703a 	and	r8,r7,r8
   4c7c4:	280ad7fa 	srli	r5,r5,31
   4c7c8:	380ed7fa 	srli	r7,r7,31
   4c7cc:	12401d26 	beq	r2,r9,4c844 <__gedf2+0xa4>
   4c7d0:	0241ffc4 	movi	r9,2047
   4c7d4:	1a401226 	beq	r3,r9,4c820 <__gedf2+0x80>
   4c7d8:	1000081e 	bne	r2,zero,4c7fc <__gedf2+0x5c>
   4c7dc:	2296b03a 	or	r11,r4,r10
   4c7e0:	5813003a 	cmpeq	r9,r11,zero
   4c7e4:	1800091e 	bne	r3,zero,4c80c <__gedf2+0x6c>
   4c7e8:	3218b03a 	or	r12,r6,r8
   4c7ec:	6000071e 	bne	r12,zero,4c80c <__gedf2+0x6c>
   4c7f0:	0005883a 	mov	r2,zero
   4c7f4:	5800101e 	bne	r11,zero,4c838 <__gedf2+0x98>
   4c7f8:	f800283a 	ret
   4c7fc:	18000c1e 	bne	r3,zero,4c830 <__gedf2+0x90>
   4c800:	3212b03a 	or	r9,r6,r8
   4c804:	48000c26 	beq	r9,zero,4c838 <__gedf2+0x98>
   4c808:	0013883a 	mov	r9,zero
   4c80c:	39c03fcc 	andi	r7,r7,255
   4c810:	48000826 	beq	r9,zero,4c834 <__gedf2+0x94>
   4c814:	38000926 	beq	r7,zero,4c83c <__gedf2+0x9c>
   4c818:	00800044 	movi	r2,1
   4c81c:	f800283a 	ret
   4c820:	3212b03a 	or	r9,r6,r8
   4c824:	483fec26 	beq	r9,zero,4c7d8 <__alt_data_end+0xfffe08b8>
   4c828:	00bfff84 	movi	r2,-2
   4c82c:	f800283a 	ret
   4c830:	39c03fcc 	andi	r7,r7,255
   4c834:	29c00626 	beq	r5,r7,4c850 <__gedf2+0xb0>
   4c838:	283ff726 	beq	r5,zero,4c818 <__alt_data_end+0xfffe08f8>
   4c83c:	00bfffc4 	movi	r2,-1
   4c840:	f800283a 	ret
   4c844:	2292b03a 	or	r9,r4,r10
   4c848:	483fe126 	beq	r9,zero,4c7d0 <__alt_data_end+0xfffe08b0>
   4c84c:	003ff606 	br	4c828 <__alt_data_end+0xfffe0908>
   4c850:	18bff916 	blt	r3,r2,4c838 <__alt_data_end+0xfffe0918>
   4c854:	10c00316 	blt	r2,r3,4c864 <__gedf2+0xc4>
   4c858:	42bff736 	bltu	r8,r10,4c838 <__alt_data_end+0xfffe0918>
   4c85c:	52000326 	beq	r10,r8,4c86c <__gedf2+0xcc>
   4c860:	5200042e 	bgeu	r10,r8,4c874 <__gedf2+0xd4>
   4c864:	283fec1e 	bne	r5,zero,4c818 <__alt_data_end+0xfffe08f8>
   4c868:	003ff406 	br	4c83c <__alt_data_end+0xfffe091c>
   4c86c:	313ff236 	bltu	r6,r4,4c838 <__alt_data_end+0xfffe0918>
   4c870:	21bffc36 	bltu	r4,r6,4c864 <__alt_data_end+0xfffe0944>
   4c874:	0005883a 	mov	r2,zero
   4c878:	f800283a 	ret

0004c87c <__ledf2>:
   4c87c:	2804d53a 	srli	r2,r5,20
   4c880:	3810d53a 	srli	r8,r7,20
   4c884:	00c00434 	movhi	r3,16
   4c888:	18ffffc4 	addi	r3,r3,-1
   4c88c:	1081ffcc 	andi	r2,r2,2047
   4c890:	0241ffc4 	movi	r9,2047
   4c894:	28d4703a 	and	r10,r5,r3
   4c898:	4201ffcc 	andi	r8,r8,2047
   4c89c:	38c6703a 	and	r3,r7,r3
   4c8a0:	280ad7fa 	srli	r5,r5,31
   4c8a4:	380ed7fa 	srli	r7,r7,31
   4c8a8:	12401f26 	beq	r2,r9,4c928 <__ledf2+0xac>
   4c8ac:	0241ffc4 	movi	r9,2047
   4c8b0:	42401426 	beq	r8,r9,4c904 <__ledf2+0x88>
   4c8b4:	1000091e 	bne	r2,zero,4c8dc <__ledf2+0x60>
   4c8b8:	2296b03a 	or	r11,r4,r10
   4c8bc:	5813003a 	cmpeq	r9,r11,zero
   4c8c0:	29403fcc 	andi	r5,r5,255
   4c8c4:	40000a1e 	bne	r8,zero,4c8f0 <__ledf2+0x74>
   4c8c8:	30d8b03a 	or	r12,r6,r3
   4c8cc:	6000081e 	bne	r12,zero,4c8f0 <__ledf2+0x74>
   4c8d0:	0005883a 	mov	r2,zero
   4c8d4:	5800111e 	bne	r11,zero,4c91c <__ledf2+0xa0>
   4c8d8:	f800283a 	ret
   4c8dc:	29403fcc 	andi	r5,r5,255
   4c8e0:	40000c1e 	bne	r8,zero,4c914 <__ledf2+0x98>
   4c8e4:	30d2b03a 	or	r9,r6,r3
   4c8e8:	48000c26 	beq	r9,zero,4c91c <__ledf2+0xa0>
   4c8ec:	0013883a 	mov	r9,zero
   4c8f0:	39c03fcc 	andi	r7,r7,255
   4c8f4:	48000826 	beq	r9,zero,4c918 <__ledf2+0x9c>
   4c8f8:	38001126 	beq	r7,zero,4c940 <__ledf2+0xc4>
   4c8fc:	00800044 	movi	r2,1
   4c900:	f800283a 	ret
   4c904:	30d2b03a 	or	r9,r6,r3
   4c908:	483fea26 	beq	r9,zero,4c8b4 <__alt_data_end+0xfffe0994>
   4c90c:	00800084 	movi	r2,2
   4c910:	f800283a 	ret
   4c914:	39c03fcc 	andi	r7,r7,255
   4c918:	39400726 	beq	r7,r5,4c938 <__ledf2+0xbc>
   4c91c:	2800081e 	bne	r5,zero,4c940 <__ledf2+0xc4>
   4c920:	00800044 	movi	r2,1
   4c924:	f800283a 	ret
   4c928:	2292b03a 	or	r9,r4,r10
   4c92c:	483fdf26 	beq	r9,zero,4c8ac <__alt_data_end+0xfffe098c>
   4c930:	00800084 	movi	r2,2
   4c934:	f800283a 	ret
   4c938:	4080030e 	bge	r8,r2,4c948 <__ledf2+0xcc>
   4c93c:	383fef26 	beq	r7,zero,4c8fc <__alt_data_end+0xfffe09dc>
   4c940:	00bfffc4 	movi	r2,-1
   4c944:	f800283a 	ret
   4c948:	123feb16 	blt	r2,r8,4c8f8 <__alt_data_end+0xfffe09d8>
   4c94c:	1abff336 	bltu	r3,r10,4c91c <__alt_data_end+0xfffe09fc>
   4c950:	50c00326 	beq	r10,r3,4c960 <__ledf2+0xe4>
   4c954:	50c0042e 	bgeu	r10,r3,4c968 <__ledf2+0xec>
   4c958:	283fe81e 	bne	r5,zero,4c8fc <__alt_data_end+0xfffe09dc>
   4c95c:	003ff806 	br	4c940 <__alt_data_end+0xfffe0a20>
   4c960:	313fee36 	bltu	r6,r4,4c91c <__alt_data_end+0xfffe09fc>
   4c964:	21bffc36 	bltu	r4,r6,4c958 <__alt_data_end+0xfffe0a38>
   4c968:	0005883a 	mov	r2,zero
   4c96c:	f800283a 	ret

0004c970 <__muldf3>:
   4c970:	deffee04 	addi	sp,sp,-72
   4c974:	dd000c15 	stw	r20,48(sp)
   4c978:	2828d53a 	srli	r20,r5,20
   4c97c:	ddc00f15 	stw	r23,60(sp)
   4c980:	282ed7fa 	srli	r23,r5,31
   4c984:	dc000815 	stw	r16,32(sp)
   4c988:	04000434 	movhi	r16,16
   4c98c:	dcc00b15 	stw	r19,44(sp)
   4c990:	843fffc4 	addi	r16,r16,-1
   4c994:	dfc01115 	stw	ra,68(sp)
   4c998:	df001015 	stw	fp,64(sp)
   4c99c:	dd800e15 	stw	r22,56(sp)
   4c9a0:	dd400d15 	stw	r21,52(sp)
   4c9a4:	dc800a15 	stw	r18,40(sp)
   4c9a8:	dc400915 	stw	r17,36(sp)
   4c9ac:	a501ffcc 	andi	r20,r20,2047
   4c9b0:	2c20703a 	and	r16,r5,r16
   4c9b4:	b827883a 	mov	r19,r23
   4c9b8:	ba403fcc 	andi	r9,r23,255
   4c9bc:	a0006026 	beq	r20,zero,4cb40 <__muldf3+0x1d0>
   4c9c0:	0081ffc4 	movi	r2,2047
   4c9c4:	202d883a 	mov	r22,r4
   4c9c8:	a0803626 	beq	r20,r2,4caa4 <__muldf3+0x134>
   4c9cc:	84000434 	orhi	r16,r16,16
   4c9d0:	200ad77a 	srli	r5,r4,29
   4c9d4:	800490fa 	slli	r2,r16,3
   4c9d8:	202c90fa 	slli	r22,r4,3
   4c9dc:	a53f0044 	addi	r20,r20,-1023
   4c9e0:	28a0b03a 	or	r16,r5,r2
   4c9e4:	002b883a 	mov	r21,zero
   4c9e8:	000b883a 	mov	r5,zero
   4c9ec:	3804d53a 	srli	r2,r7,20
   4c9f0:	3838d7fa 	srli	fp,r7,31
   4c9f4:	04400434 	movhi	r17,16
   4c9f8:	8c7fffc4 	addi	r17,r17,-1
   4c9fc:	1081ffcc 	andi	r2,r2,2047
   4ca00:	3025883a 	mov	r18,r6
   4ca04:	3c62703a 	and	r17,r7,r17
   4ca08:	e2803fcc 	andi	r10,fp,255
   4ca0c:	10006d26 	beq	r2,zero,4cbc4 <__muldf3+0x254>
   4ca10:	00c1ffc4 	movi	r3,2047
   4ca14:	10c06526 	beq	r2,r3,4cbac <__muldf3+0x23c>
   4ca18:	8c400434 	orhi	r17,r17,16
   4ca1c:	300ed77a 	srli	r7,r6,29
   4ca20:	880690fa 	slli	r3,r17,3
   4ca24:	302490fa 	slli	r18,r6,3
   4ca28:	10bf0044 	addi	r2,r2,-1023
   4ca2c:	38e2b03a 	or	r17,r7,r3
   4ca30:	000f883a 	mov	r7,zero
   4ca34:	a087883a 	add	r3,r20,r2
   4ca38:	010003c4 	movi	r4,15
   4ca3c:	3d44b03a 	or	r2,r7,r21
   4ca40:	e5ccf03a 	xor	r6,fp,r23
   4ca44:	1a000044 	addi	r8,r3,1
   4ca48:	20809b36 	bltu	r4,r2,4ccb8 <__muldf3+0x348>
   4ca4c:	100490ba 	slli	r2,r2,2
   4ca50:	01000174 	movhi	r4,5
   4ca54:	21329904 	addi	r4,r4,-13724
   4ca58:	1105883a 	add	r2,r2,r4
   4ca5c:	10800017 	ldw	r2,0(r2)
   4ca60:	1000683a 	jmp	r2
   4ca64:	0004ccb8 	rdprs	zero,zero,4914
   4ca68:	0004cac4 	movi	zero,4907
   4ca6c:	0004cac4 	movi	zero,4907
   4ca70:	0004cac0 	call	4cac <__reset-0x3b354>
   4ca74:	0004cc94 	movui	zero,4914
   4ca78:	0004cc94 	movui	zero,4914
   4ca7c:	0004cc7c 	xorhi	zero,zero,4913
   4ca80:	0004cac0 	call	4cac <__reset-0x3b354>
   4ca84:	0004cc94 	movui	zero,4914
   4ca88:	0004cc7c 	xorhi	zero,zero,4913
   4ca8c:	0004cc94 	movui	zero,4914
   4ca90:	0004cac0 	call	4cac <__reset-0x3b354>
   4ca94:	0004cca4 	muli	zero,zero,4914
   4ca98:	0004cca4 	muli	zero,zero,4914
   4ca9c:	0004cca4 	muli	zero,zero,4914
   4caa0:	0004d004 	movi	zero,4928
   4caa4:	2404b03a 	or	r2,r4,r16
   4caa8:	1000711e 	bne	r2,zero,4cc70 <__muldf3+0x300>
   4caac:	05400204 	movi	r21,8
   4cab0:	0021883a 	mov	r16,zero
   4cab4:	002d883a 	mov	r22,zero
   4cab8:	01400084 	movi	r5,2
   4cabc:	003fcb06 	br	4c9ec <__alt_data_end+0xfffe0acc>
   4cac0:	500d883a 	mov	r6,r10
   4cac4:	00800084 	movi	r2,2
   4cac8:	38805926 	beq	r7,r2,4cc30 <__muldf3+0x2c0>
   4cacc:	008000c4 	movi	r2,3
   4cad0:	3881bb26 	beq	r7,r2,4d1c0 <__muldf3+0x850>
   4cad4:	00800044 	movi	r2,1
   4cad8:	3881961e 	bne	r7,r2,4d134 <__muldf3+0x7c4>
   4cadc:	3027883a 	mov	r19,r6
   4cae0:	0005883a 	mov	r2,zero
   4cae4:	0021883a 	mov	r16,zero
   4cae8:	002d883a 	mov	r22,zero
   4caec:	1004953a 	slli	r2,r2,20
   4caf0:	98c03fcc 	andi	r3,r19,255
   4caf4:	04400434 	movhi	r17,16
   4caf8:	8c7fffc4 	addi	r17,r17,-1
   4cafc:	180697fa 	slli	r3,r3,31
   4cb00:	8460703a 	and	r16,r16,r17
   4cb04:	80a0b03a 	or	r16,r16,r2
   4cb08:	80c6b03a 	or	r3,r16,r3
   4cb0c:	b005883a 	mov	r2,r22
   4cb10:	dfc01117 	ldw	ra,68(sp)
   4cb14:	df001017 	ldw	fp,64(sp)
   4cb18:	ddc00f17 	ldw	r23,60(sp)
   4cb1c:	dd800e17 	ldw	r22,56(sp)
   4cb20:	dd400d17 	ldw	r21,52(sp)
   4cb24:	dd000c17 	ldw	r20,48(sp)
   4cb28:	dcc00b17 	ldw	r19,44(sp)
   4cb2c:	dc800a17 	ldw	r18,40(sp)
   4cb30:	dc400917 	ldw	r17,36(sp)
   4cb34:	dc000817 	ldw	r16,32(sp)
   4cb38:	dec01204 	addi	sp,sp,72
   4cb3c:	f800283a 	ret
   4cb40:	2404b03a 	or	r2,r4,r16
   4cb44:	202b883a 	mov	r21,r4
   4cb48:	10004426 	beq	r2,zero,4cc5c <__muldf3+0x2ec>
   4cb4c:	80015126 	beq	r16,zero,4d094 <__muldf3+0x724>
   4cb50:	8009883a 	mov	r4,r16
   4cb54:	d9800715 	stw	r6,28(sp)
   4cb58:	d9c00215 	stw	r7,8(sp)
   4cb5c:	da400415 	stw	r9,16(sp)
   4cb60:	004dcdc0 	call	4dcdc <__clzsi2>
   4cb64:	d9800717 	ldw	r6,28(sp)
   4cb68:	d9c00217 	ldw	r7,8(sp)
   4cb6c:	da400417 	ldw	r9,16(sp)
   4cb70:	113ffd44 	addi	r4,r2,-11
   4cb74:	00c00704 	movi	r3,28
   4cb78:	19014216 	blt	r3,r4,4d084 <__muldf3+0x714>
   4cb7c:	00c00744 	movi	r3,29
   4cb80:	15bffe04 	addi	r22,r2,-8
   4cb84:	1907c83a 	sub	r3,r3,r4
   4cb88:	85a0983a 	sll	r16,r16,r22
   4cb8c:	a8c6d83a 	srl	r3,r21,r3
   4cb90:	adac983a 	sll	r22,r21,r22
   4cb94:	1c20b03a 	or	r16,r3,r16
   4cb98:	1080fcc4 	addi	r2,r2,1011
   4cb9c:	00a9c83a 	sub	r20,zero,r2
   4cba0:	002b883a 	mov	r21,zero
   4cba4:	000b883a 	mov	r5,zero
   4cba8:	003f9006 	br	4c9ec <__alt_data_end+0xfffe0acc>
   4cbac:	3446b03a 	or	r3,r6,r17
   4cbb0:	1800281e 	bne	r3,zero,4cc54 <__muldf3+0x2e4>
   4cbb4:	0023883a 	mov	r17,zero
   4cbb8:	0025883a 	mov	r18,zero
   4cbbc:	01c00084 	movi	r7,2
   4cbc0:	003f9c06 	br	4ca34 <__alt_data_end+0xfffe0b14>
   4cbc4:	3446b03a 	or	r3,r6,r17
   4cbc8:	18001e26 	beq	r3,zero,4cc44 <__muldf3+0x2d4>
   4cbcc:	88012126 	beq	r17,zero,4d054 <__muldf3+0x6e4>
   4cbd0:	8809883a 	mov	r4,r17
   4cbd4:	d9400215 	stw	r5,8(sp)
   4cbd8:	d9800715 	stw	r6,28(sp)
   4cbdc:	da400415 	stw	r9,16(sp)
   4cbe0:	da800315 	stw	r10,12(sp)
   4cbe4:	004dcdc0 	call	4dcdc <__clzsi2>
   4cbe8:	d9400217 	ldw	r5,8(sp)
   4cbec:	d9800717 	ldw	r6,28(sp)
   4cbf0:	da400417 	ldw	r9,16(sp)
   4cbf4:	da800317 	ldw	r10,12(sp)
   4cbf8:	113ffd44 	addi	r4,r2,-11
   4cbfc:	00c00704 	movi	r3,28
   4cc00:	19011016 	blt	r3,r4,4d044 <__muldf3+0x6d4>
   4cc04:	00c00744 	movi	r3,29
   4cc08:	14bffe04 	addi	r18,r2,-8
   4cc0c:	1907c83a 	sub	r3,r3,r4
   4cc10:	8ca2983a 	sll	r17,r17,r18
   4cc14:	30c6d83a 	srl	r3,r6,r3
   4cc18:	34a4983a 	sll	r18,r6,r18
   4cc1c:	1c62b03a 	or	r17,r3,r17
   4cc20:	1080fcc4 	addi	r2,r2,1011
   4cc24:	0085c83a 	sub	r2,zero,r2
   4cc28:	000f883a 	mov	r7,zero
   4cc2c:	003f8106 	br	4ca34 <__alt_data_end+0xfffe0b14>
   4cc30:	3027883a 	mov	r19,r6
   4cc34:	0081ffc4 	movi	r2,2047
   4cc38:	0021883a 	mov	r16,zero
   4cc3c:	002d883a 	mov	r22,zero
   4cc40:	003faa06 	br	4caec <__alt_data_end+0xfffe0bcc>
   4cc44:	0023883a 	mov	r17,zero
   4cc48:	0025883a 	mov	r18,zero
   4cc4c:	01c00044 	movi	r7,1
   4cc50:	003f7806 	br	4ca34 <__alt_data_end+0xfffe0b14>
   4cc54:	01c000c4 	movi	r7,3
   4cc58:	003f7606 	br	4ca34 <__alt_data_end+0xfffe0b14>
   4cc5c:	05400104 	movi	r21,4
   4cc60:	0021883a 	mov	r16,zero
   4cc64:	002d883a 	mov	r22,zero
   4cc68:	01400044 	movi	r5,1
   4cc6c:	003f5f06 	br	4c9ec <__alt_data_end+0xfffe0acc>
   4cc70:	05400304 	movi	r21,12
   4cc74:	014000c4 	movi	r5,3
   4cc78:	003f5c06 	br	4c9ec <__alt_data_end+0xfffe0acc>
   4cc7c:	04000434 	movhi	r16,16
   4cc80:	0027883a 	mov	r19,zero
   4cc84:	843fffc4 	addi	r16,r16,-1
   4cc88:	05bfffc4 	movi	r22,-1
   4cc8c:	0081ffc4 	movi	r2,2047
   4cc90:	003f9606 	br	4caec <__alt_data_end+0xfffe0bcc>
   4cc94:	8023883a 	mov	r17,r16
   4cc98:	b025883a 	mov	r18,r22
   4cc9c:	280f883a 	mov	r7,r5
   4cca0:	003f8806 	br	4cac4 <__alt_data_end+0xfffe0ba4>
   4cca4:	8023883a 	mov	r17,r16
   4cca8:	b025883a 	mov	r18,r22
   4ccac:	480d883a 	mov	r6,r9
   4ccb0:	280f883a 	mov	r7,r5
   4ccb4:	003f8306 	br	4cac4 <__alt_data_end+0xfffe0ba4>
   4ccb8:	b026d43a 	srli	r19,r22,16
   4ccbc:	902ed43a 	srli	r23,r18,16
   4ccc0:	b5bfffcc 	andi	r22,r22,65535
   4ccc4:	94bfffcc 	andi	r18,r18,65535
   4ccc8:	b00b883a 	mov	r5,r22
   4cccc:	9009883a 	mov	r4,r18
   4ccd0:	d8c00515 	stw	r3,20(sp)
   4ccd4:	d9800715 	stw	r6,28(sp)
   4ccd8:	da000615 	stw	r8,24(sp)
   4ccdc:	004b4740 	call	4b474 <__mulsi3>
   4cce0:	980b883a 	mov	r5,r19
   4cce4:	9009883a 	mov	r4,r18
   4cce8:	1029883a 	mov	r20,r2
   4ccec:	004b4740 	call	4b474 <__mulsi3>
   4ccf0:	b80b883a 	mov	r5,r23
   4ccf4:	9809883a 	mov	r4,r19
   4ccf8:	102b883a 	mov	r21,r2
   4ccfc:	004b4740 	call	4b474 <__mulsi3>
   4cd00:	b809883a 	mov	r4,r23
   4cd04:	b00b883a 	mov	r5,r22
   4cd08:	1039883a 	mov	fp,r2
   4cd0c:	004b4740 	call	4b474 <__mulsi3>
   4cd10:	a008d43a 	srli	r4,r20,16
   4cd14:	1545883a 	add	r2,r2,r21
   4cd18:	d8c00517 	ldw	r3,20(sp)
   4cd1c:	2085883a 	add	r2,r4,r2
   4cd20:	d9800717 	ldw	r6,28(sp)
   4cd24:	da000617 	ldw	r8,24(sp)
   4cd28:	1540022e 	bgeu	r2,r21,4cd34 <__muldf3+0x3c4>
   4cd2c:	01000074 	movhi	r4,1
   4cd30:	e139883a 	add	fp,fp,r4
   4cd34:	100e943a 	slli	r7,r2,16
   4cd38:	1004d43a 	srli	r2,r2,16
   4cd3c:	882ad43a 	srli	r21,r17,16
   4cd40:	a53fffcc 	andi	r20,r20,65535
   4cd44:	8c7fffcc 	andi	r17,r17,65535
   4cd48:	3d29883a 	add	r20,r7,r20
   4cd4c:	b00b883a 	mov	r5,r22
   4cd50:	8809883a 	mov	r4,r17
   4cd54:	d8c00515 	stw	r3,20(sp)
   4cd58:	d9800715 	stw	r6,28(sp)
   4cd5c:	da000615 	stw	r8,24(sp)
   4cd60:	dd000115 	stw	r20,4(sp)
   4cd64:	d8800015 	stw	r2,0(sp)
   4cd68:	004b4740 	call	4b474 <__mulsi3>
   4cd6c:	980b883a 	mov	r5,r19
   4cd70:	8809883a 	mov	r4,r17
   4cd74:	d8800215 	stw	r2,8(sp)
   4cd78:	004b4740 	call	4b474 <__mulsi3>
   4cd7c:	9809883a 	mov	r4,r19
   4cd80:	a80b883a 	mov	r5,r21
   4cd84:	1029883a 	mov	r20,r2
   4cd88:	004b4740 	call	4b474 <__mulsi3>
   4cd8c:	b00b883a 	mov	r5,r22
   4cd90:	a809883a 	mov	r4,r21
   4cd94:	d8800415 	stw	r2,16(sp)
   4cd98:	004b4740 	call	4b474 <__mulsi3>
   4cd9c:	d9c00217 	ldw	r7,8(sp)
   4cda0:	1505883a 	add	r2,r2,r20
   4cda4:	d8c00517 	ldw	r3,20(sp)
   4cda8:	3826d43a 	srli	r19,r7,16
   4cdac:	d9800717 	ldw	r6,28(sp)
   4cdb0:	da000617 	ldw	r8,24(sp)
   4cdb4:	9885883a 	add	r2,r19,r2
   4cdb8:	da400417 	ldw	r9,16(sp)
   4cdbc:	1500022e 	bgeu	r2,r20,4cdc8 <__muldf3+0x458>
   4cdc0:	01000074 	movhi	r4,1
   4cdc4:	4913883a 	add	r9,r9,r4
   4cdc8:	1028d43a 	srli	r20,r2,16
   4cdcc:	1004943a 	slli	r2,r2,16
   4cdd0:	802cd43a 	srli	r22,r16,16
   4cdd4:	843fffcc 	andi	r16,r16,65535
   4cdd8:	3cffffcc 	andi	r19,r7,65535
   4cddc:	9009883a 	mov	r4,r18
   4cde0:	800b883a 	mov	r5,r16
   4cde4:	a269883a 	add	r20,r20,r9
   4cde8:	d8c00515 	stw	r3,20(sp)
   4cdec:	d9800715 	stw	r6,28(sp)
   4cdf0:	da000615 	stw	r8,24(sp)
   4cdf4:	14e7883a 	add	r19,r2,r19
   4cdf8:	004b4740 	call	4b474 <__mulsi3>
   4cdfc:	9009883a 	mov	r4,r18
   4ce00:	b00b883a 	mov	r5,r22
   4ce04:	d8800315 	stw	r2,12(sp)
   4ce08:	004b4740 	call	4b474 <__mulsi3>
   4ce0c:	b809883a 	mov	r4,r23
   4ce10:	b00b883a 	mov	r5,r22
   4ce14:	d8800215 	stw	r2,8(sp)
   4ce18:	004b4740 	call	4b474 <__mulsi3>
   4ce1c:	b80b883a 	mov	r5,r23
   4ce20:	8009883a 	mov	r4,r16
   4ce24:	d8800415 	stw	r2,16(sp)
   4ce28:	004b4740 	call	4b474 <__mulsi3>
   4ce2c:	da800317 	ldw	r10,12(sp)
   4ce30:	d9c00217 	ldw	r7,8(sp)
   4ce34:	d9000017 	ldw	r4,0(sp)
   4ce38:	502ed43a 	srli	r23,r10,16
   4ce3c:	11c5883a 	add	r2,r2,r7
   4ce40:	24e5883a 	add	r18,r4,r19
   4ce44:	b885883a 	add	r2,r23,r2
   4ce48:	d8c00517 	ldw	r3,20(sp)
   4ce4c:	d9800717 	ldw	r6,28(sp)
   4ce50:	da000617 	ldw	r8,24(sp)
   4ce54:	da400417 	ldw	r9,16(sp)
   4ce58:	11c0022e 	bgeu	r2,r7,4ce64 <__muldf3+0x4f4>
   4ce5c:	01000074 	movhi	r4,1
   4ce60:	4913883a 	add	r9,r9,r4
   4ce64:	100ed43a 	srli	r7,r2,16
   4ce68:	1004943a 	slli	r2,r2,16
   4ce6c:	55ffffcc 	andi	r23,r10,65535
   4ce70:	3a53883a 	add	r9,r7,r9
   4ce74:	8809883a 	mov	r4,r17
   4ce78:	800b883a 	mov	r5,r16
   4ce7c:	d8c00515 	stw	r3,20(sp)
   4ce80:	d9800715 	stw	r6,28(sp)
   4ce84:	da000615 	stw	r8,24(sp)
   4ce88:	da400415 	stw	r9,16(sp)
   4ce8c:	15ef883a 	add	r23,r2,r23
   4ce90:	004b4740 	call	4b474 <__mulsi3>
   4ce94:	8809883a 	mov	r4,r17
   4ce98:	b00b883a 	mov	r5,r22
   4ce9c:	d8800215 	stw	r2,8(sp)
   4cea0:	004b4740 	call	4b474 <__mulsi3>
   4cea4:	b00b883a 	mov	r5,r22
   4cea8:	a809883a 	mov	r4,r21
   4ceac:	d8800315 	stw	r2,12(sp)
   4ceb0:	004b4740 	call	4b474 <__mulsi3>
   4ceb4:	8009883a 	mov	r4,r16
   4ceb8:	a80b883a 	mov	r5,r21
   4cebc:	1023883a 	mov	r17,r2
   4cec0:	004b4740 	call	4b474 <__mulsi3>
   4cec4:	d9c00217 	ldw	r7,8(sp)
   4cec8:	da800317 	ldw	r10,12(sp)
   4cecc:	d8c00517 	ldw	r3,20(sp)
   4ced0:	3808d43a 	srli	r4,r7,16
   4ced4:	1285883a 	add	r2,r2,r10
   4ced8:	d9800717 	ldw	r6,28(sp)
   4cedc:	2085883a 	add	r2,r4,r2
   4cee0:	da000617 	ldw	r8,24(sp)
   4cee4:	da400417 	ldw	r9,16(sp)
   4cee8:	1280022e 	bgeu	r2,r10,4cef4 <__muldf3+0x584>
   4ceec:	01000074 	movhi	r4,1
   4cef0:	8923883a 	add	r17,r17,r4
   4cef4:	1008943a 	slli	r4,r2,16
   4cef8:	39ffffcc 	andi	r7,r7,65535
   4cefc:	e4b9883a 	add	fp,fp,r18
   4cf00:	21cf883a 	add	r7,r4,r7
   4cf04:	e4e7803a 	cmpltu	r19,fp,r19
   4cf08:	3d0f883a 	add	r7,r7,r20
   4cf0c:	bf39883a 	add	fp,r23,fp
   4cf10:	99c9883a 	add	r4,r19,r7
   4cf14:	e5ef803a 	cmpltu	r23,fp,r23
   4cf18:	490b883a 	add	r5,r9,r4
   4cf1c:	1004d43a 	srli	r2,r2,16
   4cf20:	b965883a 	add	r18,r23,r5
   4cf24:	24c9803a 	cmpltu	r4,r4,r19
   4cf28:	3d29803a 	cmpltu	r20,r7,r20
   4cf2c:	a128b03a 	or	r20,r20,r4
   4cf30:	95ef803a 	cmpltu	r23,r18,r23
   4cf34:	2a53803a 	cmpltu	r9,r5,r9
   4cf38:	a0a9883a 	add	r20,r20,r2
   4cf3c:	4deeb03a 	or	r23,r9,r23
   4cf40:	a5ef883a 	add	r23,r20,r23
   4cf44:	bc63883a 	add	r17,r23,r17
   4cf48:	e004927a 	slli	r2,fp,9
   4cf4c:	d9000117 	ldw	r4,4(sp)
   4cf50:	882e927a 	slli	r23,r17,9
   4cf54:	9022d5fa 	srli	r17,r18,23
   4cf58:	e038d5fa 	srli	fp,fp,23
   4cf5c:	1104b03a 	or	r2,r2,r4
   4cf60:	9024927a 	slli	r18,r18,9
   4cf64:	1004c03a 	cmpne	r2,r2,zero
   4cf68:	bc62b03a 	or	r17,r23,r17
   4cf6c:	1738b03a 	or	fp,r2,fp
   4cf70:	8880402c 	andhi	r2,r17,256
   4cf74:	e4a4b03a 	or	r18,fp,r18
   4cf78:	10000726 	beq	r2,zero,4cf98 <__muldf3+0x628>
   4cf7c:	9006d07a 	srli	r3,r18,1
   4cf80:	880497fa 	slli	r2,r17,31
   4cf84:	9480004c 	andi	r18,r18,1
   4cf88:	8822d07a 	srli	r17,r17,1
   4cf8c:	1ca4b03a 	or	r18,r3,r18
   4cf90:	14a4b03a 	or	r18,r2,r18
   4cf94:	4007883a 	mov	r3,r8
   4cf98:	1880ffc4 	addi	r2,r3,1023
   4cf9c:	0080460e 	bge	zero,r2,4d0b8 <__muldf3+0x748>
   4cfa0:	910001cc 	andi	r4,r18,7
   4cfa4:	20000726 	beq	r4,zero,4cfc4 <__muldf3+0x654>
   4cfa8:	910003cc 	andi	r4,r18,15
   4cfac:	01400104 	movi	r5,4
   4cfb0:	21400426 	beq	r4,r5,4cfc4 <__muldf3+0x654>
   4cfb4:	9149883a 	add	r4,r18,r5
   4cfb8:	24a5803a 	cmpltu	r18,r4,r18
   4cfbc:	8ca3883a 	add	r17,r17,r18
   4cfc0:	2025883a 	mov	r18,r4
   4cfc4:	8900402c 	andhi	r4,r17,256
   4cfc8:	20000426 	beq	r4,zero,4cfdc <__muldf3+0x66c>
   4cfcc:	18810004 	addi	r2,r3,1024
   4cfd0:	00ffc034 	movhi	r3,65280
   4cfd4:	18ffffc4 	addi	r3,r3,-1
   4cfd8:	88e2703a 	and	r17,r17,r3
   4cfdc:	00c1ff84 	movi	r3,2046
   4cfe0:	18bf1316 	blt	r3,r2,4cc30 <__alt_data_end+0xfffe0d10>
   4cfe4:	882c977a 	slli	r22,r17,29
   4cfe8:	9024d0fa 	srli	r18,r18,3
   4cfec:	8822927a 	slli	r17,r17,9
   4cff0:	1081ffcc 	andi	r2,r2,2047
   4cff4:	b4acb03a 	or	r22,r22,r18
   4cff8:	8820d33a 	srli	r16,r17,12
   4cffc:	3027883a 	mov	r19,r6
   4d000:	003eba06 	br	4caec <__alt_data_end+0xfffe0bcc>
   4d004:	8080022c 	andhi	r2,r16,8
   4d008:	10000926 	beq	r2,zero,4d030 <__muldf3+0x6c0>
   4d00c:	8880022c 	andhi	r2,r17,8
   4d010:	1000071e 	bne	r2,zero,4d030 <__muldf3+0x6c0>
   4d014:	00800434 	movhi	r2,16
   4d018:	8c000234 	orhi	r16,r17,8
   4d01c:	10bfffc4 	addi	r2,r2,-1
   4d020:	e027883a 	mov	r19,fp
   4d024:	80a0703a 	and	r16,r16,r2
   4d028:	902d883a 	mov	r22,r18
   4d02c:	003f1706 	br	4cc8c <__alt_data_end+0xfffe0d6c>
   4d030:	00800434 	movhi	r2,16
   4d034:	84000234 	orhi	r16,r16,8
   4d038:	10bfffc4 	addi	r2,r2,-1
   4d03c:	80a0703a 	and	r16,r16,r2
   4d040:	003f1206 	br	4cc8c <__alt_data_end+0xfffe0d6c>
   4d044:	147ff604 	addi	r17,r2,-40
   4d048:	3462983a 	sll	r17,r6,r17
   4d04c:	0025883a 	mov	r18,zero
   4d050:	003ef306 	br	4cc20 <__alt_data_end+0xfffe0d00>
   4d054:	3009883a 	mov	r4,r6
   4d058:	d9400215 	stw	r5,8(sp)
   4d05c:	d9800715 	stw	r6,28(sp)
   4d060:	da400415 	stw	r9,16(sp)
   4d064:	da800315 	stw	r10,12(sp)
   4d068:	004dcdc0 	call	4dcdc <__clzsi2>
   4d06c:	10800804 	addi	r2,r2,32
   4d070:	da800317 	ldw	r10,12(sp)
   4d074:	da400417 	ldw	r9,16(sp)
   4d078:	d9800717 	ldw	r6,28(sp)
   4d07c:	d9400217 	ldw	r5,8(sp)
   4d080:	003edd06 	br	4cbf8 <__alt_data_end+0xfffe0cd8>
   4d084:	143ff604 	addi	r16,r2,-40
   4d088:	ac20983a 	sll	r16,r21,r16
   4d08c:	002d883a 	mov	r22,zero
   4d090:	003ec106 	br	4cb98 <__alt_data_end+0xfffe0c78>
   4d094:	d9800715 	stw	r6,28(sp)
   4d098:	d9c00215 	stw	r7,8(sp)
   4d09c:	da400415 	stw	r9,16(sp)
   4d0a0:	004dcdc0 	call	4dcdc <__clzsi2>
   4d0a4:	10800804 	addi	r2,r2,32
   4d0a8:	da400417 	ldw	r9,16(sp)
   4d0ac:	d9c00217 	ldw	r7,8(sp)
   4d0b0:	d9800717 	ldw	r6,28(sp)
   4d0b4:	003eae06 	br	4cb70 <__alt_data_end+0xfffe0c50>
   4d0b8:	00c00044 	movi	r3,1
   4d0bc:	1887c83a 	sub	r3,r3,r2
   4d0c0:	01000e04 	movi	r4,56
   4d0c4:	20fe8516 	blt	r4,r3,4cadc <__alt_data_end+0xfffe0bbc>
   4d0c8:	010007c4 	movi	r4,31
   4d0cc:	20c01b16 	blt	r4,r3,4d13c <__muldf3+0x7cc>
   4d0d0:	00800804 	movi	r2,32
   4d0d4:	10c5c83a 	sub	r2,r2,r3
   4d0d8:	888a983a 	sll	r5,r17,r2
   4d0dc:	90c8d83a 	srl	r4,r18,r3
   4d0e0:	9084983a 	sll	r2,r18,r2
   4d0e4:	88e2d83a 	srl	r17,r17,r3
   4d0e8:	2906b03a 	or	r3,r5,r4
   4d0ec:	1004c03a 	cmpne	r2,r2,zero
   4d0f0:	1886b03a 	or	r3,r3,r2
   4d0f4:	188001cc 	andi	r2,r3,7
   4d0f8:	10000726 	beq	r2,zero,4d118 <__muldf3+0x7a8>
   4d0fc:	188003cc 	andi	r2,r3,15
   4d100:	01000104 	movi	r4,4
   4d104:	11000426 	beq	r2,r4,4d118 <__muldf3+0x7a8>
   4d108:	1805883a 	mov	r2,r3
   4d10c:	10c00104 	addi	r3,r2,4
   4d110:	1885803a 	cmpltu	r2,r3,r2
   4d114:	88a3883a 	add	r17,r17,r2
   4d118:	8880202c 	andhi	r2,r17,128
   4d11c:	10001c26 	beq	r2,zero,4d190 <__muldf3+0x820>
   4d120:	3027883a 	mov	r19,r6
   4d124:	00800044 	movi	r2,1
   4d128:	0021883a 	mov	r16,zero
   4d12c:	002d883a 	mov	r22,zero
   4d130:	003e6e06 	br	4caec <__alt_data_end+0xfffe0bcc>
   4d134:	4007883a 	mov	r3,r8
   4d138:	003f9706 	br	4cf98 <__alt_data_end+0xfffe1078>
   4d13c:	017ff844 	movi	r5,-31
   4d140:	2885c83a 	sub	r2,r5,r2
   4d144:	888ad83a 	srl	r5,r17,r2
   4d148:	00800804 	movi	r2,32
   4d14c:	18801a26 	beq	r3,r2,4d1b8 <__muldf3+0x848>
   4d150:	01001004 	movi	r4,64
   4d154:	20c7c83a 	sub	r3,r4,r3
   4d158:	88e2983a 	sll	r17,r17,r3
   4d15c:	8ca4b03a 	or	r18,r17,r18
   4d160:	9004c03a 	cmpne	r2,r18,zero
   4d164:	2884b03a 	or	r2,r5,r2
   4d168:	144001cc 	andi	r17,r2,7
   4d16c:	88000d1e 	bne	r17,zero,4d1a4 <__muldf3+0x834>
   4d170:	0021883a 	mov	r16,zero
   4d174:	102cd0fa 	srli	r22,r2,3
   4d178:	3027883a 	mov	r19,r6
   4d17c:	0005883a 	mov	r2,zero
   4d180:	b46cb03a 	or	r22,r22,r17
   4d184:	003e5906 	br	4caec <__alt_data_end+0xfffe0bcc>
   4d188:	1007883a 	mov	r3,r2
   4d18c:	0023883a 	mov	r17,zero
   4d190:	8820927a 	slli	r16,r17,9
   4d194:	1805883a 	mov	r2,r3
   4d198:	8822977a 	slli	r17,r17,29
   4d19c:	8020d33a 	srli	r16,r16,12
   4d1a0:	003ff406 	br	4d174 <__alt_data_end+0xfffe1254>
   4d1a4:	10c003cc 	andi	r3,r2,15
   4d1a8:	01000104 	movi	r4,4
   4d1ac:	193ff626 	beq	r3,r4,4d188 <__alt_data_end+0xfffe1268>
   4d1b0:	0023883a 	mov	r17,zero
   4d1b4:	003fd506 	br	4d10c <__alt_data_end+0xfffe11ec>
   4d1b8:	0023883a 	mov	r17,zero
   4d1bc:	003fe706 	br	4d15c <__alt_data_end+0xfffe123c>
   4d1c0:	00800434 	movhi	r2,16
   4d1c4:	8c000234 	orhi	r16,r17,8
   4d1c8:	10bfffc4 	addi	r2,r2,-1
   4d1cc:	3027883a 	mov	r19,r6
   4d1d0:	80a0703a 	and	r16,r16,r2
   4d1d4:	902d883a 	mov	r22,r18
   4d1d8:	003eac06 	br	4cc8c <__alt_data_end+0xfffe0d6c>

0004d1dc <__subdf3>:
   4d1dc:	02000434 	movhi	r8,16
   4d1e0:	423fffc4 	addi	r8,r8,-1
   4d1e4:	defffb04 	addi	sp,sp,-20
   4d1e8:	2a14703a 	and	r10,r5,r8
   4d1ec:	3812d53a 	srli	r9,r7,20
   4d1f0:	3a10703a 	and	r8,r7,r8
   4d1f4:	2006d77a 	srli	r3,r4,29
   4d1f8:	3004d77a 	srli	r2,r6,29
   4d1fc:	dc000015 	stw	r16,0(sp)
   4d200:	501490fa 	slli	r10,r10,3
   4d204:	2820d53a 	srli	r16,r5,20
   4d208:	401090fa 	slli	r8,r8,3
   4d20c:	dc800215 	stw	r18,8(sp)
   4d210:	dc400115 	stw	r17,4(sp)
   4d214:	dfc00415 	stw	ra,16(sp)
   4d218:	202290fa 	slli	r17,r4,3
   4d21c:	dcc00315 	stw	r19,12(sp)
   4d220:	4a41ffcc 	andi	r9,r9,2047
   4d224:	0101ffc4 	movi	r4,2047
   4d228:	2824d7fa 	srli	r18,r5,31
   4d22c:	8401ffcc 	andi	r16,r16,2047
   4d230:	50c6b03a 	or	r3,r10,r3
   4d234:	380ed7fa 	srli	r7,r7,31
   4d238:	408ab03a 	or	r5,r8,r2
   4d23c:	300c90fa 	slli	r6,r6,3
   4d240:	49009626 	beq	r9,r4,4d49c <__subdf3+0x2c0>
   4d244:	39c0005c 	xori	r7,r7,1
   4d248:	8245c83a 	sub	r2,r16,r9
   4d24c:	3c807426 	beq	r7,r18,4d420 <__subdf3+0x244>
   4d250:	0080af0e 	bge	zero,r2,4d510 <__subdf3+0x334>
   4d254:	48002a1e 	bne	r9,zero,4d300 <__subdf3+0x124>
   4d258:	2988b03a 	or	r4,r5,r6
   4d25c:	20009a1e 	bne	r4,zero,4d4c8 <__subdf3+0x2ec>
   4d260:	888001cc 	andi	r2,r17,7
   4d264:	10000726 	beq	r2,zero,4d284 <__subdf3+0xa8>
   4d268:	888003cc 	andi	r2,r17,15
   4d26c:	01000104 	movi	r4,4
   4d270:	11000426 	beq	r2,r4,4d284 <__subdf3+0xa8>
   4d274:	890b883a 	add	r5,r17,r4
   4d278:	2c63803a 	cmpltu	r17,r5,r17
   4d27c:	1c47883a 	add	r3,r3,r17
   4d280:	2823883a 	mov	r17,r5
   4d284:	1880202c 	andhi	r2,r3,128
   4d288:	10005926 	beq	r2,zero,4d3f0 <__subdf3+0x214>
   4d28c:	84000044 	addi	r16,r16,1
   4d290:	0081ffc4 	movi	r2,2047
   4d294:	8080be26 	beq	r16,r2,4d590 <__subdf3+0x3b4>
   4d298:	017fe034 	movhi	r5,65408
   4d29c:	297fffc4 	addi	r5,r5,-1
   4d2a0:	1946703a 	and	r3,r3,r5
   4d2a4:	1804977a 	slli	r2,r3,29
   4d2a8:	1806927a 	slli	r3,r3,9
   4d2ac:	8822d0fa 	srli	r17,r17,3
   4d2b0:	8401ffcc 	andi	r16,r16,2047
   4d2b4:	180ad33a 	srli	r5,r3,12
   4d2b8:	9100004c 	andi	r4,r18,1
   4d2bc:	1444b03a 	or	r2,r2,r17
   4d2c0:	80c1ffcc 	andi	r3,r16,2047
   4d2c4:	1820953a 	slli	r16,r3,20
   4d2c8:	20c03fcc 	andi	r3,r4,255
   4d2cc:	180897fa 	slli	r4,r3,31
   4d2d0:	00c00434 	movhi	r3,16
   4d2d4:	18ffffc4 	addi	r3,r3,-1
   4d2d8:	28c6703a 	and	r3,r5,r3
   4d2dc:	1c06b03a 	or	r3,r3,r16
   4d2e0:	1906b03a 	or	r3,r3,r4
   4d2e4:	dfc00417 	ldw	ra,16(sp)
   4d2e8:	dcc00317 	ldw	r19,12(sp)
   4d2ec:	dc800217 	ldw	r18,8(sp)
   4d2f0:	dc400117 	ldw	r17,4(sp)
   4d2f4:	dc000017 	ldw	r16,0(sp)
   4d2f8:	dec00504 	addi	sp,sp,20
   4d2fc:	f800283a 	ret
   4d300:	0101ffc4 	movi	r4,2047
   4d304:	813fd626 	beq	r16,r4,4d260 <__alt_data_end+0xfffe1340>
   4d308:	29402034 	orhi	r5,r5,128
   4d30c:	01000e04 	movi	r4,56
   4d310:	2080a316 	blt	r4,r2,4d5a0 <__subdf3+0x3c4>
   4d314:	010007c4 	movi	r4,31
   4d318:	2080c616 	blt	r4,r2,4d634 <__subdf3+0x458>
   4d31c:	01000804 	movi	r4,32
   4d320:	2089c83a 	sub	r4,r4,r2
   4d324:	2910983a 	sll	r8,r5,r4
   4d328:	308ed83a 	srl	r7,r6,r2
   4d32c:	3108983a 	sll	r4,r6,r4
   4d330:	2884d83a 	srl	r2,r5,r2
   4d334:	41ccb03a 	or	r6,r8,r7
   4d338:	2008c03a 	cmpne	r4,r4,zero
   4d33c:	310cb03a 	or	r6,r6,r4
   4d340:	898dc83a 	sub	r6,r17,r6
   4d344:	89a3803a 	cmpltu	r17,r17,r6
   4d348:	1887c83a 	sub	r3,r3,r2
   4d34c:	1c47c83a 	sub	r3,r3,r17
   4d350:	3023883a 	mov	r17,r6
   4d354:	1880202c 	andhi	r2,r3,128
   4d358:	10002326 	beq	r2,zero,4d3e8 <__subdf3+0x20c>
   4d35c:	04c02034 	movhi	r19,128
   4d360:	9cffffc4 	addi	r19,r19,-1
   4d364:	1ce6703a 	and	r19,r3,r19
   4d368:	98007a26 	beq	r19,zero,4d554 <__subdf3+0x378>
   4d36c:	9809883a 	mov	r4,r19
   4d370:	004dcdc0 	call	4dcdc <__clzsi2>
   4d374:	113ffe04 	addi	r4,r2,-8
   4d378:	00c007c4 	movi	r3,31
   4d37c:	19007b16 	blt	r3,r4,4d56c <__subdf3+0x390>
   4d380:	00800804 	movi	r2,32
   4d384:	1105c83a 	sub	r2,r2,r4
   4d388:	8884d83a 	srl	r2,r17,r2
   4d38c:	9906983a 	sll	r3,r19,r4
   4d390:	8922983a 	sll	r17,r17,r4
   4d394:	10c4b03a 	or	r2,r2,r3
   4d398:	24007816 	blt	r4,r16,4d57c <__subdf3+0x3a0>
   4d39c:	2421c83a 	sub	r16,r4,r16
   4d3a0:	80c00044 	addi	r3,r16,1
   4d3a4:	010007c4 	movi	r4,31
   4d3a8:	20c09516 	blt	r4,r3,4d600 <__subdf3+0x424>
   4d3ac:	01400804 	movi	r5,32
   4d3b0:	28cbc83a 	sub	r5,r5,r3
   4d3b4:	88c8d83a 	srl	r4,r17,r3
   4d3b8:	8962983a 	sll	r17,r17,r5
   4d3bc:	114a983a 	sll	r5,r2,r5
   4d3c0:	10c6d83a 	srl	r3,r2,r3
   4d3c4:	8804c03a 	cmpne	r2,r17,zero
   4d3c8:	290ab03a 	or	r5,r5,r4
   4d3cc:	28a2b03a 	or	r17,r5,r2
   4d3d0:	0021883a 	mov	r16,zero
   4d3d4:	003fa206 	br	4d260 <__alt_data_end+0xfffe1340>
   4d3d8:	2090b03a 	or	r8,r4,r2
   4d3dc:	40018e26 	beq	r8,zero,4da18 <__subdf3+0x83c>
   4d3e0:	1007883a 	mov	r3,r2
   4d3e4:	2023883a 	mov	r17,r4
   4d3e8:	888001cc 	andi	r2,r17,7
   4d3ec:	103f9e1e 	bne	r2,zero,4d268 <__alt_data_end+0xfffe1348>
   4d3f0:	1804977a 	slli	r2,r3,29
   4d3f4:	8822d0fa 	srli	r17,r17,3
   4d3f8:	1810d0fa 	srli	r8,r3,3
   4d3fc:	9100004c 	andi	r4,r18,1
   4d400:	1444b03a 	or	r2,r2,r17
   4d404:	00c1ffc4 	movi	r3,2047
   4d408:	80c02826 	beq	r16,r3,4d4ac <__subdf3+0x2d0>
   4d40c:	01400434 	movhi	r5,16
   4d410:	297fffc4 	addi	r5,r5,-1
   4d414:	80e0703a 	and	r16,r16,r3
   4d418:	414a703a 	and	r5,r8,r5
   4d41c:	003fa806 	br	4d2c0 <__alt_data_end+0xfffe13a0>
   4d420:	0080630e 	bge	zero,r2,4d5b0 <__subdf3+0x3d4>
   4d424:	48003026 	beq	r9,zero,4d4e8 <__subdf3+0x30c>
   4d428:	0101ffc4 	movi	r4,2047
   4d42c:	813f8c26 	beq	r16,r4,4d260 <__alt_data_end+0xfffe1340>
   4d430:	29402034 	orhi	r5,r5,128
   4d434:	01000e04 	movi	r4,56
   4d438:	2080a90e 	bge	r4,r2,4d6e0 <__subdf3+0x504>
   4d43c:	298cb03a 	or	r6,r5,r6
   4d440:	3012c03a 	cmpne	r9,r6,zero
   4d444:	0005883a 	mov	r2,zero
   4d448:	4c53883a 	add	r9,r9,r17
   4d44c:	4c63803a 	cmpltu	r17,r9,r17
   4d450:	10c7883a 	add	r3,r2,r3
   4d454:	88c7883a 	add	r3,r17,r3
   4d458:	4823883a 	mov	r17,r9
   4d45c:	1880202c 	andhi	r2,r3,128
   4d460:	1000d026 	beq	r2,zero,4d7a4 <__subdf3+0x5c8>
   4d464:	84000044 	addi	r16,r16,1
   4d468:	0081ffc4 	movi	r2,2047
   4d46c:	8080fe26 	beq	r16,r2,4d868 <__subdf3+0x68c>
   4d470:	00bfe034 	movhi	r2,65408
   4d474:	10bfffc4 	addi	r2,r2,-1
   4d478:	1886703a 	and	r3,r3,r2
   4d47c:	880ad07a 	srli	r5,r17,1
   4d480:	180497fa 	slli	r2,r3,31
   4d484:	8900004c 	andi	r4,r17,1
   4d488:	2922b03a 	or	r17,r5,r4
   4d48c:	1806d07a 	srli	r3,r3,1
   4d490:	1462b03a 	or	r17,r2,r17
   4d494:	3825883a 	mov	r18,r7
   4d498:	003f7106 	br	4d260 <__alt_data_end+0xfffe1340>
   4d49c:	2984b03a 	or	r2,r5,r6
   4d4a0:	103f6826 	beq	r2,zero,4d244 <__alt_data_end+0xfffe1324>
   4d4a4:	39c03fcc 	andi	r7,r7,255
   4d4a8:	003f6706 	br	4d248 <__alt_data_end+0xfffe1328>
   4d4ac:	4086b03a 	or	r3,r8,r2
   4d4b0:	18015226 	beq	r3,zero,4d9fc <__subdf3+0x820>
   4d4b4:	00c00434 	movhi	r3,16
   4d4b8:	41400234 	orhi	r5,r8,8
   4d4bc:	18ffffc4 	addi	r3,r3,-1
   4d4c0:	28ca703a 	and	r5,r5,r3
   4d4c4:	003f7e06 	br	4d2c0 <__alt_data_end+0xfffe13a0>
   4d4c8:	10bfffc4 	addi	r2,r2,-1
   4d4cc:	1000491e 	bne	r2,zero,4d5f4 <__subdf3+0x418>
   4d4d0:	898fc83a 	sub	r7,r17,r6
   4d4d4:	89e3803a 	cmpltu	r17,r17,r7
   4d4d8:	1947c83a 	sub	r3,r3,r5
   4d4dc:	1c47c83a 	sub	r3,r3,r17
   4d4e0:	3823883a 	mov	r17,r7
   4d4e4:	003f9b06 	br	4d354 <__alt_data_end+0xfffe1434>
   4d4e8:	2988b03a 	or	r4,r5,r6
   4d4ec:	203f5c26 	beq	r4,zero,4d260 <__alt_data_end+0xfffe1340>
   4d4f0:	10bfffc4 	addi	r2,r2,-1
   4d4f4:	1000931e 	bne	r2,zero,4d744 <__subdf3+0x568>
   4d4f8:	898d883a 	add	r6,r17,r6
   4d4fc:	3463803a 	cmpltu	r17,r6,r17
   4d500:	1947883a 	add	r3,r3,r5
   4d504:	88c7883a 	add	r3,r17,r3
   4d508:	3023883a 	mov	r17,r6
   4d50c:	003fd306 	br	4d45c <__alt_data_end+0xfffe153c>
   4d510:	1000541e 	bne	r2,zero,4d664 <__subdf3+0x488>
   4d514:	80800044 	addi	r2,r16,1
   4d518:	1081ffcc 	andi	r2,r2,2047
   4d51c:	01000044 	movi	r4,1
   4d520:	2080a20e 	bge	r4,r2,4d7ac <__subdf3+0x5d0>
   4d524:	8989c83a 	sub	r4,r17,r6
   4d528:	8905803a 	cmpltu	r2,r17,r4
   4d52c:	1967c83a 	sub	r19,r3,r5
   4d530:	98a7c83a 	sub	r19,r19,r2
   4d534:	9880202c 	andhi	r2,r19,128
   4d538:	10006326 	beq	r2,zero,4d6c8 <__subdf3+0x4ec>
   4d53c:	3463c83a 	sub	r17,r6,r17
   4d540:	28c7c83a 	sub	r3,r5,r3
   4d544:	344d803a 	cmpltu	r6,r6,r17
   4d548:	19a7c83a 	sub	r19,r3,r6
   4d54c:	3825883a 	mov	r18,r7
   4d550:	983f861e 	bne	r19,zero,4d36c <__alt_data_end+0xfffe144c>
   4d554:	8809883a 	mov	r4,r17
   4d558:	004dcdc0 	call	4dcdc <__clzsi2>
   4d55c:	10800804 	addi	r2,r2,32
   4d560:	113ffe04 	addi	r4,r2,-8
   4d564:	00c007c4 	movi	r3,31
   4d568:	193f850e 	bge	r3,r4,4d380 <__alt_data_end+0xfffe1460>
   4d56c:	10bff604 	addi	r2,r2,-40
   4d570:	8884983a 	sll	r2,r17,r2
   4d574:	0023883a 	mov	r17,zero
   4d578:	243f880e 	bge	r4,r16,4d39c <__alt_data_end+0xfffe147c>
   4d57c:	00ffe034 	movhi	r3,65408
   4d580:	18ffffc4 	addi	r3,r3,-1
   4d584:	8121c83a 	sub	r16,r16,r4
   4d588:	10c6703a 	and	r3,r2,r3
   4d58c:	003f3406 	br	4d260 <__alt_data_end+0xfffe1340>
   4d590:	9100004c 	andi	r4,r18,1
   4d594:	000b883a 	mov	r5,zero
   4d598:	0005883a 	mov	r2,zero
   4d59c:	003f4806 	br	4d2c0 <__alt_data_end+0xfffe13a0>
   4d5a0:	298cb03a 	or	r6,r5,r6
   4d5a4:	300cc03a 	cmpne	r6,r6,zero
   4d5a8:	0005883a 	mov	r2,zero
   4d5ac:	003f6406 	br	4d340 <__alt_data_end+0xfffe1420>
   4d5b0:	10009a1e 	bne	r2,zero,4d81c <__subdf3+0x640>
   4d5b4:	82400044 	addi	r9,r16,1
   4d5b8:	4881ffcc 	andi	r2,r9,2047
   4d5bc:	02800044 	movi	r10,1
   4d5c0:	5080670e 	bge	r10,r2,4d760 <__subdf3+0x584>
   4d5c4:	0081ffc4 	movi	r2,2047
   4d5c8:	4880af26 	beq	r9,r2,4d888 <__subdf3+0x6ac>
   4d5cc:	898d883a 	add	r6,r17,r6
   4d5d0:	1945883a 	add	r2,r3,r5
   4d5d4:	3447803a 	cmpltu	r3,r6,r17
   4d5d8:	1887883a 	add	r3,r3,r2
   4d5dc:	182297fa 	slli	r17,r3,31
   4d5e0:	300cd07a 	srli	r6,r6,1
   4d5e4:	1806d07a 	srli	r3,r3,1
   4d5e8:	4821883a 	mov	r16,r9
   4d5ec:	89a2b03a 	or	r17,r17,r6
   4d5f0:	003f1b06 	br	4d260 <__alt_data_end+0xfffe1340>
   4d5f4:	0101ffc4 	movi	r4,2047
   4d5f8:	813f441e 	bne	r16,r4,4d30c <__alt_data_end+0xfffe13ec>
   4d5fc:	003f1806 	br	4d260 <__alt_data_end+0xfffe1340>
   4d600:	843ff844 	addi	r16,r16,-31
   4d604:	01400804 	movi	r5,32
   4d608:	1408d83a 	srl	r4,r2,r16
   4d60c:	19405026 	beq	r3,r5,4d750 <__subdf3+0x574>
   4d610:	01401004 	movi	r5,64
   4d614:	28c7c83a 	sub	r3,r5,r3
   4d618:	10c4983a 	sll	r2,r2,r3
   4d61c:	88a2b03a 	or	r17,r17,r2
   4d620:	8822c03a 	cmpne	r17,r17,zero
   4d624:	2462b03a 	or	r17,r4,r17
   4d628:	0007883a 	mov	r3,zero
   4d62c:	0021883a 	mov	r16,zero
   4d630:	003f6d06 	br	4d3e8 <__alt_data_end+0xfffe14c8>
   4d634:	11fff804 	addi	r7,r2,-32
   4d638:	01000804 	movi	r4,32
   4d63c:	29ced83a 	srl	r7,r5,r7
   4d640:	11004526 	beq	r2,r4,4d758 <__subdf3+0x57c>
   4d644:	01001004 	movi	r4,64
   4d648:	2089c83a 	sub	r4,r4,r2
   4d64c:	2904983a 	sll	r2,r5,r4
   4d650:	118cb03a 	or	r6,r2,r6
   4d654:	300cc03a 	cmpne	r6,r6,zero
   4d658:	398cb03a 	or	r6,r7,r6
   4d65c:	0005883a 	mov	r2,zero
   4d660:	003f3706 	br	4d340 <__alt_data_end+0xfffe1420>
   4d664:	80002a26 	beq	r16,zero,4d710 <__subdf3+0x534>
   4d668:	0101ffc4 	movi	r4,2047
   4d66c:	49006626 	beq	r9,r4,4d808 <__subdf3+0x62c>
   4d670:	0085c83a 	sub	r2,zero,r2
   4d674:	18c02034 	orhi	r3,r3,128
   4d678:	01000e04 	movi	r4,56
   4d67c:	20807e16 	blt	r4,r2,4d878 <__subdf3+0x69c>
   4d680:	010007c4 	movi	r4,31
   4d684:	2080e716 	blt	r4,r2,4da24 <__subdf3+0x848>
   4d688:	01000804 	movi	r4,32
   4d68c:	2089c83a 	sub	r4,r4,r2
   4d690:	1914983a 	sll	r10,r3,r4
   4d694:	8890d83a 	srl	r8,r17,r2
   4d698:	8908983a 	sll	r4,r17,r4
   4d69c:	1884d83a 	srl	r2,r3,r2
   4d6a0:	5222b03a 	or	r17,r10,r8
   4d6a4:	2006c03a 	cmpne	r3,r4,zero
   4d6a8:	88e2b03a 	or	r17,r17,r3
   4d6ac:	3463c83a 	sub	r17,r6,r17
   4d6b0:	2885c83a 	sub	r2,r5,r2
   4d6b4:	344d803a 	cmpltu	r6,r6,r17
   4d6b8:	1187c83a 	sub	r3,r2,r6
   4d6bc:	4821883a 	mov	r16,r9
   4d6c0:	3825883a 	mov	r18,r7
   4d6c4:	003f2306 	br	4d354 <__alt_data_end+0xfffe1434>
   4d6c8:	24d0b03a 	or	r8,r4,r19
   4d6cc:	40001b1e 	bne	r8,zero,4d73c <__subdf3+0x560>
   4d6d0:	0005883a 	mov	r2,zero
   4d6d4:	0009883a 	mov	r4,zero
   4d6d8:	0021883a 	mov	r16,zero
   4d6dc:	003f4906 	br	4d404 <__alt_data_end+0xfffe14e4>
   4d6e0:	010007c4 	movi	r4,31
   4d6e4:	20803a16 	blt	r4,r2,4d7d0 <__subdf3+0x5f4>
   4d6e8:	01000804 	movi	r4,32
   4d6ec:	2089c83a 	sub	r4,r4,r2
   4d6f0:	2912983a 	sll	r9,r5,r4
   4d6f4:	3090d83a 	srl	r8,r6,r2
   4d6f8:	3108983a 	sll	r4,r6,r4
   4d6fc:	2884d83a 	srl	r2,r5,r2
   4d700:	4a12b03a 	or	r9,r9,r8
   4d704:	2008c03a 	cmpne	r4,r4,zero
   4d708:	4912b03a 	or	r9,r9,r4
   4d70c:	003f4e06 	br	4d448 <__alt_data_end+0xfffe1528>
   4d710:	1c48b03a 	or	r4,r3,r17
   4d714:	20003c26 	beq	r4,zero,4d808 <__subdf3+0x62c>
   4d718:	0084303a 	nor	r2,zero,r2
   4d71c:	1000381e 	bne	r2,zero,4d800 <__subdf3+0x624>
   4d720:	3463c83a 	sub	r17,r6,r17
   4d724:	28c5c83a 	sub	r2,r5,r3
   4d728:	344d803a 	cmpltu	r6,r6,r17
   4d72c:	1187c83a 	sub	r3,r2,r6
   4d730:	4821883a 	mov	r16,r9
   4d734:	3825883a 	mov	r18,r7
   4d738:	003f0606 	br	4d354 <__alt_data_end+0xfffe1434>
   4d73c:	2023883a 	mov	r17,r4
   4d740:	003f0906 	br	4d368 <__alt_data_end+0xfffe1448>
   4d744:	0101ffc4 	movi	r4,2047
   4d748:	813f3a1e 	bne	r16,r4,4d434 <__alt_data_end+0xfffe1514>
   4d74c:	003ec406 	br	4d260 <__alt_data_end+0xfffe1340>
   4d750:	0005883a 	mov	r2,zero
   4d754:	003fb106 	br	4d61c <__alt_data_end+0xfffe16fc>
   4d758:	0005883a 	mov	r2,zero
   4d75c:	003fbc06 	br	4d650 <__alt_data_end+0xfffe1730>
   4d760:	1c44b03a 	or	r2,r3,r17
   4d764:	80008e1e 	bne	r16,zero,4d9a0 <__subdf3+0x7c4>
   4d768:	1000c826 	beq	r2,zero,4da8c <__subdf3+0x8b0>
   4d76c:	2984b03a 	or	r2,r5,r6
   4d770:	103ebb26 	beq	r2,zero,4d260 <__alt_data_end+0xfffe1340>
   4d774:	8989883a 	add	r4,r17,r6
   4d778:	1945883a 	add	r2,r3,r5
   4d77c:	2447803a 	cmpltu	r3,r4,r17
   4d780:	1887883a 	add	r3,r3,r2
   4d784:	1880202c 	andhi	r2,r3,128
   4d788:	2023883a 	mov	r17,r4
   4d78c:	103f1626 	beq	r2,zero,4d3e8 <__alt_data_end+0xfffe14c8>
   4d790:	00bfe034 	movhi	r2,65408
   4d794:	10bfffc4 	addi	r2,r2,-1
   4d798:	5021883a 	mov	r16,r10
   4d79c:	1886703a 	and	r3,r3,r2
   4d7a0:	003eaf06 	br	4d260 <__alt_data_end+0xfffe1340>
   4d7a4:	3825883a 	mov	r18,r7
   4d7a8:	003f0f06 	br	4d3e8 <__alt_data_end+0xfffe14c8>
   4d7ac:	1c44b03a 	or	r2,r3,r17
   4d7b0:	8000251e 	bne	r16,zero,4d848 <__subdf3+0x66c>
   4d7b4:	1000661e 	bne	r2,zero,4d950 <__subdf3+0x774>
   4d7b8:	2990b03a 	or	r8,r5,r6
   4d7bc:	40009626 	beq	r8,zero,4da18 <__subdf3+0x83c>
   4d7c0:	2807883a 	mov	r3,r5
   4d7c4:	3023883a 	mov	r17,r6
   4d7c8:	3825883a 	mov	r18,r7
   4d7cc:	003ea406 	br	4d260 <__alt_data_end+0xfffe1340>
   4d7d0:	127ff804 	addi	r9,r2,-32
   4d7d4:	01000804 	movi	r4,32
   4d7d8:	2a52d83a 	srl	r9,r5,r9
   4d7dc:	11008c26 	beq	r2,r4,4da10 <__subdf3+0x834>
   4d7e0:	01001004 	movi	r4,64
   4d7e4:	2085c83a 	sub	r2,r4,r2
   4d7e8:	2884983a 	sll	r2,r5,r2
   4d7ec:	118cb03a 	or	r6,r2,r6
   4d7f0:	300cc03a 	cmpne	r6,r6,zero
   4d7f4:	4992b03a 	or	r9,r9,r6
   4d7f8:	0005883a 	mov	r2,zero
   4d7fc:	003f1206 	br	4d448 <__alt_data_end+0xfffe1528>
   4d800:	0101ffc4 	movi	r4,2047
   4d804:	493f9c1e 	bne	r9,r4,4d678 <__alt_data_end+0xfffe1758>
   4d808:	2807883a 	mov	r3,r5
   4d80c:	3023883a 	mov	r17,r6
   4d810:	4821883a 	mov	r16,r9
   4d814:	3825883a 	mov	r18,r7
   4d818:	003e9106 	br	4d260 <__alt_data_end+0xfffe1340>
   4d81c:	80001f1e 	bne	r16,zero,4d89c <__subdf3+0x6c0>
   4d820:	1c48b03a 	or	r4,r3,r17
   4d824:	20005a26 	beq	r4,zero,4d990 <__subdf3+0x7b4>
   4d828:	0084303a 	nor	r2,zero,r2
   4d82c:	1000561e 	bne	r2,zero,4d988 <__subdf3+0x7ac>
   4d830:	89a3883a 	add	r17,r17,r6
   4d834:	1945883a 	add	r2,r3,r5
   4d838:	898d803a 	cmpltu	r6,r17,r6
   4d83c:	3087883a 	add	r3,r6,r2
   4d840:	4821883a 	mov	r16,r9
   4d844:	003f0506 	br	4d45c <__alt_data_end+0xfffe153c>
   4d848:	10002b1e 	bne	r2,zero,4d8f8 <__subdf3+0x71c>
   4d84c:	2984b03a 	or	r2,r5,r6
   4d850:	10008026 	beq	r2,zero,4da54 <__subdf3+0x878>
   4d854:	2807883a 	mov	r3,r5
   4d858:	3023883a 	mov	r17,r6
   4d85c:	3825883a 	mov	r18,r7
   4d860:	0401ffc4 	movi	r16,2047
   4d864:	003e7e06 	br	4d260 <__alt_data_end+0xfffe1340>
   4d868:	3809883a 	mov	r4,r7
   4d86c:	0011883a 	mov	r8,zero
   4d870:	0005883a 	mov	r2,zero
   4d874:	003ee306 	br	4d404 <__alt_data_end+0xfffe14e4>
   4d878:	1c62b03a 	or	r17,r3,r17
   4d87c:	8822c03a 	cmpne	r17,r17,zero
   4d880:	0005883a 	mov	r2,zero
   4d884:	003f8906 	br	4d6ac <__alt_data_end+0xfffe178c>
   4d888:	3809883a 	mov	r4,r7
   4d88c:	4821883a 	mov	r16,r9
   4d890:	0011883a 	mov	r8,zero
   4d894:	0005883a 	mov	r2,zero
   4d898:	003eda06 	br	4d404 <__alt_data_end+0xfffe14e4>
   4d89c:	0101ffc4 	movi	r4,2047
   4d8a0:	49003b26 	beq	r9,r4,4d990 <__subdf3+0x7b4>
   4d8a4:	0085c83a 	sub	r2,zero,r2
   4d8a8:	18c02034 	orhi	r3,r3,128
   4d8ac:	01000e04 	movi	r4,56
   4d8b0:	20806e16 	blt	r4,r2,4da6c <__subdf3+0x890>
   4d8b4:	010007c4 	movi	r4,31
   4d8b8:	20807716 	blt	r4,r2,4da98 <__subdf3+0x8bc>
   4d8bc:	01000804 	movi	r4,32
   4d8c0:	2089c83a 	sub	r4,r4,r2
   4d8c4:	1914983a 	sll	r10,r3,r4
   4d8c8:	8890d83a 	srl	r8,r17,r2
   4d8cc:	8908983a 	sll	r4,r17,r4
   4d8d0:	1884d83a 	srl	r2,r3,r2
   4d8d4:	5222b03a 	or	r17,r10,r8
   4d8d8:	2006c03a 	cmpne	r3,r4,zero
   4d8dc:	88e2b03a 	or	r17,r17,r3
   4d8e0:	89a3883a 	add	r17,r17,r6
   4d8e4:	1145883a 	add	r2,r2,r5
   4d8e8:	898d803a 	cmpltu	r6,r17,r6
   4d8ec:	3087883a 	add	r3,r6,r2
   4d8f0:	4821883a 	mov	r16,r9
   4d8f4:	003ed906 	br	4d45c <__alt_data_end+0xfffe153c>
   4d8f8:	2984b03a 	or	r2,r5,r6
   4d8fc:	10004226 	beq	r2,zero,4da08 <__subdf3+0x82c>
   4d900:	1808d0fa 	srli	r4,r3,3
   4d904:	8822d0fa 	srli	r17,r17,3
   4d908:	1806977a 	slli	r3,r3,29
   4d90c:	2080022c 	andhi	r2,r4,8
   4d910:	1c62b03a 	or	r17,r3,r17
   4d914:	10000826 	beq	r2,zero,4d938 <__subdf3+0x75c>
   4d918:	2812d0fa 	srli	r9,r5,3
   4d91c:	4880022c 	andhi	r2,r9,8
   4d920:	1000051e 	bne	r2,zero,4d938 <__subdf3+0x75c>
   4d924:	300cd0fa 	srli	r6,r6,3
   4d928:	2804977a 	slli	r2,r5,29
   4d92c:	4809883a 	mov	r4,r9
   4d930:	3825883a 	mov	r18,r7
   4d934:	11a2b03a 	or	r17,r2,r6
   4d938:	8806d77a 	srli	r3,r17,29
   4d93c:	200890fa 	slli	r4,r4,3
   4d940:	882290fa 	slli	r17,r17,3
   4d944:	0401ffc4 	movi	r16,2047
   4d948:	1906b03a 	or	r3,r3,r4
   4d94c:	003e4406 	br	4d260 <__alt_data_end+0xfffe1340>
   4d950:	2984b03a 	or	r2,r5,r6
   4d954:	103e4226 	beq	r2,zero,4d260 <__alt_data_end+0xfffe1340>
   4d958:	8989c83a 	sub	r4,r17,r6
   4d95c:	8911803a 	cmpltu	r8,r17,r4
   4d960:	1945c83a 	sub	r2,r3,r5
   4d964:	1205c83a 	sub	r2,r2,r8
   4d968:	1200202c 	andhi	r8,r2,128
   4d96c:	403e9a26 	beq	r8,zero,4d3d8 <__alt_data_end+0xfffe14b8>
   4d970:	3463c83a 	sub	r17,r6,r17
   4d974:	28c5c83a 	sub	r2,r5,r3
   4d978:	344d803a 	cmpltu	r6,r6,r17
   4d97c:	1187c83a 	sub	r3,r2,r6
   4d980:	3825883a 	mov	r18,r7
   4d984:	003e3606 	br	4d260 <__alt_data_end+0xfffe1340>
   4d988:	0101ffc4 	movi	r4,2047
   4d98c:	493fc71e 	bne	r9,r4,4d8ac <__alt_data_end+0xfffe198c>
   4d990:	2807883a 	mov	r3,r5
   4d994:	3023883a 	mov	r17,r6
   4d998:	4821883a 	mov	r16,r9
   4d99c:	003e3006 	br	4d260 <__alt_data_end+0xfffe1340>
   4d9a0:	10003626 	beq	r2,zero,4da7c <__subdf3+0x8a0>
   4d9a4:	2984b03a 	or	r2,r5,r6
   4d9a8:	10001726 	beq	r2,zero,4da08 <__subdf3+0x82c>
   4d9ac:	1808d0fa 	srli	r4,r3,3
   4d9b0:	8822d0fa 	srli	r17,r17,3
   4d9b4:	1806977a 	slli	r3,r3,29
   4d9b8:	2080022c 	andhi	r2,r4,8
   4d9bc:	1c62b03a 	or	r17,r3,r17
   4d9c0:	10000726 	beq	r2,zero,4d9e0 <__subdf3+0x804>
   4d9c4:	2812d0fa 	srli	r9,r5,3
   4d9c8:	4880022c 	andhi	r2,r9,8
   4d9cc:	1000041e 	bne	r2,zero,4d9e0 <__subdf3+0x804>
   4d9d0:	300cd0fa 	srli	r6,r6,3
   4d9d4:	2804977a 	slli	r2,r5,29
   4d9d8:	4809883a 	mov	r4,r9
   4d9dc:	11a2b03a 	or	r17,r2,r6
   4d9e0:	8806d77a 	srli	r3,r17,29
   4d9e4:	200890fa 	slli	r4,r4,3
   4d9e8:	882290fa 	slli	r17,r17,3
   4d9ec:	3825883a 	mov	r18,r7
   4d9f0:	1906b03a 	or	r3,r3,r4
   4d9f4:	0401ffc4 	movi	r16,2047
   4d9f8:	003e1906 	br	4d260 <__alt_data_end+0xfffe1340>
   4d9fc:	000b883a 	mov	r5,zero
   4da00:	0005883a 	mov	r2,zero
   4da04:	003e2e06 	br	4d2c0 <__alt_data_end+0xfffe13a0>
   4da08:	0401ffc4 	movi	r16,2047
   4da0c:	003e1406 	br	4d260 <__alt_data_end+0xfffe1340>
   4da10:	0005883a 	mov	r2,zero
   4da14:	003f7506 	br	4d7ec <__alt_data_end+0xfffe18cc>
   4da18:	0005883a 	mov	r2,zero
   4da1c:	0009883a 	mov	r4,zero
   4da20:	003e7806 	br	4d404 <__alt_data_end+0xfffe14e4>
   4da24:	123ff804 	addi	r8,r2,-32
   4da28:	01000804 	movi	r4,32
   4da2c:	1a10d83a 	srl	r8,r3,r8
   4da30:	11002526 	beq	r2,r4,4dac8 <__subdf3+0x8ec>
   4da34:	01001004 	movi	r4,64
   4da38:	2085c83a 	sub	r2,r4,r2
   4da3c:	1884983a 	sll	r2,r3,r2
   4da40:	1444b03a 	or	r2,r2,r17
   4da44:	1004c03a 	cmpne	r2,r2,zero
   4da48:	40a2b03a 	or	r17,r8,r2
   4da4c:	0005883a 	mov	r2,zero
   4da50:	003f1606 	br	4d6ac <__alt_data_end+0xfffe178c>
   4da54:	02000434 	movhi	r8,16
   4da58:	0009883a 	mov	r4,zero
   4da5c:	423fffc4 	addi	r8,r8,-1
   4da60:	00bfffc4 	movi	r2,-1
   4da64:	0401ffc4 	movi	r16,2047
   4da68:	003e6606 	br	4d404 <__alt_data_end+0xfffe14e4>
   4da6c:	1c62b03a 	or	r17,r3,r17
   4da70:	8822c03a 	cmpne	r17,r17,zero
   4da74:	0005883a 	mov	r2,zero
   4da78:	003f9906 	br	4d8e0 <__alt_data_end+0xfffe19c0>
   4da7c:	2807883a 	mov	r3,r5
   4da80:	3023883a 	mov	r17,r6
   4da84:	0401ffc4 	movi	r16,2047
   4da88:	003df506 	br	4d260 <__alt_data_end+0xfffe1340>
   4da8c:	2807883a 	mov	r3,r5
   4da90:	3023883a 	mov	r17,r6
   4da94:	003df206 	br	4d260 <__alt_data_end+0xfffe1340>
   4da98:	123ff804 	addi	r8,r2,-32
   4da9c:	01000804 	movi	r4,32
   4daa0:	1a10d83a 	srl	r8,r3,r8
   4daa4:	11000a26 	beq	r2,r4,4dad0 <__subdf3+0x8f4>
   4daa8:	01001004 	movi	r4,64
   4daac:	2085c83a 	sub	r2,r4,r2
   4dab0:	1884983a 	sll	r2,r3,r2
   4dab4:	1444b03a 	or	r2,r2,r17
   4dab8:	1004c03a 	cmpne	r2,r2,zero
   4dabc:	40a2b03a 	or	r17,r8,r2
   4dac0:	0005883a 	mov	r2,zero
   4dac4:	003f8606 	br	4d8e0 <__alt_data_end+0xfffe19c0>
   4dac8:	0005883a 	mov	r2,zero
   4dacc:	003fdc06 	br	4da40 <__alt_data_end+0xfffe1b20>
   4dad0:	0005883a 	mov	r2,zero
   4dad4:	003ff706 	br	4dab4 <__alt_data_end+0xfffe1b94>

0004dad8 <__fixdfsi>:
   4dad8:	280cd53a 	srli	r6,r5,20
   4dadc:	00c00434 	movhi	r3,16
   4dae0:	18ffffc4 	addi	r3,r3,-1
   4dae4:	3181ffcc 	andi	r6,r6,2047
   4dae8:	01c0ff84 	movi	r7,1022
   4daec:	28c6703a 	and	r3,r5,r3
   4daf0:	280ad7fa 	srli	r5,r5,31
   4daf4:	3980120e 	bge	r7,r6,4db40 <__fixdfsi+0x68>
   4daf8:	00810744 	movi	r2,1053
   4dafc:	11800c16 	blt	r2,r6,4db30 <__fixdfsi+0x58>
   4db00:	00810cc4 	movi	r2,1075
   4db04:	1185c83a 	sub	r2,r2,r6
   4db08:	01c007c4 	movi	r7,31
   4db0c:	18c00434 	orhi	r3,r3,16
   4db10:	38800d16 	blt	r7,r2,4db48 <__fixdfsi+0x70>
   4db14:	31befb44 	addi	r6,r6,-1043
   4db18:	2084d83a 	srl	r2,r4,r2
   4db1c:	1986983a 	sll	r3,r3,r6
   4db20:	1884b03a 	or	r2,r3,r2
   4db24:	28000726 	beq	r5,zero,4db44 <__fixdfsi+0x6c>
   4db28:	0085c83a 	sub	r2,zero,r2
   4db2c:	f800283a 	ret
   4db30:	00a00034 	movhi	r2,32768
   4db34:	10bfffc4 	addi	r2,r2,-1
   4db38:	2885883a 	add	r2,r5,r2
   4db3c:	f800283a 	ret
   4db40:	0005883a 	mov	r2,zero
   4db44:	f800283a 	ret
   4db48:	008104c4 	movi	r2,1043
   4db4c:	1185c83a 	sub	r2,r2,r6
   4db50:	1884d83a 	srl	r2,r3,r2
   4db54:	003ff306 	br	4db24 <__alt_data_end+0xfffe1c04>

0004db58 <__floatsidf>:
   4db58:	defffd04 	addi	sp,sp,-12
   4db5c:	dfc00215 	stw	ra,8(sp)
   4db60:	dc400115 	stw	r17,4(sp)
   4db64:	dc000015 	stw	r16,0(sp)
   4db68:	20002b26 	beq	r4,zero,4dc18 <__floatsidf+0xc0>
   4db6c:	2023883a 	mov	r17,r4
   4db70:	2020d7fa 	srli	r16,r4,31
   4db74:	20002d16 	blt	r4,zero,4dc2c <__floatsidf+0xd4>
   4db78:	8809883a 	mov	r4,r17
   4db7c:	004dcdc0 	call	4dcdc <__clzsi2>
   4db80:	01410784 	movi	r5,1054
   4db84:	288bc83a 	sub	r5,r5,r2
   4db88:	01010cc4 	movi	r4,1075
   4db8c:	2149c83a 	sub	r4,r4,r5
   4db90:	00c007c4 	movi	r3,31
   4db94:	1900160e 	bge	r3,r4,4dbf0 <__floatsidf+0x98>
   4db98:	00c104c4 	movi	r3,1043
   4db9c:	1947c83a 	sub	r3,r3,r5
   4dba0:	88c6983a 	sll	r3,r17,r3
   4dba4:	00800434 	movhi	r2,16
   4dba8:	10bfffc4 	addi	r2,r2,-1
   4dbac:	1886703a 	and	r3,r3,r2
   4dbb0:	2941ffcc 	andi	r5,r5,2047
   4dbb4:	800d883a 	mov	r6,r16
   4dbb8:	0005883a 	mov	r2,zero
   4dbbc:	280a953a 	slli	r5,r5,20
   4dbc0:	31803fcc 	andi	r6,r6,255
   4dbc4:	01000434 	movhi	r4,16
   4dbc8:	300c97fa 	slli	r6,r6,31
   4dbcc:	213fffc4 	addi	r4,r4,-1
   4dbd0:	1906703a 	and	r3,r3,r4
   4dbd4:	1946b03a 	or	r3,r3,r5
   4dbd8:	1986b03a 	or	r3,r3,r6
   4dbdc:	dfc00217 	ldw	ra,8(sp)
   4dbe0:	dc400117 	ldw	r17,4(sp)
   4dbe4:	dc000017 	ldw	r16,0(sp)
   4dbe8:	dec00304 	addi	sp,sp,12
   4dbec:	f800283a 	ret
   4dbf0:	00c002c4 	movi	r3,11
   4dbf4:	1887c83a 	sub	r3,r3,r2
   4dbf8:	88c6d83a 	srl	r3,r17,r3
   4dbfc:	8904983a 	sll	r2,r17,r4
   4dc00:	01000434 	movhi	r4,16
   4dc04:	213fffc4 	addi	r4,r4,-1
   4dc08:	2941ffcc 	andi	r5,r5,2047
   4dc0c:	1906703a 	and	r3,r3,r4
   4dc10:	800d883a 	mov	r6,r16
   4dc14:	003fe906 	br	4dbbc <__alt_data_end+0xfffe1c9c>
   4dc18:	000d883a 	mov	r6,zero
   4dc1c:	000b883a 	mov	r5,zero
   4dc20:	0007883a 	mov	r3,zero
   4dc24:	0005883a 	mov	r2,zero
   4dc28:	003fe406 	br	4dbbc <__alt_data_end+0xfffe1c9c>
   4dc2c:	0123c83a 	sub	r17,zero,r4
   4dc30:	003fd106 	br	4db78 <__alt_data_end+0xfffe1c58>

0004dc34 <__floatunsidf>:
   4dc34:	defffe04 	addi	sp,sp,-8
   4dc38:	dc000015 	stw	r16,0(sp)
   4dc3c:	dfc00115 	stw	ra,4(sp)
   4dc40:	2021883a 	mov	r16,r4
   4dc44:	20002226 	beq	r4,zero,4dcd0 <__floatunsidf+0x9c>
   4dc48:	004dcdc0 	call	4dcdc <__clzsi2>
   4dc4c:	01010784 	movi	r4,1054
   4dc50:	2089c83a 	sub	r4,r4,r2
   4dc54:	01810cc4 	movi	r6,1075
   4dc58:	310dc83a 	sub	r6,r6,r4
   4dc5c:	00c007c4 	movi	r3,31
   4dc60:	1980120e 	bge	r3,r6,4dcac <__floatunsidf+0x78>
   4dc64:	00c104c4 	movi	r3,1043
   4dc68:	1907c83a 	sub	r3,r3,r4
   4dc6c:	80ca983a 	sll	r5,r16,r3
   4dc70:	00800434 	movhi	r2,16
   4dc74:	10bfffc4 	addi	r2,r2,-1
   4dc78:	2101ffcc 	andi	r4,r4,2047
   4dc7c:	0021883a 	mov	r16,zero
   4dc80:	288a703a 	and	r5,r5,r2
   4dc84:	2008953a 	slli	r4,r4,20
   4dc88:	00c00434 	movhi	r3,16
   4dc8c:	18ffffc4 	addi	r3,r3,-1
   4dc90:	28c6703a 	and	r3,r5,r3
   4dc94:	8005883a 	mov	r2,r16
   4dc98:	1906b03a 	or	r3,r3,r4
   4dc9c:	dfc00117 	ldw	ra,4(sp)
   4dca0:	dc000017 	ldw	r16,0(sp)
   4dca4:	dec00204 	addi	sp,sp,8
   4dca8:	f800283a 	ret
   4dcac:	00c002c4 	movi	r3,11
   4dcb0:	188bc83a 	sub	r5,r3,r2
   4dcb4:	814ad83a 	srl	r5,r16,r5
   4dcb8:	00c00434 	movhi	r3,16
   4dcbc:	18ffffc4 	addi	r3,r3,-1
   4dcc0:	81a0983a 	sll	r16,r16,r6
   4dcc4:	2101ffcc 	andi	r4,r4,2047
   4dcc8:	28ca703a 	and	r5,r5,r3
   4dccc:	003fed06 	br	4dc84 <__alt_data_end+0xfffe1d64>
   4dcd0:	0009883a 	mov	r4,zero
   4dcd4:	000b883a 	mov	r5,zero
   4dcd8:	003fea06 	br	4dc84 <__alt_data_end+0xfffe1d64>

0004dcdc <__clzsi2>:
   4dcdc:	00bfffd4 	movui	r2,65535
   4dce0:	11000536 	bltu	r2,r4,4dcf8 <__clzsi2+0x1c>
   4dce4:	00803fc4 	movi	r2,255
   4dce8:	11000f36 	bltu	r2,r4,4dd28 <__clzsi2+0x4c>
   4dcec:	00800804 	movi	r2,32
   4dcf0:	0007883a 	mov	r3,zero
   4dcf4:	00000506 	br	4dd0c <__clzsi2+0x30>
   4dcf8:	00804034 	movhi	r2,256
   4dcfc:	10bfffc4 	addi	r2,r2,-1
   4dd00:	11000c2e 	bgeu	r2,r4,4dd34 <__clzsi2+0x58>
   4dd04:	00800204 	movi	r2,8
   4dd08:	00c00604 	movi	r3,24
   4dd0c:	20c8d83a 	srl	r4,r4,r3
   4dd10:	00c00174 	movhi	r3,5
   4dd14:	18c26a04 	addi	r3,r3,2472
   4dd18:	1909883a 	add	r4,r3,r4
   4dd1c:	20c00003 	ldbu	r3,0(r4)
   4dd20:	10c5c83a 	sub	r2,r2,r3
   4dd24:	f800283a 	ret
   4dd28:	00800604 	movi	r2,24
   4dd2c:	00c00204 	movi	r3,8
   4dd30:	003ff606 	br	4dd0c <__alt_data_end+0xfffe1dec>
   4dd34:	00800404 	movi	r2,16
   4dd38:	1007883a 	mov	r3,r2
   4dd3c:	003ff306 	br	4dd0c <__alt_data_end+0xfffe1dec>

0004dd40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4dd40:	defffe04 	addi	sp,sp,-8
   4dd44:	dfc00115 	stw	ra,4(sp)
   4dd48:	df000015 	stw	fp,0(sp)
   4dd4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4dd50:	d0a00b17 	ldw	r2,-32724(gp)
   4dd54:	10000326 	beq	r2,zero,4dd64 <alt_get_errno+0x24>
   4dd58:	d0a00b17 	ldw	r2,-32724(gp)
   4dd5c:	103ee83a 	callr	r2
   4dd60:	00000106 	br	4dd68 <alt_get_errno+0x28>
   4dd64:	d0a6d604 	addi	r2,gp,-25768
}
   4dd68:	e037883a 	mov	sp,fp
   4dd6c:	dfc00117 	ldw	ra,4(sp)
   4dd70:	df000017 	ldw	fp,0(sp)
   4dd74:	dec00204 	addi	sp,sp,8
   4dd78:	f800283a 	ret

0004dd7c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4dd7c:	defffb04 	addi	sp,sp,-20
   4dd80:	dfc00415 	stw	ra,16(sp)
   4dd84:	df000315 	stw	fp,12(sp)
   4dd88:	df000304 	addi	fp,sp,12
   4dd8c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4dd90:	e0bfff17 	ldw	r2,-4(fp)
   4dd94:	10000816 	blt	r2,zero,4ddb8 <close+0x3c>
   4dd98:	01400304 	movi	r5,12
   4dd9c:	e13fff17 	ldw	r4,-4(fp)
   4dda0:	004b4740 	call	4b474 <__mulsi3>
   4dda4:	1007883a 	mov	r3,r2
   4dda8:	00800174 	movhi	r2,5
   4ddac:	1084ee04 	addi	r2,r2,5048
   4ddb0:	1885883a 	add	r2,r3,r2
   4ddb4:	00000106 	br	4ddbc <close+0x40>
   4ddb8:	0005883a 	mov	r2,zero
   4ddbc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4ddc0:	e0bffd17 	ldw	r2,-12(fp)
   4ddc4:	10001926 	beq	r2,zero,4de2c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4ddc8:	e0bffd17 	ldw	r2,-12(fp)
   4ddcc:	10800017 	ldw	r2,0(r2)
   4ddd0:	10800417 	ldw	r2,16(r2)
   4ddd4:	10000626 	beq	r2,zero,4ddf0 <close+0x74>
   4ddd8:	e0bffd17 	ldw	r2,-12(fp)
   4dddc:	10800017 	ldw	r2,0(r2)
   4dde0:	10800417 	ldw	r2,16(r2)
   4dde4:	e13ffd17 	ldw	r4,-12(fp)
   4dde8:	103ee83a 	callr	r2
   4ddec:	00000106 	br	4ddf4 <close+0x78>
   4ddf0:	0005883a 	mov	r2,zero
   4ddf4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4ddf8:	e13fff17 	ldw	r4,-4(fp)
   4ddfc:	004e6e80 	call	4e6e8 <alt_release_fd>
    if (rval < 0)
   4de00:	e0bffe17 	ldw	r2,-8(fp)
   4de04:	1000070e 	bge	r2,zero,4de24 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   4de08:	004dd400 	call	4dd40 <alt_get_errno>
   4de0c:	1007883a 	mov	r3,r2
   4de10:	e0bffe17 	ldw	r2,-8(fp)
   4de14:	0085c83a 	sub	r2,zero,r2
   4de18:	18800015 	stw	r2,0(r3)
      return -1;
   4de1c:	00bfffc4 	movi	r2,-1
   4de20:	00000706 	br	4de40 <close+0xc4>
    }
    return 0;
   4de24:	0005883a 	mov	r2,zero
   4de28:	00000506 	br	4de40 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4de2c:	004dd400 	call	4dd40 <alt_get_errno>
   4de30:	1007883a 	mov	r3,r2
   4de34:	00801444 	movi	r2,81
   4de38:	18800015 	stw	r2,0(r3)
    return -1;
   4de3c:	00bfffc4 	movi	r2,-1
  }
}
   4de40:	e037883a 	mov	sp,fp
   4de44:	dfc00117 	ldw	ra,4(sp)
   4de48:	df000017 	ldw	fp,0(sp)
   4de4c:	dec00204 	addi	sp,sp,8
   4de50:	f800283a 	ret

0004de54 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4de54:	defffc04 	addi	sp,sp,-16
   4de58:	df000315 	stw	fp,12(sp)
   4de5c:	df000304 	addi	fp,sp,12
   4de60:	e13ffd15 	stw	r4,-12(fp)
   4de64:	e17ffe15 	stw	r5,-8(fp)
   4de68:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4de6c:	e0bfff17 	ldw	r2,-4(fp)
}
   4de70:	e037883a 	mov	sp,fp
   4de74:	df000017 	ldw	fp,0(sp)
   4de78:	dec00104 	addi	sp,sp,4
   4de7c:	f800283a 	ret

0004de80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4de80:	defffe04 	addi	sp,sp,-8
   4de84:	dfc00115 	stw	ra,4(sp)
   4de88:	df000015 	stw	fp,0(sp)
   4de8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4de90:	d0a00b17 	ldw	r2,-32724(gp)
   4de94:	10000326 	beq	r2,zero,4dea4 <alt_get_errno+0x24>
   4de98:	d0a00b17 	ldw	r2,-32724(gp)
   4de9c:	103ee83a 	callr	r2
   4dea0:	00000106 	br	4dea8 <alt_get_errno+0x28>
   4dea4:	d0a6d604 	addi	r2,gp,-25768
}
   4dea8:	e037883a 	mov	sp,fp
   4deac:	dfc00117 	ldw	ra,4(sp)
   4deb0:	df000017 	ldw	fp,0(sp)
   4deb4:	dec00204 	addi	sp,sp,8
   4deb8:	f800283a 	ret

0004debc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4debc:	defffb04 	addi	sp,sp,-20
   4dec0:	dfc00415 	stw	ra,16(sp)
   4dec4:	df000315 	stw	fp,12(sp)
   4dec8:	df000304 	addi	fp,sp,12
   4decc:	e13ffe15 	stw	r4,-8(fp)
   4ded0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4ded4:	e0bffe17 	ldw	r2,-8(fp)
   4ded8:	10000816 	blt	r2,zero,4defc <fstat+0x40>
   4dedc:	01400304 	movi	r5,12
   4dee0:	e13ffe17 	ldw	r4,-8(fp)
   4dee4:	004b4740 	call	4b474 <__mulsi3>
   4dee8:	1007883a 	mov	r3,r2
   4deec:	00800174 	movhi	r2,5
   4def0:	1084ee04 	addi	r2,r2,5048
   4def4:	1885883a 	add	r2,r3,r2
   4def8:	00000106 	br	4df00 <fstat+0x44>
   4defc:	0005883a 	mov	r2,zero
   4df00:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4df04:	e0bffd17 	ldw	r2,-12(fp)
   4df08:	10001026 	beq	r2,zero,4df4c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4df0c:	e0bffd17 	ldw	r2,-12(fp)
   4df10:	10800017 	ldw	r2,0(r2)
   4df14:	10800817 	ldw	r2,32(r2)
   4df18:	10000726 	beq	r2,zero,4df38 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   4df1c:	e0bffd17 	ldw	r2,-12(fp)
   4df20:	10800017 	ldw	r2,0(r2)
   4df24:	10800817 	ldw	r2,32(r2)
   4df28:	e17fff17 	ldw	r5,-4(fp)
   4df2c:	e13ffd17 	ldw	r4,-12(fp)
   4df30:	103ee83a 	callr	r2
   4df34:	00000a06 	br	4df60 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4df38:	e0bfff17 	ldw	r2,-4(fp)
   4df3c:	00c80004 	movi	r3,8192
   4df40:	10c00115 	stw	r3,4(r2)
      return 0;
   4df44:	0005883a 	mov	r2,zero
   4df48:	00000506 	br	4df60 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4df4c:	004de800 	call	4de80 <alt_get_errno>
   4df50:	1007883a 	mov	r3,r2
   4df54:	00801444 	movi	r2,81
   4df58:	18800015 	stw	r2,0(r3)
    return -1;
   4df5c:	00bfffc4 	movi	r2,-1
  }
}
   4df60:	e037883a 	mov	sp,fp
   4df64:	dfc00117 	ldw	ra,4(sp)
   4df68:	df000017 	ldw	fp,0(sp)
   4df6c:	dec00204 	addi	sp,sp,8
   4df70:	f800283a 	ret

0004df74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4df74:	defffe04 	addi	sp,sp,-8
   4df78:	dfc00115 	stw	ra,4(sp)
   4df7c:	df000015 	stw	fp,0(sp)
   4df80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4df84:	d0a00b17 	ldw	r2,-32724(gp)
   4df88:	10000326 	beq	r2,zero,4df98 <alt_get_errno+0x24>
   4df8c:	d0a00b17 	ldw	r2,-32724(gp)
   4df90:	103ee83a 	callr	r2
   4df94:	00000106 	br	4df9c <alt_get_errno+0x28>
   4df98:	d0a6d604 	addi	r2,gp,-25768
}
   4df9c:	e037883a 	mov	sp,fp
   4dfa0:	dfc00117 	ldw	ra,4(sp)
   4dfa4:	df000017 	ldw	fp,0(sp)
   4dfa8:	dec00204 	addi	sp,sp,8
   4dfac:	f800283a 	ret

0004dfb0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4dfb0:	deffed04 	addi	sp,sp,-76
   4dfb4:	dfc01215 	stw	ra,72(sp)
   4dfb8:	df001115 	stw	fp,68(sp)
   4dfbc:	df001104 	addi	fp,sp,68
   4dfc0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4dfc4:	e0bfff17 	ldw	r2,-4(fp)
   4dfc8:	10000816 	blt	r2,zero,4dfec <isatty+0x3c>
   4dfcc:	01400304 	movi	r5,12
   4dfd0:	e13fff17 	ldw	r4,-4(fp)
   4dfd4:	004b4740 	call	4b474 <__mulsi3>
   4dfd8:	1007883a 	mov	r3,r2
   4dfdc:	00800174 	movhi	r2,5
   4dfe0:	1084ee04 	addi	r2,r2,5048
   4dfe4:	1885883a 	add	r2,r3,r2
   4dfe8:	00000106 	br	4dff0 <isatty+0x40>
   4dfec:	0005883a 	mov	r2,zero
   4dff0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4dff4:	e0bfef17 	ldw	r2,-68(fp)
   4dff8:	10000e26 	beq	r2,zero,4e034 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4dffc:	e0bfef17 	ldw	r2,-68(fp)
   4e000:	10800017 	ldw	r2,0(r2)
   4e004:	10800817 	ldw	r2,32(r2)
   4e008:	1000021e 	bne	r2,zero,4e014 <isatty+0x64>
    {
      return 1;
   4e00c:	00800044 	movi	r2,1
   4e010:	00000d06 	br	4e048 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4e014:	e0bff004 	addi	r2,fp,-64
   4e018:	100b883a 	mov	r5,r2
   4e01c:	e13fff17 	ldw	r4,-4(fp)
   4e020:	004debc0 	call	4debc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4e024:	e0bff117 	ldw	r2,-60(fp)
   4e028:	10880020 	cmpeqi	r2,r2,8192
   4e02c:	10803fcc 	andi	r2,r2,255
   4e030:	00000506 	br	4e048 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4e034:	004df740 	call	4df74 <alt_get_errno>
   4e038:	1007883a 	mov	r3,r2
   4e03c:	00801444 	movi	r2,81
   4e040:	18800015 	stw	r2,0(r3)
    return 0;
   4e044:	0005883a 	mov	r2,zero
  }
}
   4e048:	e037883a 	mov	sp,fp
   4e04c:	dfc00117 	ldw	ra,4(sp)
   4e050:	df000017 	ldw	fp,0(sp)
   4e054:	dec00204 	addi	sp,sp,8
   4e058:	f800283a 	ret

0004e05c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4e05c:	defffc04 	addi	sp,sp,-16
   4e060:	df000315 	stw	fp,12(sp)
   4e064:	df000304 	addi	fp,sp,12
   4e068:	e13ffd15 	stw	r4,-12(fp)
   4e06c:	e17ffe15 	stw	r5,-8(fp)
   4e070:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4e074:	e0fffe17 	ldw	r3,-8(fp)
   4e078:	e0bffd17 	ldw	r2,-12(fp)
   4e07c:	18800c26 	beq	r3,r2,4e0b0 <alt_load_section+0x54>
  {
    while( to != end )
   4e080:	00000806 	br	4e0a4 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4e084:	e0bffe17 	ldw	r2,-8(fp)
   4e088:	10c00104 	addi	r3,r2,4
   4e08c:	e0fffe15 	stw	r3,-8(fp)
   4e090:	e0fffd17 	ldw	r3,-12(fp)
   4e094:	19000104 	addi	r4,r3,4
   4e098:	e13ffd15 	stw	r4,-12(fp)
   4e09c:	18c00017 	ldw	r3,0(r3)
   4e0a0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4e0a4:	e0fffe17 	ldw	r3,-8(fp)
   4e0a8:	e0bfff17 	ldw	r2,-4(fp)
   4e0ac:	18bff51e 	bne	r3,r2,4e084 <__alt_data_end+0xfffe2164>
    {
      *to++ = *from++;
    }
  }
}
   4e0b0:	0001883a 	nop
   4e0b4:	e037883a 	mov	sp,fp
   4e0b8:	df000017 	ldw	fp,0(sp)
   4e0bc:	dec00104 	addi	sp,sp,4
   4e0c0:	f800283a 	ret

0004e0c4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4e0c4:	defffe04 	addi	sp,sp,-8
   4e0c8:	dfc00115 	stw	ra,4(sp)
   4e0cc:	df000015 	stw	fp,0(sp)
   4e0d0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4e0d4:	01800174 	movhi	r6,5
   4e0d8:	31898104 	addi	r6,r6,9732
   4e0dc:	01400174 	movhi	r5,5
   4e0e0:	2942bb04 	addi	r5,r5,2796
   4e0e4:	01000174 	movhi	r4,5
   4e0e8:	21098104 	addi	r4,r4,9732
   4e0ec:	004e05c0 	call	4e05c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4e0f0:	01800134 	movhi	r6,4
   4e0f4:	31808d04 	addi	r6,r6,564
   4e0f8:	01400134 	movhi	r5,4
   4e0fc:	29400804 	addi	r5,r5,32
   4e100:	01000134 	movhi	r4,4
   4e104:	21000804 	addi	r4,r4,32
   4e108:	004e05c0 	call	4e05c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4e10c:	01800174 	movhi	r6,5
   4e110:	3182bb04 	addi	r6,r6,2796
   4e114:	01400174 	movhi	r5,5
   4e118:	2941dc04 	addi	r5,r5,1904
   4e11c:	01000174 	movhi	r4,5
   4e120:	2101dc04 	addi	r4,r4,1904
   4e124:	004e05c0 	call	4e05c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4e128:	004fa5c0 	call	4fa5c <alt_dcache_flush_all>
  alt_icache_flush_all();
   4e12c:	004fe780 	call	4fe78 <alt_icache_flush_all>
}
   4e130:	0001883a 	nop
   4e134:	e037883a 	mov	sp,fp
   4e138:	dfc00117 	ldw	ra,4(sp)
   4e13c:	df000017 	ldw	fp,0(sp)
   4e140:	dec00204 	addi	sp,sp,8
   4e144:	f800283a 	ret

0004e148 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e148:	defffe04 	addi	sp,sp,-8
   4e14c:	dfc00115 	stw	ra,4(sp)
   4e150:	df000015 	stw	fp,0(sp)
   4e154:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e158:	d0a00b17 	ldw	r2,-32724(gp)
   4e15c:	10000326 	beq	r2,zero,4e16c <alt_get_errno+0x24>
   4e160:	d0a00b17 	ldw	r2,-32724(gp)
   4e164:	103ee83a 	callr	r2
   4e168:	00000106 	br	4e170 <alt_get_errno+0x28>
   4e16c:	d0a6d604 	addi	r2,gp,-25768
}
   4e170:	e037883a 	mov	sp,fp
   4e174:	dfc00117 	ldw	ra,4(sp)
   4e178:	df000017 	ldw	fp,0(sp)
   4e17c:	dec00204 	addi	sp,sp,8
   4e180:	f800283a 	ret

0004e184 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4e184:	defff904 	addi	sp,sp,-28
   4e188:	dfc00615 	stw	ra,24(sp)
   4e18c:	df000515 	stw	fp,20(sp)
   4e190:	df000504 	addi	fp,sp,20
   4e194:	e13ffd15 	stw	r4,-12(fp)
   4e198:	e17ffe15 	stw	r5,-8(fp)
   4e19c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4e1a0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e1a4:	e0bffd17 	ldw	r2,-12(fp)
   4e1a8:	10000816 	blt	r2,zero,4e1cc <lseek+0x48>
   4e1ac:	01400304 	movi	r5,12
   4e1b0:	e13ffd17 	ldw	r4,-12(fp)
   4e1b4:	004b4740 	call	4b474 <__mulsi3>
   4e1b8:	1007883a 	mov	r3,r2
   4e1bc:	00800174 	movhi	r2,5
   4e1c0:	1084ee04 	addi	r2,r2,5048
   4e1c4:	1885883a 	add	r2,r3,r2
   4e1c8:	00000106 	br	4e1d0 <lseek+0x4c>
   4e1cc:	0005883a 	mov	r2,zero
   4e1d0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4e1d4:	e0bffc17 	ldw	r2,-16(fp)
   4e1d8:	10001026 	beq	r2,zero,4e21c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4e1dc:	e0bffc17 	ldw	r2,-16(fp)
   4e1e0:	10800017 	ldw	r2,0(r2)
   4e1e4:	10800717 	ldw	r2,28(r2)
   4e1e8:	10000926 	beq	r2,zero,4e210 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4e1ec:	e0bffc17 	ldw	r2,-16(fp)
   4e1f0:	10800017 	ldw	r2,0(r2)
   4e1f4:	10800717 	ldw	r2,28(r2)
   4e1f8:	e1bfff17 	ldw	r6,-4(fp)
   4e1fc:	e17ffe17 	ldw	r5,-8(fp)
   4e200:	e13ffc17 	ldw	r4,-16(fp)
   4e204:	103ee83a 	callr	r2
   4e208:	e0bffb15 	stw	r2,-20(fp)
   4e20c:	00000506 	br	4e224 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4e210:	00bfde84 	movi	r2,-134
   4e214:	e0bffb15 	stw	r2,-20(fp)
   4e218:	00000206 	br	4e224 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   4e21c:	00bfebc4 	movi	r2,-81
   4e220:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4e224:	e0bffb17 	ldw	r2,-20(fp)
   4e228:	1000070e 	bge	r2,zero,4e248 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   4e22c:	004e1480 	call	4e148 <alt_get_errno>
   4e230:	1007883a 	mov	r3,r2
   4e234:	e0bffb17 	ldw	r2,-20(fp)
   4e238:	0085c83a 	sub	r2,zero,r2
   4e23c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4e240:	00bfffc4 	movi	r2,-1
   4e244:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4e248:	e0bffb17 	ldw	r2,-20(fp)
}
   4e24c:	e037883a 	mov	sp,fp
   4e250:	dfc00117 	ldw	ra,4(sp)
   4e254:	df000017 	ldw	fp,0(sp)
   4e258:	dec00204 	addi	sp,sp,8
   4e25c:	f800283a 	ret

0004e260 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4e260:	defffd04 	addi	sp,sp,-12
   4e264:	dfc00215 	stw	ra,8(sp)
   4e268:	df000115 	stw	fp,4(sp)
   4e26c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4e270:	0009883a 	mov	r4,zero
   4e274:	004e98c0 	call	4e98c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4e278:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4e27c:	004e9c40 	call	4e9c4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4e280:	01800174 	movhi	r6,5
   4e284:	3182ad04 	addi	r6,r6,2740
   4e288:	01400174 	movhi	r5,5
   4e28c:	2942ad04 	addi	r5,r5,2740
   4e290:	01000174 	movhi	r4,5
   4e294:	2102ad04 	addi	r4,r4,2740
   4e298:	004ff7c0 	call	4ff7c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4e29c:	004fb5c0 	call	4fb5c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4e2a0:	01000174 	movhi	r4,5
   4e2a4:	213eef04 	addi	r4,r4,-1092
   4e2a8:	00503dc0 	call	503dc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4e2ac:	d0a6dd17 	ldw	r2,-25740(gp)
   4e2b0:	d0e6de17 	ldw	r3,-25736(gp)
   4e2b4:	d126df17 	ldw	r4,-25732(gp)
   4e2b8:	200d883a 	mov	r6,r4
   4e2bc:	180b883a 	mov	r5,r3
   4e2c0:	1009883a 	mov	r4,r2
   4e2c4:	00402cc0 	call	402cc <main>
   4e2c8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4e2cc:	01000044 	movi	r4,1
   4e2d0:	004dd7c0 	call	4dd7c <close>
  exit (result);
   4e2d4:	e13fff17 	ldw	r4,-4(fp)
   4e2d8:	00503f00 	call	503f0 <exit>

0004e2dc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4e2dc:	defffe04 	addi	sp,sp,-8
   4e2e0:	df000115 	stw	fp,4(sp)
   4e2e4:	df000104 	addi	fp,sp,4
   4e2e8:	e13fff15 	stw	r4,-4(fp)
}
   4e2ec:	0001883a 	nop
   4e2f0:	e037883a 	mov	sp,fp
   4e2f4:	df000017 	ldw	fp,0(sp)
   4e2f8:	dec00104 	addi	sp,sp,4
   4e2fc:	f800283a 	ret

0004e300 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4e300:	defffe04 	addi	sp,sp,-8
   4e304:	df000115 	stw	fp,4(sp)
   4e308:	df000104 	addi	fp,sp,4
   4e30c:	e13fff15 	stw	r4,-4(fp)
}
   4e310:	0001883a 	nop
   4e314:	e037883a 	mov	sp,fp
   4e318:	df000017 	ldw	fp,0(sp)
   4e31c:	dec00104 	addi	sp,sp,4
   4e320:	f800283a 	ret

0004e324 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e324:	defffe04 	addi	sp,sp,-8
   4e328:	dfc00115 	stw	ra,4(sp)
   4e32c:	df000015 	stw	fp,0(sp)
   4e330:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e334:	d0a00b17 	ldw	r2,-32724(gp)
   4e338:	10000326 	beq	r2,zero,4e348 <alt_get_errno+0x24>
   4e33c:	d0a00b17 	ldw	r2,-32724(gp)
   4e340:	103ee83a 	callr	r2
   4e344:	00000106 	br	4e34c <alt_get_errno+0x28>
   4e348:	d0a6d604 	addi	r2,gp,-25768
}
   4e34c:	e037883a 	mov	sp,fp
   4e350:	dfc00117 	ldw	ra,4(sp)
   4e354:	df000017 	ldw	fp,0(sp)
   4e358:	dec00204 	addi	sp,sp,8
   4e35c:	f800283a 	ret

0004e360 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4e360:	defffb04 	addi	sp,sp,-20
   4e364:	dfc00415 	stw	ra,16(sp)
   4e368:	df000315 	stw	fp,12(sp)
   4e36c:	dc000215 	stw	r16,8(sp)
   4e370:	df000304 	addi	fp,sp,12
   4e374:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4e378:	e0bffe17 	ldw	r2,-8(fp)
   4e37c:	10800217 	ldw	r2,8(r2)
   4e380:	10d00034 	orhi	r3,r2,16384
   4e384:	e0bffe17 	ldw	r2,-8(fp)
   4e388:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4e38c:	e03ffd15 	stw	zero,-12(fp)
   4e390:	00002306 	br	4e420 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4e394:	04000174 	movhi	r16,5
   4e398:	8404ee04 	addi	r16,r16,5048
   4e39c:	e0bffd17 	ldw	r2,-12(fp)
   4e3a0:	01400304 	movi	r5,12
   4e3a4:	1009883a 	mov	r4,r2
   4e3a8:	004b4740 	call	4b474 <__mulsi3>
   4e3ac:	8085883a 	add	r2,r16,r2
   4e3b0:	10c00017 	ldw	r3,0(r2)
   4e3b4:	e0bffe17 	ldw	r2,-8(fp)
   4e3b8:	10800017 	ldw	r2,0(r2)
   4e3bc:	1880151e 	bne	r3,r2,4e414 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4e3c0:	04000174 	movhi	r16,5
   4e3c4:	8404ee04 	addi	r16,r16,5048
   4e3c8:	e0bffd17 	ldw	r2,-12(fp)
   4e3cc:	01400304 	movi	r5,12
   4e3d0:	1009883a 	mov	r4,r2
   4e3d4:	004b4740 	call	4b474 <__mulsi3>
   4e3d8:	8085883a 	add	r2,r16,r2
   4e3dc:	10800204 	addi	r2,r2,8
   4e3e0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4e3e4:	10000b0e 	bge	r2,zero,4e414 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4e3e8:	01400304 	movi	r5,12
   4e3ec:	e13ffd17 	ldw	r4,-12(fp)
   4e3f0:	004b4740 	call	4b474 <__mulsi3>
   4e3f4:	1007883a 	mov	r3,r2
   4e3f8:	00800174 	movhi	r2,5
   4e3fc:	1084ee04 	addi	r2,r2,5048
   4e400:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4e404:	e0bffe17 	ldw	r2,-8(fp)
   4e408:	18800226 	beq	r3,r2,4e414 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4e40c:	00bffcc4 	movi	r2,-13
   4e410:	00000806 	br	4e434 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4e414:	e0bffd17 	ldw	r2,-12(fp)
   4e418:	10800044 	addi	r2,r2,1
   4e41c:	e0bffd15 	stw	r2,-12(fp)
   4e420:	d0a00a17 	ldw	r2,-32728(gp)
   4e424:	1007883a 	mov	r3,r2
   4e428:	e0bffd17 	ldw	r2,-12(fp)
   4e42c:	18bfd92e 	bgeu	r3,r2,4e394 <__alt_data_end+0xfffe2474>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4e430:	0005883a 	mov	r2,zero
}
   4e434:	e6ffff04 	addi	sp,fp,-4
   4e438:	dfc00217 	ldw	ra,8(sp)
   4e43c:	df000117 	ldw	fp,4(sp)
   4e440:	dc000017 	ldw	r16,0(sp)
   4e444:	dec00304 	addi	sp,sp,12
   4e448:	f800283a 	ret

0004e44c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4e44c:	defff604 	addi	sp,sp,-40
   4e450:	dfc00915 	stw	ra,36(sp)
   4e454:	df000815 	stw	fp,32(sp)
   4e458:	df000804 	addi	fp,sp,32
   4e45c:	e13ffd15 	stw	r4,-12(fp)
   4e460:	e17ffe15 	stw	r5,-8(fp)
   4e464:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4e468:	00bfffc4 	movi	r2,-1
   4e46c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4e470:	00bffb44 	movi	r2,-19
   4e474:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4e478:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4e47c:	d1600804 	addi	r5,gp,-32736
   4e480:	e13ffd17 	ldw	r4,-12(fp)
   4e484:	004fc1c0 	call	4fc1c <alt_find_dev>
   4e488:	e0bff815 	stw	r2,-32(fp)
   4e48c:	e0bff817 	ldw	r2,-32(fp)
   4e490:	1000051e 	bne	r2,zero,4e4a8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4e494:	e13ffd17 	ldw	r4,-12(fp)
   4e498:	004fcac0 	call	4fcac <alt_find_file>
   4e49c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4e4a0:	00800044 	movi	r2,1
   4e4a4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4e4a8:	e0bff817 	ldw	r2,-32(fp)
   4e4ac:	10002b26 	beq	r2,zero,4e55c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4e4b0:	e13ff817 	ldw	r4,-32(fp)
   4e4b4:	004fdb40 	call	4fdb4 <alt_get_fd>
   4e4b8:	e0bff915 	stw	r2,-28(fp)
   4e4bc:	e0bff917 	ldw	r2,-28(fp)
   4e4c0:	1000030e 	bge	r2,zero,4e4d0 <open+0x84>
    {
      status = index;
   4e4c4:	e0bff917 	ldw	r2,-28(fp)
   4e4c8:	e0bffa15 	stw	r2,-24(fp)
   4e4cc:	00002506 	br	4e564 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   4e4d0:	01400304 	movi	r5,12
   4e4d4:	e13ff917 	ldw	r4,-28(fp)
   4e4d8:	004b4740 	call	4b474 <__mulsi3>
   4e4dc:	1007883a 	mov	r3,r2
   4e4e0:	00800174 	movhi	r2,5
   4e4e4:	1084ee04 	addi	r2,r2,5048
   4e4e8:	1885883a 	add	r2,r3,r2
   4e4ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4e4f0:	e0fffe17 	ldw	r3,-8(fp)
   4e4f4:	00900034 	movhi	r2,16384
   4e4f8:	10bfffc4 	addi	r2,r2,-1
   4e4fc:	1886703a 	and	r3,r3,r2
   4e500:	e0bffc17 	ldw	r2,-16(fp)
   4e504:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4e508:	e0bffb17 	ldw	r2,-20(fp)
   4e50c:	1000051e 	bne	r2,zero,4e524 <open+0xd8>
   4e510:	e13ffc17 	ldw	r4,-16(fp)
   4e514:	004e3600 	call	4e360 <alt_file_locked>
   4e518:	e0bffa15 	stw	r2,-24(fp)
   4e51c:	e0bffa17 	ldw	r2,-24(fp)
   4e520:	10001016 	blt	r2,zero,4e564 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4e524:	e0bff817 	ldw	r2,-32(fp)
   4e528:	10800317 	ldw	r2,12(r2)
   4e52c:	10000826 	beq	r2,zero,4e550 <open+0x104>
   4e530:	e0bff817 	ldw	r2,-32(fp)
   4e534:	10800317 	ldw	r2,12(r2)
   4e538:	e1ffff17 	ldw	r7,-4(fp)
   4e53c:	e1bffe17 	ldw	r6,-8(fp)
   4e540:	e17ffd17 	ldw	r5,-12(fp)
   4e544:	e13ffc17 	ldw	r4,-16(fp)
   4e548:	103ee83a 	callr	r2
   4e54c:	00000106 	br	4e554 <open+0x108>
   4e550:	0005883a 	mov	r2,zero
   4e554:	e0bffa15 	stw	r2,-24(fp)
   4e558:	00000206 	br	4e564 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4e55c:	00bffb44 	movi	r2,-19
   4e560:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4e564:	e0bffa17 	ldw	r2,-24(fp)
   4e568:	1000090e 	bge	r2,zero,4e590 <open+0x144>
  {
    alt_release_fd (index);  
   4e56c:	e13ff917 	ldw	r4,-28(fp)
   4e570:	004e6e80 	call	4e6e8 <alt_release_fd>
    ALT_ERRNO = -status;
   4e574:	004e3240 	call	4e324 <alt_get_errno>
   4e578:	1007883a 	mov	r3,r2
   4e57c:	e0bffa17 	ldw	r2,-24(fp)
   4e580:	0085c83a 	sub	r2,zero,r2
   4e584:	18800015 	stw	r2,0(r3)
    return -1;
   4e588:	00bfffc4 	movi	r2,-1
   4e58c:	00000106 	br	4e594 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   4e590:	e0bff917 	ldw	r2,-28(fp)
}
   4e594:	e037883a 	mov	sp,fp
   4e598:	dfc00117 	ldw	ra,4(sp)
   4e59c:	df000017 	ldw	fp,0(sp)
   4e5a0:	dec00204 	addi	sp,sp,8
   4e5a4:	f800283a 	ret

0004e5a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e5a8:	defffe04 	addi	sp,sp,-8
   4e5ac:	dfc00115 	stw	ra,4(sp)
   4e5b0:	df000015 	stw	fp,0(sp)
   4e5b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e5b8:	d0a00b17 	ldw	r2,-32724(gp)
   4e5bc:	10000326 	beq	r2,zero,4e5cc <alt_get_errno+0x24>
   4e5c0:	d0a00b17 	ldw	r2,-32724(gp)
   4e5c4:	103ee83a 	callr	r2
   4e5c8:	00000106 	br	4e5d0 <alt_get_errno+0x28>
   4e5cc:	d0a6d604 	addi	r2,gp,-25768
}
   4e5d0:	e037883a 	mov	sp,fp
   4e5d4:	dfc00117 	ldw	ra,4(sp)
   4e5d8:	df000017 	ldw	fp,0(sp)
   4e5dc:	dec00204 	addi	sp,sp,8
   4e5e0:	f800283a 	ret

0004e5e4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4e5e4:	defff904 	addi	sp,sp,-28
   4e5e8:	dfc00615 	stw	ra,24(sp)
   4e5ec:	df000515 	stw	fp,20(sp)
   4e5f0:	df000504 	addi	fp,sp,20
   4e5f4:	e13ffd15 	stw	r4,-12(fp)
   4e5f8:	e17ffe15 	stw	r5,-8(fp)
   4e5fc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e600:	e0bffd17 	ldw	r2,-12(fp)
   4e604:	10000816 	blt	r2,zero,4e628 <read+0x44>
   4e608:	01400304 	movi	r5,12
   4e60c:	e13ffd17 	ldw	r4,-12(fp)
   4e610:	004b4740 	call	4b474 <__mulsi3>
   4e614:	1007883a 	mov	r3,r2
   4e618:	00800174 	movhi	r2,5
   4e61c:	1084ee04 	addi	r2,r2,5048
   4e620:	1885883a 	add	r2,r3,r2
   4e624:	00000106 	br	4e62c <read+0x48>
   4e628:	0005883a 	mov	r2,zero
   4e62c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4e630:	e0bffb17 	ldw	r2,-20(fp)
   4e634:	10002226 	beq	r2,zero,4e6c0 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4e638:	e0bffb17 	ldw	r2,-20(fp)
   4e63c:	10800217 	ldw	r2,8(r2)
   4e640:	108000cc 	andi	r2,r2,3
   4e644:	10800060 	cmpeqi	r2,r2,1
   4e648:	1000181e 	bne	r2,zero,4e6ac <read+0xc8>
        (fd->dev->read))
   4e64c:	e0bffb17 	ldw	r2,-20(fp)
   4e650:	10800017 	ldw	r2,0(r2)
   4e654:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4e658:	10001426 	beq	r2,zero,4e6ac <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4e65c:	e0bffb17 	ldw	r2,-20(fp)
   4e660:	10800017 	ldw	r2,0(r2)
   4e664:	10800517 	ldw	r2,20(r2)
   4e668:	e0ffff17 	ldw	r3,-4(fp)
   4e66c:	180d883a 	mov	r6,r3
   4e670:	e17ffe17 	ldw	r5,-8(fp)
   4e674:	e13ffb17 	ldw	r4,-20(fp)
   4e678:	103ee83a 	callr	r2
   4e67c:	e0bffc15 	stw	r2,-16(fp)
   4e680:	e0bffc17 	ldw	r2,-16(fp)
   4e684:	1000070e 	bge	r2,zero,4e6a4 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   4e688:	004e5a80 	call	4e5a8 <alt_get_errno>
   4e68c:	1007883a 	mov	r3,r2
   4e690:	e0bffc17 	ldw	r2,-16(fp)
   4e694:	0085c83a 	sub	r2,zero,r2
   4e698:	18800015 	stw	r2,0(r3)
          return -1;
   4e69c:	00bfffc4 	movi	r2,-1
   4e6a0:	00000c06 	br	4e6d4 <read+0xf0>
        }
        return rval;
   4e6a4:	e0bffc17 	ldw	r2,-16(fp)
   4e6a8:	00000a06 	br	4e6d4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4e6ac:	004e5a80 	call	4e5a8 <alt_get_errno>
   4e6b0:	1007883a 	mov	r3,r2
   4e6b4:	00800344 	movi	r2,13
   4e6b8:	18800015 	stw	r2,0(r3)
   4e6bc:	00000406 	br	4e6d0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4e6c0:	004e5a80 	call	4e5a8 <alt_get_errno>
   4e6c4:	1007883a 	mov	r3,r2
   4e6c8:	00801444 	movi	r2,81
   4e6cc:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4e6d0:	00bfffc4 	movi	r2,-1
}
   4e6d4:	e037883a 	mov	sp,fp
   4e6d8:	dfc00117 	ldw	ra,4(sp)
   4e6dc:	df000017 	ldw	fp,0(sp)
   4e6e0:	dec00204 	addi	sp,sp,8
   4e6e4:	f800283a 	ret

0004e6e8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4e6e8:	defffc04 	addi	sp,sp,-16
   4e6ec:	dfc00315 	stw	ra,12(sp)
   4e6f0:	df000215 	stw	fp,8(sp)
   4e6f4:	dc000115 	stw	r16,4(sp)
   4e6f8:	df000204 	addi	fp,sp,8
   4e6fc:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   4e700:	e0bffe17 	ldw	r2,-8(fp)
   4e704:	108000d0 	cmplti	r2,r2,3
   4e708:	1000111e 	bne	r2,zero,4e750 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   4e70c:	04000174 	movhi	r16,5
   4e710:	8404ee04 	addi	r16,r16,5048
   4e714:	e0bffe17 	ldw	r2,-8(fp)
   4e718:	01400304 	movi	r5,12
   4e71c:	1009883a 	mov	r4,r2
   4e720:	004b4740 	call	4b474 <__mulsi3>
   4e724:	8085883a 	add	r2,r16,r2
   4e728:	10800204 	addi	r2,r2,8
   4e72c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4e730:	04000174 	movhi	r16,5
   4e734:	8404ee04 	addi	r16,r16,5048
   4e738:	e0bffe17 	ldw	r2,-8(fp)
   4e73c:	01400304 	movi	r5,12
   4e740:	1009883a 	mov	r4,r2
   4e744:	004b4740 	call	4b474 <__mulsi3>
   4e748:	8085883a 	add	r2,r16,r2
   4e74c:	10000015 	stw	zero,0(r2)
  }
}
   4e750:	0001883a 	nop
   4e754:	e6ffff04 	addi	sp,fp,-4
   4e758:	dfc00217 	ldw	ra,8(sp)
   4e75c:	df000117 	ldw	fp,4(sp)
   4e760:	dc000017 	ldw	r16,0(sp)
   4e764:	dec00304 	addi	sp,sp,12
   4e768:	f800283a 	ret

0004e76c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4e76c:	defff904 	addi	sp,sp,-28
   4e770:	df000615 	stw	fp,24(sp)
   4e774:	df000604 	addi	fp,sp,24
   4e778:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e77c:	0005303a 	rdctl	r2,status
   4e780:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e784:	e0fffe17 	ldw	r3,-8(fp)
   4e788:	00bfff84 	movi	r2,-2
   4e78c:	1884703a 	and	r2,r3,r2
   4e790:	1001703a 	wrctl	status,r2
  
  return context;
   4e794:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4e798:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4e79c:	d0a00c17 	ldw	r2,-32720(gp)
   4e7a0:	10c000c4 	addi	r3,r2,3
   4e7a4:	00bfff04 	movi	r2,-4
   4e7a8:	1884703a 	and	r2,r3,r2
   4e7ac:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4e7b0:	d0e00c17 	ldw	r3,-32720(gp)
   4e7b4:	e0bfff17 	ldw	r2,-4(fp)
   4e7b8:	1887883a 	add	r3,r3,r2
   4e7bc:	008001f4 	movhi	r2,7
   4e7c0:	10afc804 	addi	r2,r2,-16608
   4e7c4:	10c0062e 	bgeu	r2,r3,4e7e0 <sbrk+0x74>
   4e7c8:	e0bffb17 	ldw	r2,-20(fp)
   4e7cc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e7d0:	e0bffa17 	ldw	r2,-24(fp)
   4e7d4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4e7d8:	00bfffc4 	movi	r2,-1
   4e7dc:	00000b06 	br	4e80c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4e7e0:	d0a00c17 	ldw	r2,-32720(gp)
   4e7e4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4e7e8:	d0e00c17 	ldw	r3,-32720(gp)
   4e7ec:	e0bfff17 	ldw	r2,-4(fp)
   4e7f0:	1885883a 	add	r2,r3,r2
   4e7f4:	d0a00c15 	stw	r2,-32720(gp)
   4e7f8:	e0bffb17 	ldw	r2,-20(fp)
   4e7fc:	e0bffc15 	stw	r2,-16(fp)
   4e800:	e0bffc17 	ldw	r2,-16(fp)
   4e804:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4e808:	e0bffd17 	ldw	r2,-12(fp)
} 
   4e80c:	e037883a 	mov	sp,fp
   4e810:	df000017 	ldw	fp,0(sp)
   4e814:	dec00104 	addi	sp,sp,4
   4e818:	f800283a 	ret

0004e81c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e81c:	defffe04 	addi	sp,sp,-8
   4e820:	dfc00115 	stw	ra,4(sp)
   4e824:	df000015 	stw	fp,0(sp)
   4e828:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e82c:	d0a00b17 	ldw	r2,-32724(gp)
   4e830:	10000326 	beq	r2,zero,4e840 <alt_get_errno+0x24>
   4e834:	d0a00b17 	ldw	r2,-32724(gp)
   4e838:	103ee83a 	callr	r2
   4e83c:	00000106 	br	4e844 <alt_get_errno+0x28>
   4e840:	d0a6d604 	addi	r2,gp,-25768
}
   4e844:	e037883a 	mov	sp,fp
   4e848:	dfc00117 	ldw	ra,4(sp)
   4e84c:	df000017 	ldw	fp,0(sp)
   4e850:	dec00204 	addi	sp,sp,8
   4e854:	f800283a 	ret

0004e858 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4e858:	defff904 	addi	sp,sp,-28
   4e85c:	dfc00615 	stw	ra,24(sp)
   4e860:	df000515 	stw	fp,20(sp)
   4e864:	df000504 	addi	fp,sp,20
   4e868:	e13ffd15 	stw	r4,-12(fp)
   4e86c:	e17ffe15 	stw	r5,-8(fp)
   4e870:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e874:	e0bffd17 	ldw	r2,-12(fp)
   4e878:	10000816 	blt	r2,zero,4e89c <write+0x44>
   4e87c:	01400304 	movi	r5,12
   4e880:	e13ffd17 	ldw	r4,-12(fp)
   4e884:	004b4740 	call	4b474 <__mulsi3>
   4e888:	1007883a 	mov	r3,r2
   4e88c:	00800174 	movhi	r2,5
   4e890:	1084ee04 	addi	r2,r2,5048
   4e894:	1885883a 	add	r2,r3,r2
   4e898:	00000106 	br	4e8a0 <write+0x48>
   4e89c:	0005883a 	mov	r2,zero
   4e8a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4e8a4:	e0bffb17 	ldw	r2,-20(fp)
   4e8a8:	10002126 	beq	r2,zero,4e930 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4e8ac:	e0bffb17 	ldw	r2,-20(fp)
   4e8b0:	10800217 	ldw	r2,8(r2)
   4e8b4:	108000cc 	andi	r2,r2,3
   4e8b8:	10001826 	beq	r2,zero,4e91c <write+0xc4>
   4e8bc:	e0bffb17 	ldw	r2,-20(fp)
   4e8c0:	10800017 	ldw	r2,0(r2)
   4e8c4:	10800617 	ldw	r2,24(r2)
   4e8c8:	10001426 	beq	r2,zero,4e91c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4e8cc:	e0bffb17 	ldw	r2,-20(fp)
   4e8d0:	10800017 	ldw	r2,0(r2)
   4e8d4:	10800617 	ldw	r2,24(r2)
   4e8d8:	e0ffff17 	ldw	r3,-4(fp)
   4e8dc:	180d883a 	mov	r6,r3
   4e8e0:	e17ffe17 	ldw	r5,-8(fp)
   4e8e4:	e13ffb17 	ldw	r4,-20(fp)
   4e8e8:	103ee83a 	callr	r2
   4e8ec:	e0bffc15 	stw	r2,-16(fp)
   4e8f0:	e0bffc17 	ldw	r2,-16(fp)
   4e8f4:	1000070e 	bge	r2,zero,4e914 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   4e8f8:	004e81c0 	call	4e81c <alt_get_errno>
   4e8fc:	1007883a 	mov	r3,r2
   4e900:	e0bffc17 	ldw	r2,-16(fp)
   4e904:	0085c83a 	sub	r2,zero,r2
   4e908:	18800015 	stw	r2,0(r3)
        return -1;
   4e90c:	00bfffc4 	movi	r2,-1
   4e910:	00000c06 	br	4e944 <write+0xec>
      }
      return rval;
   4e914:	e0bffc17 	ldw	r2,-16(fp)
   4e918:	00000a06 	br	4e944 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4e91c:	004e81c0 	call	4e81c <alt_get_errno>
   4e920:	1007883a 	mov	r3,r2
   4e924:	00800344 	movi	r2,13
   4e928:	18800015 	stw	r2,0(r3)
   4e92c:	00000406 	br	4e940 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4e930:	004e81c0 	call	4e81c <alt_get_errno>
   4e934:	1007883a 	mov	r3,r2
   4e938:	00801444 	movi	r2,81
   4e93c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4e940:	00bfffc4 	movi	r2,-1
}
   4e944:	e037883a 	mov	sp,fp
   4e948:	dfc00117 	ldw	ra,4(sp)
   4e94c:	df000017 	ldw	fp,0(sp)
   4e950:	dec00204 	addi	sp,sp,8
   4e954:	f800283a 	ret

0004e958 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4e958:	defffd04 	addi	sp,sp,-12
   4e95c:	dfc00215 	stw	ra,8(sp)
   4e960:	df000115 	stw	fp,4(sp)
   4e964:	df000104 	addi	fp,sp,4
   4e968:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4e96c:	d1600804 	addi	r5,gp,-32736
   4e970:	e13fff17 	ldw	r4,-4(fp)
   4e974:	004fab80 	call	4fab8 <alt_dev_llist_insert>
}
   4e978:	e037883a 	mov	sp,fp
   4e97c:	dfc00117 	ldw	ra,4(sp)
   4e980:	df000017 	ldw	fp,0(sp)
   4e984:	dec00204 	addi	sp,sp,8
   4e988:	f800283a 	ret

0004e98c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4e98c:	defffd04 	addi	sp,sp,-12
   4e990:	dfc00215 	stw	ra,8(sp)
   4e994:	df000115 	stw	fp,4(sp)
   4e998:	df000104 	addi	fp,sp,4
   4e99c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   4e9a0:	005031c0 	call	5031c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4e9a4:	00800044 	movi	r2,1
   4e9a8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4e9ac:	0001883a 	nop
   4e9b0:	e037883a 	mov	sp,fp
   4e9b4:	dfc00117 	ldw	ra,4(sp)
   4e9b8:	df000017 	ldw	fp,0(sp)
   4e9bc:	dec00204 	addi	sp,sp,8
   4e9c0:	f800283a 	ret

0004e9c4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4e9c4:	defffe04 	addi	sp,sp,-8
   4e9c8:	dfc00115 	stw	ra,4(sp)
   4e9cc:	df000015 	stw	fp,0(sp)
   4e9d0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   4e9d4:	01c0fa04 	movi	r7,1000
   4e9d8:	01800044 	movi	r6,1
   4e9dc:	000b883a 	mov	r5,zero
   4e9e0:	01000234 	movhi	r4,8
   4e9e4:	21040004 	addi	r4,r4,4096
   4e9e8:	004f50c0 	call	4f50c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4e9ec:	000d883a 	mov	r6,zero
   4e9f0:	000b883a 	mov	r5,zero
   4e9f4:	01000174 	movhi	r4,5
   4e9f8:	21055804 	addi	r4,r4,5472
   4e9fc:	004eb940 	call	4eb94 <altera_avalon_jtag_uart_init>
   4ea00:	01000174 	movhi	r4,5
   4ea04:	21054e04 	addi	r4,r4,5432
   4ea08:	004e9580 	call	4e958 <alt_dev_reg>
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   4ea0c:	01000174 	movhi	r4,5
   4ea10:	21096604 	addi	r4,r4,9624
   4ea14:	004e9580 	call	4e958 <alt_dev_reg>
}
   4ea18:	0001883a 	nop
   4ea1c:	e037883a 	mov	sp,fp
   4ea20:	dfc00117 	ldw	ra,4(sp)
   4ea24:	df000017 	ldw	fp,0(sp)
   4ea28:	dec00204 	addi	sp,sp,8
   4ea2c:	f800283a 	ret

0004ea30 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4ea30:	defffa04 	addi	sp,sp,-24
   4ea34:	dfc00515 	stw	ra,20(sp)
   4ea38:	df000415 	stw	fp,16(sp)
   4ea3c:	df000404 	addi	fp,sp,16
   4ea40:	e13ffd15 	stw	r4,-12(fp)
   4ea44:	e17ffe15 	stw	r5,-8(fp)
   4ea48:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4ea4c:	e0bffd17 	ldw	r2,-12(fp)
   4ea50:	10800017 	ldw	r2,0(r2)
   4ea54:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4ea58:	e0bffc17 	ldw	r2,-16(fp)
   4ea5c:	10c00a04 	addi	r3,r2,40
   4ea60:	e0bffd17 	ldw	r2,-12(fp)
   4ea64:	10800217 	ldw	r2,8(r2)
   4ea68:	100f883a 	mov	r7,r2
   4ea6c:	e1bfff17 	ldw	r6,-4(fp)
   4ea70:	e17ffe17 	ldw	r5,-8(fp)
   4ea74:	1809883a 	mov	r4,r3
   4ea78:	004f0500 	call	4f050 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4ea7c:	e037883a 	mov	sp,fp
   4ea80:	dfc00117 	ldw	ra,4(sp)
   4ea84:	df000017 	ldw	fp,0(sp)
   4ea88:	dec00204 	addi	sp,sp,8
   4ea8c:	f800283a 	ret

0004ea90 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4ea90:	defffa04 	addi	sp,sp,-24
   4ea94:	dfc00515 	stw	ra,20(sp)
   4ea98:	df000415 	stw	fp,16(sp)
   4ea9c:	df000404 	addi	fp,sp,16
   4eaa0:	e13ffd15 	stw	r4,-12(fp)
   4eaa4:	e17ffe15 	stw	r5,-8(fp)
   4eaa8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4eaac:	e0bffd17 	ldw	r2,-12(fp)
   4eab0:	10800017 	ldw	r2,0(r2)
   4eab4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4eab8:	e0bffc17 	ldw	r2,-16(fp)
   4eabc:	10c00a04 	addi	r3,r2,40
   4eac0:	e0bffd17 	ldw	r2,-12(fp)
   4eac4:	10800217 	ldw	r2,8(r2)
   4eac8:	100f883a 	mov	r7,r2
   4eacc:	e1bfff17 	ldw	r6,-4(fp)
   4ead0:	e17ffe17 	ldw	r5,-8(fp)
   4ead4:	1809883a 	mov	r4,r3
   4ead8:	004f26c0 	call	4f26c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4eadc:	e037883a 	mov	sp,fp
   4eae0:	dfc00117 	ldw	ra,4(sp)
   4eae4:	df000017 	ldw	fp,0(sp)
   4eae8:	dec00204 	addi	sp,sp,8
   4eaec:	f800283a 	ret

0004eaf0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4eaf0:	defffc04 	addi	sp,sp,-16
   4eaf4:	dfc00315 	stw	ra,12(sp)
   4eaf8:	df000215 	stw	fp,8(sp)
   4eafc:	df000204 	addi	fp,sp,8
   4eb00:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4eb04:	e0bfff17 	ldw	r2,-4(fp)
   4eb08:	10800017 	ldw	r2,0(r2)
   4eb0c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4eb10:	e0bffe17 	ldw	r2,-8(fp)
   4eb14:	10c00a04 	addi	r3,r2,40
   4eb18:	e0bfff17 	ldw	r2,-4(fp)
   4eb1c:	10800217 	ldw	r2,8(r2)
   4eb20:	100b883a 	mov	r5,r2
   4eb24:	1809883a 	mov	r4,r3
   4eb28:	004eef80 	call	4eef8 <altera_avalon_jtag_uart_close>
}
   4eb2c:	e037883a 	mov	sp,fp
   4eb30:	dfc00117 	ldw	ra,4(sp)
   4eb34:	df000017 	ldw	fp,0(sp)
   4eb38:	dec00204 	addi	sp,sp,8
   4eb3c:	f800283a 	ret

0004eb40 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4eb40:	defffa04 	addi	sp,sp,-24
   4eb44:	dfc00515 	stw	ra,20(sp)
   4eb48:	df000415 	stw	fp,16(sp)
   4eb4c:	df000404 	addi	fp,sp,16
   4eb50:	e13ffd15 	stw	r4,-12(fp)
   4eb54:	e17ffe15 	stw	r5,-8(fp)
   4eb58:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4eb5c:	e0bffd17 	ldw	r2,-12(fp)
   4eb60:	10800017 	ldw	r2,0(r2)
   4eb64:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4eb68:	e0bffc17 	ldw	r2,-16(fp)
   4eb6c:	10800a04 	addi	r2,r2,40
   4eb70:	e1bfff17 	ldw	r6,-4(fp)
   4eb74:	e17ffe17 	ldw	r5,-8(fp)
   4eb78:	1009883a 	mov	r4,r2
   4eb7c:	004ef600 	call	4ef60 <altera_avalon_jtag_uart_ioctl>
}
   4eb80:	e037883a 	mov	sp,fp
   4eb84:	dfc00117 	ldw	ra,4(sp)
   4eb88:	df000017 	ldw	fp,0(sp)
   4eb8c:	dec00204 	addi	sp,sp,8
   4eb90:	f800283a 	ret

0004eb94 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4eb94:	defffb04 	addi	sp,sp,-20
   4eb98:	dfc00415 	stw	ra,16(sp)
   4eb9c:	df000315 	stw	fp,12(sp)
   4eba0:	df000304 	addi	fp,sp,12
   4eba4:	e13ffd15 	stw	r4,-12(fp)
   4eba8:	e17ffe15 	stw	r5,-8(fp)
   4ebac:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ebb0:	e0bffd17 	ldw	r2,-12(fp)
   4ebb4:	00c00044 	movi	r3,1
   4ebb8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4ebbc:	e0bffd17 	ldw	r2,-12(fp)
   4ebc0:	10800017 	ldw	r2,0(r2)
   4ebc4:	10800104 	addi	r2,r2,4
   4ebc8:	1007883a 	mov	r3,r2
   4ebcc:	e0bffd17 	ldw	r2,-12(fp)
   4ebd0:	10800817 	ldw	r2,32(r2)
   4ebd4:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   4ebd8:	e0bfff17 	ldw	r2,-4(fp)
   4ebdc:	01800174 	movhi	r6,5
   4ebe0:	31bb1204 	addi	r6,r6,-5048
   4ebe4:	e17ffd17 	ldw	r5,-12(fp)
   4ebe8:	1009883a 	mov	r4,r2
   4ebec:	004fff80 	call	4fff8 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4ebf0:	e0bffd17 	ldw	r2,-12(fp)
   4ebf4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4ebf8:	e0bffd17 	ldw	r2,-12(fp)
   4ebfc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4ec00:	d0e6e117 	ldw	r3,-25724(gp)
   4ec04:	e1fffd17 	ldw	r7,-12(fp)
   4ec08:	01800174 	movhi	r6,5
   4ec0c:	31bb9604 	addi	r6,r6,-4520
   4ec10:	180b883a 	mov	r5,r3
   4ec14:	1009883a 	mov	r4,r2
   4ec18:	004f9300 	call	4f930 <alt_alarm_start>
   4ec1c:	1000040e 	bge	r2,zero,4ec30 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4ec20:	e0fffd17 	ldw	r3,-12(fp)
   4ec24:	00a00034 	movhi	r2,32768
   4ec28:	10bfffc4 	addi	r2,r2,-1
   4ec2c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4ec30:	0001883a 	nop
   4ec34:	e037883a 	mov	sp,fp
   4ec38:	dfc00117 	ldw	ra,4(sp)
   4ec3c:	df000017 	ldw	fp,0(sp)
   4ec40:	dec00204 	addi	sp,sp,8
   4ec44:	f800283a 	ret

0004ec48 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4ec48:	defff704 	addi	sp,sp,-36
   4ec4c:	df000815 	stw	fp,32(sp)
   4ec50:	df000804 	addi	fp,sp,32
   4ec54:	e13ffe15 	stw	r4,-8(fp)
   4ec58:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4ec5c:	e0bffe17 	ldw	r2,-8(fp)
   4ec60:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
   4ec64:	e0bffa17 	ldw	r2,-24(fp)
   4ec68:	10800017 	ldw	r2,0(r2)
   4ec6c:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4ec70:	e0bffb17 	ldw	r2,-20(fp)
   4ec74:	10800104 	addi	r2,r2,4
   4ec78:	10800037 	ldwio	r2,0(r2)
   4ec7c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4ec80:	e0bffc17 	ldw	r2,-16(fp)
   4ec84:	1080c00c 	andi	r2,r2,768
   4ec88:	10006d26 	beq	r2,zero,4ee40 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4ec8c:	e0bffc17 	ldw	r2,-16(fp)
   4ec90:	1080400c 	andi	r2,r2,256
   4ec94:	10003526 	beq	r2,zero,4ed6c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4ec98:	00800074 	movhi	r2,1
   4ec9c:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4eca0:	e0bffa17 	ldw	r2,-24(fp)
   4eca4:	10800a17 	ldw	r2,40(r2)
   4eca8:	10800044 	addi	r2,r2,1
   4ecac:	1081ffcc 	andi	r2,r2,2047
   4ecb0:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
   4ecb4:	e0bffa17 	ldw	r2,-24(fp)
   4ecb8:	10c00b17 	ldw	r3,44(r2)
   4ecbc:	e0bffd17 	ldw	r2,-12(fp)
   4ecc0:	18801526 	beq	r3,r2,4ed18 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4ecc4:	e0bffb17 	ldw	r2,-20(fp)
   4ecc8:	10800037 	ldwio	r2,0(r2)
   4eccc:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4ecd0:	e0bff817 	ldw	r2,-32(fp)
   4ecd4:	10a0000c 	andi	r2,r2,32768
   4ecd8:	10001126 	beq	r2,zero,4ed20 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4ecdc:	e0bffa17 	ldw	r2,-24(fp)
   4ece0:	10800a17 	ldw	r2,40(r2)
   4ece4:	e0fff817 	ldw	r3,-32(fp)
   4ece8:	1809883a 	mov	r4,r3
   4ecec:	e0fffa17 	ldw	r3,-24(fp)
   4ecf0:	1885883a 	add	r2,r3,r2
   4ecf4:	10800e04 	addi	r2,r2,56
   4ecf8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4ecfc:	e0bffa17 	ldw	r2,-24(fp)
   4ed00:	10800a17 	ldw	r2,40(r2)
   4ed04:	10800044 	addi	r2,r2,1
   4ed08:	10c1ffcc 	andi	r3,r2,2047
   4ed0c:	e0bffa17 	ldw	r2,-24(fp)
   4ed10:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4ed14:	003fe206 	br	4eca0 <__alt_data_end+0xfffe2d80>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4ed18:	0001883a 	nop
   4ed1c:	00000106 	br	4ed24 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4ed20:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4ed24:	e0bff817 	ldw	r2,-32(fp)
   4ed28:	10bfffec 	andhi	r2,r2,65535
   4ed2c:	10000f26 	beq	r2,zero,4ed6c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ed30:	e0bffa17 	ldw	r2,-24(fp)
   4ed34:	10c00817 	ldw	r3,32(r2)
   4ed38:	00bfff84 	movi	r2,-2
   4ed3c:	1886703a 	and	r3,r3,r2
   4ed40:	e0bffa17 	ldw	r2,-24(fp)
   4ed44:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4ed48:	e0bffb17 	ldw	r2,-20(fp)
   4ed4c:	10800104 	addi	r2,r2,4
   4ed50:	1007883a 	mov	r3,r2
   4ed54:	e0bffa17 	ldw	r2,-24(fp)
   4ed58:	10800817 	ldw	r2,32(r2)
   4ed5c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4ed60:	e0bffb17 	ldw	r2,-20(fp)
   4ed64:	10800104 	addi	r2,r2,4
   4ed68:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4ed6c:	e0bffc17 	ldw	r2,-16(fp)
   4ed70:	1080800c 	andi	r2,r2,512
   4ed74:	103fbe26 	beq	r2,zero,4ec70 <__alt_data_end+0xfffe2d50>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4ed78:	e0bffc17 	ldw	r2,-16(fp)
   4ed7c:	1004d43a 	srli	r2,r2,16
   4ed80:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4ed84:	00001406 	br	4edd8 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4ed88:	e0bffb17 	ldw	r2,-20(fp)
   4ed8c:	e0fffa17 	ldw	r3,-24(fp)
   4ed90:	18c00d17 	ldw	r3,52(r3)
   4ed94:	e13ffa17 	ldw	r4,-24(fp)
   4ed98:	20c7883a 	add	r3,r4,r3
   4ed9c:	18c20e04 	addi	r3,r3,2104
   4eda0:	18c00003 	ldbu	r3,0(r3)
   4eda4:	18c03fcc 	andi	r3,r3,255
   4eda8:	18c0201c 	xori	r3,r3,128
   4edac:	18ffe004 	addi	r3,r3,-128
   4edb0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4edb4:	e0bffa17 	ldw	r2,-24(fp)
   4edb8:	10800d17 	ldw	r2,52(r2)
   4edbc:	10800044 	addi	r2,r2,1
   4edc0:	10c1ffcc 	andi	r3,r2,2047
   4edc4:	e0bffa17 	ldw	r2,-24(fp)
   4edc8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4edcc:	e0bff917 	ldw	r2,-28(fp)
   4edd0:	10bfffc4 	addi	r2,r2,-1
   4edd4:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4edd8:	e0bff917 	ldw	r2,-28(fp)
   4eddc:	10000526 	beq	r2,zero,4edf4 <altera_avalon_jtag_uart_irq+0x1ac>
   4ede0:	e0bffa17 	ldw	r2,-24(fp)
   4ede4:	10c00d17 	ldw	r3,52(r2)
   4ede8:	e0bffa17 	ldw	r2,-24(fp)
   4edec:	10800c17 	ldw	r2,48(r2)
   4edf0:	18bfe51e 	bne	r3,r2,4ed88 <__alt_data_end+0xfffe2e68>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4edf4:	e0bff917 	ldw	r2,-28(fp)
   4edf8:	103f9d26 	beq	r2,zero,4ec70 <__alt_data_end+0xfffe2d50>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4edfc:	e0bffa17 	ldw	r2,-24(fp)
   4ee00:	10c00817 	ldw	r3,32(r2)
   4ee04:	00bfff44 	movi	r2,-3
   4ee08:	1886703a 	and	r3,r3,r2
   4ee0c:	e0bffa17 	ldw	r2,-24(fp)
   4ee10:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4ee14:	e0bffa17 	ldw	r2,-24(fp)
   4ee18:	10800017 	ldw	r2,0(r2)
   4ee1c:	10800104 	addi	r2,r2,4
   4ee20:	1007883a 	mov	r3,r2
   4ee24:	e0bffa17 	ldw	r2,-24(fp)
   4ee28:	10800817 	ldw	r2,32(r2)
   4ee2c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4ee30:	e0bffb17 	ldw	r2,-20(fp)
   4ee34:	10800104 	addi	r2,r2,4
   4ee38:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4ee3c:	003f8c06 	br	4ec70 <__alt_data_end+0xfffe2d50>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4ee40:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4ee44:	0001883a 	nop
   4ee48:	e037883a 	mov	sp,fp
   4ee4c:	df000017 	ldw	fp,0(sp)
   4ee50:	dec00104 	addi	sp,sp,4
   4ee54:	f800283a 	ret

0004ee58 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4ee58:	defff804 	addi	sp,sp,-32
   4ee5c:	df000715 	stw	fp,28(sp)
   4ee60:	df000704 	addi	fp,sp,28
   4ee64:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4ee68:	e0bffb17 	ldw	r2,-20(fp)
   4ee6c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4ee70:	e0bff917 	ldw	r2,-28(fp)
   4ee74:	10800017 	ldw	r2,0(r2)
   4ee78:	10800104 	addi	r2,r2,4
   4ee7c:	10800037 	ldwio	r2,0(r2)
   4ee80:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4ee84:	e0bffa17 	ldw	r2,-24(fp)
   4ee88:	1081000c 	andi	r2,r2,1024
   4ee8c:	10000b26 	beq	r2,zero,4eebc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4ee90:	e0bff917 	ldw	r2,-28(fp)
   4ee94:	10800017 	ldw	r2,0(r2)
   4ee98:	10800104 	addi	r2,r2,4
   4ee9c:	1007883a 	mov	r3,r2
   4eea0:	e0bff917 	ldw	r2,-28(fp)
   4eea4:	10800817 	ldw	r2,32(r2)
   4eea8:	10810014 	ori	r2,r2,1024
   4eeac:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4eeb0:	e0bff917 	ldw	r2,-28(fp)
   4eeb4:	10000915 	stw	zero,36(r2)
   4eeb8:	00000a06 	br	4eee4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4eebc:	e0bff917 	ldw	r2,-28(fp)
   4eec0:	10c00917 	ldw	r3,36(r2)
   4eec4:	00a00034 	movhi	r2,32768
   4eec8:	10bfff04 	addi	r2,r2,-4
   4eecc:	10c00536 	bltu	r2,r3,4eee4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4eed0:	e0bff917 	ldw	r2,-28(fp)
   4eed4:	10800917 	ldw	r2,36(r2)
   4eed8:	10c00044 	addi	r3,r2,1
   4eedc:	e0bff917 	ldw	r2,-28(fp)
   4eee0:	10c00915 	stw	r3,36(r2)
   4eee4:	d0a6e117 	ldw	r2,-25724(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4eee8:	e037883a 	mov	sp,fp
   4eeec:	df000017 	ldw	fp,0(sp)
   4eef0:	dec00104 	addi	sp,sp,4
   4eef4:	f800283a 	ret

0004eef8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4eef8:	defffd04 	addi	sp,sp,-12
   4eefc:	df000215 	stw	fp,8(sp)
   4ef00:	df000204 	addi	fp,sp,8
   4ef04:	e13ffe15 	stw	r4,-8(fp)
   4ef08:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4ef0c:	00000506 	br	4ef24 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4ef10:	e0bfff17 	ldw	r2,-4(fp)
   4ef14:	1090000c 	andi	r2,r2,16384
   4ef18:	10000226 	beq	r2,zero,4ef24 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4ef1c:	00bffd44 	movi	r2,-11
   4ef20:	00000b06 	br	4ef50 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4ef24:	e0bffe17 	ldw	r2,-8(fp)
   4ef28:	10c00d17 	ldw	r3,52(r2)
   4ef2c:	e0bffe17 	ldw	r2,-8(fp)
   4ef30:	10800c17 	ldw	r2,48(r2)
   4ef34:	18800526 	beq	r3,r2,4ef4c <altera_avalon_jtag_uart_close+0x54>
   4ef38:	e0bffe17 	ldw	r2,-8(fp)
   4ef3c:	10c00917 	ldw	r3,36(r2)
   4ef40:	e0bffe17 	ldw	r2,-8(fp)
   4ef44:	10800117 	ldw	r2,4(r2)
   4ef48:	18bff136 	bltu	r3,r2,4ef10 <__alt_data_end+0xfffe2ff0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4ef4c:	0005883a 	mov	r2,zero
}
   4ef50:	e037883a 	mov	sp,fp
   4ef54:	df000017 	ldw	fp,0(sp)
   4ef58:	dec00104 	addi	sp,sp,4
   4ef5c:	f800283a 	ret

0004ef60 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4ef60:	defffa04 	addi	sp,sp,-24
   4ef64:	df000515 	stw	fp,20(sp)
   4ef68:	df000504 	addi	fp,sp,20
   4ef6c:	e13ffd15 	stw	r4,-12(fp)
   4ef70:	e17ffe15 	stw	r5,-8(fp)
   4ef74:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4ef78:	00bff9c4 	movi	r2,-25
   4ef7c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4ef80:	e0bffe17 	ldw	r2,-8(fp)
   4ef84:	10da8060 	cmpeqi	r3,r2,27137
   4ef88:	1800031e 	bne	r3,zero,4ef98 <altera_avalon_jtag_uart_ioctl+0x38>
   4ef8c:	109a80a0 	cmpeqi	r2,r2,27138
   4ef90:	1000181e 	bne	r2,zero,4eff4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4ef94:	00002906 	br	4f03c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4ef98:	e0bffd17 	ldw	r2,-12(fp)
   4ef9c:	10c00117 	ldw	r3,4(r2)
   4efa0:	00a00034 	movhi	r2,32768
   4efa4:	10bfffc4 	addi	r2,r2,-1
   4efa8:	18802126 	beq	r3,r2,4f030 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4efac:	e0bfff17 	ldw	r2,-4(fp)
   4efb0:	10800017 	ldw	r2,0(r2)
   4efb4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4efb8:	e0bffc17 	ldw	r2,-16(fp)
   4efbc:	10800090 	cmplti	r2,r2,2
   4efc0:	1000061e 	bne	r2,zero,4efdc <altera_avalon_jtag_uart_ioctl+0x7c>
   4efc4:	e0fffc17 	ldw	r3,-16(fp)
   4efc8:	00a00034 	movhi	r2,32768
   4efcc:	10bfffc4 	addi	r2,r2,-1
   4efd0:	18800226 	beq	r3,r2,4efdc <altera_avalon_jtag_uart_ioctl+0x7c>
   4efd4:	e0bffc17 	ldw	r2,-16(fp)
   4efd8:	00000206 	br	4efe4 <altera_avalon_jtag_uart_ioctl+0x84>
   4efdc:	00a00034 	movhi	r2,32768
   4efe0:	10bfff84 	addi	r2,r2,-2
   4efe4:	e0fffd17 	ldw	r3,-12(fp)
   4efe8:	18800115 	stw	r2,4(r3)
      rc = 0;
   4efec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4eff0:	00000f06 	br	4f030 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4eff4:	e0bffd17 	ldw	r2,-12(fp)
   4eff8:	10c00117 	ldw	r3,4(r2)
   4effc:	00a00034 	movhi	r2,32768
   4f000:	10bfffc4 	addi	r2,r2,-1
   4f004:	18800c26 	beq	r3,r2,4f038 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4f008:	e0bffd17 	ldw	r2,-12(fp)
   4f00c:	10c00917 	ldw	r3,36(r2)
   4f010:	e0bffd17 	ldw	r2,-12(fp)
   4f014:	10800117 	ldw	r2,4(r2)
   4f018:	1885803a 	cmpltu	r2,r3,r2
   4f01c:	10c03fcc 	andi	r3,r2,255
   4f020:	e0bfff17 	ldw	r2,-4(fp)
   4f024:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4f028:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4f02c:	00000206 	br	4f038 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4f030:	0001883a 	nop
   4f034:	00000106 	br	4f03c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4f038:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4f03c:	e0bffb17 	ldw	r2,-20(fp)
}
   4f040:	e037883a 	mov	sp,fp
   4f044:	df000017 	ldw	fp,0(sp)
   4f048:	dec00104 	addi	sp,sp,4
   4f04c:	f800283a 	ret

0004f050 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4f050:	defff304 	addi	sp,sp,-52
   4f054:	dfc00c15 	stw	ra,48(sp)
   4f058:	df000b15 	stw	fp,44(sp)
   4f05c:	df000b04 	addi	fp,sp,44
   4f060:	e13ffc15 	stw	r4,-16(fp)
   4f064:	e17ffd15 	stw	r5,-12(fp)
   4f068:	e1bffe15 	stw	r6,-8(fp)
   4f06c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4f070:	e0bffd17 	ldw	r2,-12(fp)
   4f074:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f078:	00004706 	br	4f198 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4f07c:	e0bffc17 	ldw	r2,-16(fp)
   4f080:	10800a17 	ldw	r2,40(r2)
   4f084:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4f088:	e0bffc17 	ldw	r2,-16(fp)
   4f08c:	10800b17 	ldw	r2,44(r2)
   4f090:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4f094:	e0fff717 	ldw	r3,-36(fp)
   4f098:	e0bff817 	ldw	r2,-32(fp)
   4f09c:	18800536 	bltu	r3,r2,4f0b4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4f0a0:	e0fff717 	ldw	r3,-36(fp)
   4f0a4:	e0bff817 	ldw	r2,-32(fp)
   4f0a8:	1885c83a 	sub	r2,r3,r2
   4f0ac:	e0bff615 	stw	r2,-40(fp)
   4f0b0:	00000406 	br	4f0c4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4f0b4:	00c20004 	movi	r3,2048
   4f0b8:	e0bff817 	ldw	r2,-32(fp)
   4f0bc:	1885c83a 	sub	r2,r3,r2
   4f0c0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4f0c4:	e0bff617 	ldw	r2,-40(fp)
   4f0c8:	10001e26 	beq	r2,zero,4f144 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4f0cc:	e0fffe17 	ldw	r3,-8(fp)
   4f0d0:	e0bff617 	ldw	r2,-40(fp)
   4f0d4:	1880022e 	bgeu	r3,r2,4f0e0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4f0d8:	e0bffe17 	ldw	r2,-8(fp)
   4f0dc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4f0e0:	e0bffc17 	ldw	r2,-16(fp)
   4f0e4:	10c00e04 	addi	r3,r2,56
   4f0e8:	e0bff817 	ldw	r2,-32(fp)
   4f0ec:	1885883a 	add	r2,r3,r2
   4f0f0:	e1bff617 	ldw	r6,-40(fp)
   4f0f4:	100b883a 	mov	r5,r2
   4f0f8:	e13ff517 	ldw	r4,-44(fp)
   4f0fc:	0046f740 	call	46f74 <memcpy>
      ptr   += n;
   4f100:	e0fff517 	ldw	r3,-44(fp)
   4f104:	e0bff617 	ldw	r2,-40(fp)
   4f108:	1885883a 	add	r2,r3,r2
   4f10c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4f110:	e0fffe17 	ldw	r3,-8(fp)
   4f114:	e0bff617 	ldw	r2,-40(fp)
   4f118:	1885c83a 	sub	r2,r3,r2
   4f11c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f120:	e0fff817 	ldw	r3,-32(fp)
   4f124:	e0bff617 	ldw	r2,-40(fp)
   4f128:	1885883a 	add	r2,r3,r2
   4f12c:	10c1ffcc 	andi	r3,r2,2047
   4f130:	e0bffc17 	ldw	r2,-16(fp)
   4f134:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4f138:	e0bffe17 	ldw	r2,-8(fp)
   4f13c:	00bfcf16 	blt	zero,r2,4f07c <__alt_data_end+0xfffe315c>
   4f140:	00000106 	br	4f148 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4f144:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4f148:	e0fff517 	ldw	r3,-44(fp)
   4f14c:	e0bffd17 	ldw	r2,-12(fp)
   4f150:	1880141e 	bne	r3,r2,4f1a4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4f154:	e0bfff17 	ldw	r2,-4(fp)
   4f158:	1090000c 	andi	r2,r2,16384
   4f15c:	1000131e 	bne	r2,zero,4f1ac <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4f160:	0001883a 	nop
   4f164:	e0bffc17 	ldw	r2,-16(fp)
   4f168:	10c00a17 	ldw	r3,40(r2)
   4f16c:	e0bff717 	ldw	r2,-36(fp)
   4f170:	1880051e 	bne	r3,r2,4f188 <altera_avalon_jtag_uart_read+0x138>
   4f174:	e0bffc17 	ldw	r2,-16(fp)
   4f178:	10c00917 	ldw	r3,36(r2)
   4f17c:	e0bffc17 	ldw	r2,-16(fp)
   4f180:	10800117 	ldw	r2,4(r2)
   4f184:	18bff736 	bltu	r3,r2,4f164 <__alt_data_end+0xfffe3244>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4f188:	e0bffc17 	ldw	r2,-16(fp)
   4f18c:	10c00a17 	ldw	r3,40(r2)
   4f190:	e0bff717 	ldw	r2,-36(fp)
   4f194:	18800726 	beq	r3,r2,4f1b4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4f198:	e0bffe17 	ldw	r2,-8(fp)
   4f19c:	00bfb716 	blt	zero,r2,4f07c <__alt_data_end+0xfffe315c>
   4f1a0:	00000506 	br	4f1b8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4f1a4:	0001883a 	nop
   4f1a8:	00000306 	br	4f1b8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4f1ac:	0001883a 	nop
   4f1b0:	00000106 	br	4f1b8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4f1b4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4f1b8:	e0fff517 	ldw	r3,-44(fp)
   4f1bc:	e0bffd17 	ldw	r2,-12(fp)
   4f1c0:	18801826 	beq	r3,r2,4f224 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f1c4:	0005303a 	rdctl	r2,status
   4f1c8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f1cc:	e0fffb17 	ldw	r3,-20(fp)
   4f1d0:	00bfff84 	movi	r2,-2
   4f1d4:	1884703a 	and	r2,r3,r2
   4f1d8:	1001703a 	wrctl	status,r2
  
  return context;
   4f1dc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4f1e0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4f1e4:	e0bffc17 	ldw	r2,-16(fp)
   4f1e8:	10800817 	ldw	r2,32(r2)
   4f1ec:	10c00054 	ori	r3,r2,1
   4f1f0:	e0bffc17 	ldw	r2,-16(fp)
   4f1f4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f1f8:	e0bffc17 	ldw	r2,-16(fp)
   4f1fc:	10800017 	ldw	r2,0(r2)
   4f200:	10800104 	addi	r2,r2,4
   4f204:	1007883a 	mov	r3,r2
   4f208:	e0bffc17 	ldw	r2,-16(fp)
   4f20c:	10800817 	ldw	r2,32(r2)
   4f210:	18800035 	stwio	r2,0(r3)
   4f214:	e0bffa17 	ldw	r2,-24(fp)
   4f218:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f21c:	e0bff917 	ldw	r2,-28(fp)
   4f220:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4f224:	e0fff517 	ldw	r3,-44(fp)
   4f228:	e0bffd17 	ldw	r2,-12(fp)
   4f22c:	18800426 	beq	r3,r2,4f240 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4f230:	e0fff517 	ldw	r3,-44(fp)
   4f234:	e0bffd17 	ldw	r2,-12(fp)
   4f238:	1885c83a 	sub	r2,r3,r2
   4f23c:	00000606 	br	4f258 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4f240:	e0bfff17 	ldw	r2,-4(fp)
   4f244:	1090000c 	andi	r2,r2,16384
   4f248:	10000226 	beq	r2,zero,4f254 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4f24c:	00bffd44 	movi	r2,-11
   4f250:	00000106 	br	4f258 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4f254:	00bffec4 	movi	r2,-5
}
   4f258:	e037883a 	mov	sp,fp
   4f25c:	dfc00117 	ldw	ra,4(sp)
   4f260:	df000017 	ldw	fp,0(sp)
   4f264:	dec00204 	addi	sp,sp,8
   4f268:	f800283a 	ret

0004f26c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4f26c:	defff304 	addi	sp,sp,-52
   4f270:	dfc00c15 	stw	ra,48(sp)
   4f274:	df000b15 	stw	fp,44(sp)
   4f278:	df000b04 	addi	fp,sp,44
   4f27c:	e13ffc15 	stw	r4,-16(fp)
   4f280:	e17ffd15 	stw	r5,-12(fp)
   4f284:	e1bffe15 	stw	r6,-8(fp)
   4f288:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4f28c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4f290:	e0bffd17 	ldw	r2,-12(fp)
   4f294:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4f298:	00003706 	br	4f378 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4f29c:	e0bffc17 	ldw	r2,-16(fp)
   4f2a0:	10800c17 	ldw	r2,48(r2)
   4f2a4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4f2a8:	e0bffc17 	ldw	r2,-16(fp)
   4f2ac:	10800d17 	ldw	r2,52(r2)
   4f2b0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4f2b4:	e0fff917 	ldw	r3,-28(fp)
   4f2b8:	e0bff517 	ldw	r2,-44(fp)
   4f2bc:	1880062e 	bgeu	r3,r2,4f2d8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4f2c0:	e0fff517 	ldw	r3,-44(fp)
   4f2c4:	e0bff917 	ldw	r2,-28(fp)
   4f2c8:	1885c83a 	sub	r2,r3,r2
   4f2cc:	10bfffc4 	addi	r2,r2,-1
   4f2d0:	e0bff615 	stw	r2,-40(fp)
   4f2d4:	00000b06 	br	4f304 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4f2d8:	e0bff517 	ldw	r2,-44(fp)
   4f2dc:	10000526 	beq	r2,zero,4f2f4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4f2e0:	00c20004 	movi	r3,2048
   4f2e4:	e0bff917 	ldw	r2,-28(fp)
   4f2e8:	1885c83a 	sub	r2,r3,r2
   4f2ec:	e0bff615 	stw	r2,-40(fp)
   4f2f0:	00000406 	br	4f304 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4f2f4:	00c1ffc4 	movi	r3,2047
   4f2f8:	e0bff917 	ldw	r2,-28(fp)
   4f2fc:	1885c83a 	sub	r2,r3,r2
   4f300:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4f304:	e0bff617 	ldw	r2,-40(fp)
   4f308:	10001e26 	beq	r2,zero,4f384 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4f30c:	e0fffe17 	ldw	r3,-8(fp)
   4f310:	e0bff617 	ldw	r2,-40(fp)
   4f314:	1880022e 	bgeu	r3,r2,4f320 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4f318:	e0bffe17 	ldw	r2,-8(fp)
   4f31c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4f320:	e0bffc17 	ldw	r2,-16(fp)
   4f324:	10c20e04 	addi	r3,r2,2104
   4f328:	e0bff917 	ldw	r2,-28(fp)
   4f32c:	1885883a 	add	r2,r3,r2
   4f330:	e1bff617 	ldw	r6,-40(fp)
   4f334:	e17ffd17 	ldw	r5,-12(fp)
   4f338:	1009883a 	mov	r4,r2
   4f33c:	0046f740 	call	46f74 <memcpy>
      ptr   += n;
   4f340:	e0fffd17 	ldw	r3,-12(fp)
   4f344:	e0bff617 	ldw	r2,-40(fp)
   4f348:	1885883a 	add	r2,r3,r2
   4f34c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4f350:	e0fffe17 	ldw	r3,-8(fp)
   4f354:	e0bff617 	ldw	r2,-40(fp)
   4f358:	1885c83a 	sub	r2,r3,r2
   4f35c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4f360:	e0fff917 	ldw	r3,-28(fp)
   4f364:	e0bff617 	ldw	r2,-40(fp)
   4f368:	1885883a 	add	r2,r3,r2
   4f36c:	10c1ffcc 	andi	r3,r2,2047
   4f370:	e0bffc17 	ldw	r2,-16(fp)
   4f374:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4f378:	e0bffe17 	ldw	r2,-8(fp)
   4f37c:	00bfc716 	blt	zero,r2,4f29c <__alt_data_end+0xfffe337c>
   4f380:	00000106 	br	4f388 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4f384:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f388:	0005303a 	rdctl	r2,status
   4f38c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f390:	e0fffb17 	ldw	r3,-20(fp)
   4f394:	00bfff84 	movi	r2,-2
   4f398:	1884703a 	and	r2,r3,r2
   4f39c:	1001703a 	wrctl	status,r2
  
  return context;
   4f3a0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4f3a4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4f3a8:	e0bffc17 	ldw	r2,-16(fp)
   4f3ac:	10800817 	ldw	r2,32(r2)
   4f3b0:	10c00094 	ori	r3,r2,2
   4f3b4:	e0bffc17 	ldw	r2,-16(fp)
   4f3b8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4f3bc:	e0bffc17 	ldw	r2,-16(fp)
   4f3c0:	10800017 	ldw	r2,0(r2)
   4f3c4:	10800104 	addi	r2,r2,4
   4f3c8:	1007883a 	mov	r3,r2
   4f3cc:	e0bffc17 	ldw	r2,-16(fp)
   4f3d0:	10800817 	ldw	r2,32(r2)
   4f3d4:	18800035 	stwio	r2,0(r3)
   4f3d8:	e0bffa17 	ldw	r2,-24(fp)
   4f3dc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f3e0:	e0bff817 	ldw	r2,-32(fp)
   4f3e4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4f3e8:	e0bffe17 	ldw	r2,-8(fp)
   4f3ec:	0080100e 	bge	zero,r2,4f430 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4f3f0:	e0bfff17 	ldw	r2,-4(fp)
   4f3f4:	1090000c 	andi	r2,r2,16384
   4f3f8:	1000101e 	bne	r2,zero,4f43c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4f3fc:	0001883a 	nop
   4f400:	e0bffc17 	ldw	r2,-16(fp)
   4f404:	10c00d17 	ldw	r3,52(r2)
   4f408:	e0bff517 	ldw	r2,-44(fp)
   4f40c:	1880051e 	bne	r3,r2,4f424 <altera_avalon_jtag_uart_write+0x1b8>
   4f410:	e0bffc17 	ldw	r2,-16(fp)
   4f414:	10c00917 	ldw	r3,36(r2)
   4f418:	e0bffc17 	ldw	r2,-16(fp)
   4f41c:	10800117 	ldw	r2,4(r2)
   4f420:	18bff736 	bltu	r3,r2,4f400 <__alt_data_end+0xfffe34e0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4f424:	e0bffc17 	ldw	r2,-16(fp)
   4f428:	10800917 	ldw	r2,36(r2)
   4f42c:	1000051e 	bne	r2,zero,4f444 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4f430:	e0bffe17 	ldw	r2,-8(fp)
   4f434:	00bfd016 	blt	zero,r2,4f378 <__alt_data_end+0xfffe3458>
   4f438:	00000306 	br	4f448 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4f43c:	0001883a 	nop
   4f440:	00000106 	br	4f448 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4f444:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4f448:	e0fffd17 	ldw	r3,-12(fp)
   4f44c:	e0bff717 	ldw	r2,-36(fp)
   4f450:	18800426 	beq	r3,r2,4f464 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4f454:	e0fffd17 	ldw	r3,-12(fp)
   4f458:	e0bff717 	ldw	r2,-36(fp)
   4f45c:	1885c83a 	sub	r2,r3,r2
   4f460:	00000606 	br	4f47c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4f464:	e0bfff17 	ldw	r2,-4(fp)
   4f468:	1090000c 	andi	r2,r2,16384
   4f46c:	10000226 	beq	r2,zero,4f478 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4f470:	00bffd44 	movi	r2,-11
   4f474:	00000106 	br	4f47c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4f478:	00bffec4 	movi	r2,-5
}
   4f47c:	e037883a 	mov	sp,fp
   4f480:	dfc00117 	ldw	ra,4(sp)
   4f484:	df000017 	ldw	fp,0(sp)
   4f488:	dec00204 	addi	sp,sp,8
   4f48c:	f800283a 	ret

0004f490 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   4f490:	defff904 	addi	sp,sp,-28
   4f494:	dfc00615 	stw	ra,24(sp)
   4f498:	df000515 	stw	fp,20(sp)
   4f49c:	df000504 	addi	fp,sp,20
   4f4a0:	e13ffe15 	stw	r4,-8(fp)
   4f4a4:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   4f4a8:	0007883a 	mov	r3,zero
   4f4ac:	e0bffe17 	ldw	r2,-8(fp)
   4f4b0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   4f4b4:	e0bffe17 	ldw	r2,-8(fp)
   4f4b8:	10800104 	addi	r2,r2,4
   4f4bc:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f4c0:	0005303a 	rdctl	r2,status
   4f4c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f4c8:	e0fffc17 	ldw	r3,-16(fp)
   4f4cc:	00bfff84 	movi	r2,-2
   4f4d0:	1884703a 	and	r2,r3,r2
   4f4d4:	1001703a 	wrctl	status,r2
  
  return context;
   4f4d8:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   4f4dc:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
   4f4e0:	00502140 	call	50214 <alt_tick>
   4f4e4:	e0bffb17 	ldw	r2,-20(fp)
   4f4e8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f4ec:	e0bffd17 	ldw	r2,-12(fp)
   4f4f0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   4f4f4:	0001883a 	nop
   4f4f8:	e037883a 	mov	sp,fp
   4f4fc:	dfc00117 	ldw	ra,4(sp)
   4f500:	df000017 	ldw	fp,0(sp)
   4f504:	dec00204 	addi	sp,sp,8
   4f508:	f800283a 	ret

0004f50c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   4f50c:	defff904 	addi	sp,sp,-28
   4f510:	dfc00615 	stw	ra,24(sp)
   4f514:	df000515 	stw	fp,20(sp)
   4f518:	df000504 	addi	fp,sp,20
   4f51c:	e13ffc15 	stw	r4,-16(fp)
   4f520:	e17ffd15 	stw	r5,-12(fp)
   4f524:	e1bffe15 	stw	r6,-8(fp)
   4f528:	e1ffff15 	stw	r7,-4(fp)
   4f52c:	e0bfff17 	ldw	r2,-4(fp)
   4f530:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   4f534:	d0a6e117 	ldw	r2,-25724(gp)
   4f538:	1000021e 	bne	r2,zero,4f544 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   4f53c:	e0bffb17 	ldw	r2,-20(fp)
   4f540:	d0a6e115 	stw	r2,-25724(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   4f544:	e0bffc17 	ldw	r2,-16(fp)
   4f548:	10800104 	addi	r2,r2,4
   4f54c:	00c001c4 	movi	r3,7
   4f550:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   4f554:	01800174 	movhi	r6,5
   4f558:	31bd2404 	addi	r6,r6,-2928
   4f55c:	e17ffc17 	ldw	r5,-16(fp)
   4f560:	e13ffe17 	ldw	r4,-8(fp)
   4f564:	004fff80 	call	4fff8 <alt_irq_register>
#endif  
}
   4f568:	0001883a 	nop
   4f56c:	e037883a 	mov	sp,fp
   4f570:	dfc00117 	ldw	ra,4(sp)
   4f574:	df000017 	ldw	fp,0(sp)
   4f578:	dec00204 	addi	sp,sp,8
   4f57c:	f800283a 	ret

0004f580 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   4f580:	defffc04 	addi	sp,sp,-16
   4f584:	dfc00315 	stw	ra,12(sp)
   4f588:	df000215 	stw	fp,8(sp)
   4f58c:	df000204 	addi	fp,sp,8
   4f590:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   4f594:	d1600804 	addi	r5,gp,-32736
   4f598:	e13fff17 	ldw	r4,-4(fp)
   4f59c:	004fc1c0 	call	4fc1c <alt_find_dev>
   4f5a0:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   4f5a4:	e0bffe17 	ldw	r2,-8(fp)
}
   4f5a8:	e037883a 	mov	sp,fp
   4f5ac:	dfc00117 	ldw	ra,4(sp)
   4f5b0:	df000017 	ldw	fp,0(sp)
   4f5b4:	dec00204 	addi	sp,sp,8
   4f5b8:	f800283a 	ret

0004f5bc <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   4f5bc:	defffd04 	addi	sp,sp,-12
   4f5c0:	df000215 	stw	fp,8(sp)
   4f5c4:	df000204 	addi	fp,sp,8
   4f5c8:	e13ffe15 	stw	r4,-8(fp)
   4f5cc:	e17fff15 	stw	r5,-4(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   4f5d0:	e0bffe17 	ldw	r2,-8(fp)
   4f5d4:	10800a17 	ldw	r2,40(r2)
   4f5d8:	10800023 	ldbuio	r2,0(r2)
   4f5dc:	10803fcc 	andi	r2,r2,255
   4f5e0:	1007883a 	mov	r3,r2
   4f5e4:	e0bfff17 	ldw	r2,-4(fp)
   4f5e8:	10c00005 	stb	r3,0(r2)

	return 0;
   4f5ec:	0005883a 	mov	r2,zero
}
   4f5f0:	e037883a 	mov	sp,fp
   4f5f4:	df000017 	ldw	fp,0(sp)
   4f5f8:	dec00104 	addi	sp,sp,4
   4f5fc:	f800283a 	ret

0004f600 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   4f600:	defffc04 	addi	sp,sp,-16
   4f604:	df000315 	stw	fp,12(sp)
   4f608:	df000304 	addi	fp,sp,12
   4f60c:	e13ffd15 	stw	r4,-12(fp)
   4f610:	2805883a 	mov	r2,r5
   4f614:	e1bfff15 	stw	r6,-4(fp)
   4f618:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f61c:	e0bffd17 	ldw	r2,-12(fp)
   4f620:	10800a17 	ldw	r2,40(r2)
   4f624:	1007883a 	mov	r3,r2
   4f628:	e0bffe03 	ldbu	r2,-8(fp)
   4f62c:	10800fcc 	andi	r2,r2,63
   4f630:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4f634:	e0bffd17 	ldw	r2,-12(fp)
   4f638:	10800a17 	ldw	r2,40(r2)
   4f63c:	10800044 	addi	r2,r2,1
   4f640:	10800023 	ldbuio	r2,0(r2)
   4f644:	10803fcc 	andi	r2,r2,255
   4f648:	1007883a 	mov	r3,r2
   4f64c:	e0bfff17 	ldw	r2,-4(fp)
   4f650:	10c00005 	stb	r3,0(r2)

	return 0;
   4f654:	0005883a 	mov	r2,zero
}
   4f658:	e037883a 	mov	sp,fp
   4f65c:	df000017 	ldw	fp,0(sp)
   4f660:	dec00104 	addi	sp,sp,4
   4f664:	f800283a 	ret

0004f668 <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   4f668:	defffc04 	addi	sp,sp,-16
   4f66c:	df000315 	stw	fp,12(sp)
   4f670:	df000304 	addi	fp,sp,12
   4f674:	e13ffd15 	stw	r4,-12(fp)
   4f678:	2807883a 	mov	r3,r5
   4f67c:	3005883a 	mov	r2,r6
   4f680:	e0fffe05 	stb	r3,-8(fp)
   4f684:	e0bfff05 	stb	r2,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f688:	e0bffd17 	ldw	r2,-12(fp)
   4f68c:	10800a17 	ldw	r2,40(r2)
   4f690:	1007883a 	mov	r3,r2
   4f694:	e0bffe03 	ldbu	r2,-8(fp)
   4f698:	10800fcc 	andi	r2,r2,63
   4f69c:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   4f6a0:	e0bffd17 	ldw	r2,-12(fp)
   4f6a4:	10800a17 	ldw	r2,40(r2)
   4f6a8:	10800044 	addi	r2,r2,1
   4f6ac:	1007883a 	mov	r3,r2
   4f6b0:	e0bfff03 	ldbu	r2,-4(fp)
   4f6b4:	18800025 	stbio	r2,0(r3)

	return 0;
   4f6b8:	0005883a 	mov	r2,zero
}
   4f6bc:	e037883a 	mov	sp,fp
   4f6c0:	df000017 	ldw	fp,0(sp)
   4f6c4:	dec00104 	addi	sp,sp,4
   4f6c8:	f800283a 	ret

0004f6cc <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   4f6cc:	defffd04 	addi	sp,sp,-12
   4f6d0:	df000215 	stw	fp,8(sp)
   4f6d4:	df000204 	addi	fp,sp,8
   4f6d8:	e13ffe15 	stw	r4,-8(fp)
   4f6dc:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f6e0:	e0bffe17 	ldw	r2,-8(fp)
   4f6e4:	10800a17 	ldw	r2,40(r2)
   4f6e8:	1007883a 	mov	r3,r2
   4f6ec:	00800c84 	movi	r2,50
   4f6f0:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4f6f4:	e0bffe17 	ldw	r2,-8(fp)
   4f6f8:	10800a17 	ldw	r2,40(r2)
   4f6fc:	10800044 	addi	r2,r2,1
   4f700:	10800023 	ldbuio	r2,0(r2)
   4f704:	10803fcc 	andi	r2,r2,255
   4f708:	10ffffcc 	andi	r3,r2,65535
   4f70c:	e0bfff17 	ldw	r2,-4(fp)
   4f710:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f714:	e0bffe17 	ldw	r2,-8(fp)
   4f718:	10800a17 	ldw	r2,40(r2)
   4f71c:	1007883a 	mov	r3,r2
   4f720:	00800cc4 	movi	r2,51
   4f724:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   4f728:	e0bffe17 	ldw	r2,-8(fp)
   4f72c:	10800a17 	ldw	r2,40(r2)
   4f730:	10800044 	addi	r2,r2,1
   4f734:	10800023 	ldbuio	r2,0(r2)
   4f738:	10803fcc 	andi	r2,r2,255
   4f73c:	10bfffcc 	andi	r2,r2,65535
   4f740:	1004923a 	slli	r2,r2,8
   4f744:	e0ffff17 	ldw	r3,-4(fp)
   4f748:	18c00017 	ldw	r3,0(r3)
   4f74c:	1885883a 	add	r2,r3,r2
   4f750:	1007883a 	mov	r3,r2
   4f754:	e0bfff17 	ldw	r2,-4(fp)
   4f758:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   4f75c:	e0bfff17 	ldw	r2,-4(fp)
   4f760:	10800017 	ldw	r2,0(r2)
   4f764:	10a0000c 	andi	r2,r2,32768
   4f768:	10000626 	beq	r2,zero,4f784 <alt_up_accelerometer_spi_read_x_axis+0xb8>
	{
		*(x_axis) |= 0xFFFF0000;
   4f76c:	e0bfff17 	ldw	r2,-4(fp)
   4f770:	10800017 	ldw	r2,0(r2)
   4f774:	10bffff4 	orhi	r2,r2,65535
   4f778:	1007883a 	mov	r3,r2
   4f77c:	e0bfff17 	ldw	r2,-4(fp)
   4f780:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   4f784:	0005883a 	mov	r2,zero
}
   4f788:	e037883a 	mov	sp,fp
   4f78c:	df000017 	ldw	fp,0(sp)
   4f790:	dec00104 	addi	sp,sp,4
   4f794:	f800283a 	ret

0004f798 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   4f798:	defffd04 	addi	sp,sp,-12
   4f79c:	df000215 	stw	fp,8(sp)
   4f7a0:	df000204 	addi	fp,sp,8
   4f7a4:	e13ffe15 	stw	r4,-8(fp)
   4f7a8:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f7ac:	e0bffe17 	ldw	r2,-8(fp)
   4f7b0:	10800a17 	ldw	r2,40(r2)
   4f7b4:	1007883a 	mov	r3,r2
   4f7b8:	00800d04 	movi	r2,52
   4f7bc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4f7c0:	e0bffe17 	ldw	r2,-8(fp)
   4f7c4:	10800a17 	ldw	r2,40(r2)
   4f7c8:	10800044 	addi	r2,r2,1
   4f7cc:	10800023 	ldbuio	r2,0(r2)
   4f7d0:	10803fcc 	andi	r2,r2,255
   4f7d4:	10ffffcc 	andi	r3,r2,65535
   4f7d8:	e0bfff17 	ldw	r2,-4(fp)
   4f7dc:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f7e0:	e0bffe17 	ldw	r2,-8(fp)
   4f7e4:	10800a17 	ldw	r2,40(r2)
   4f7e8:	1007883a 	mov	r3,r2
   4f7ec:	00800d44 	movi	r2,53
   4f7f0:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   4f7f4:	e0bffe17 	ldw	r2,-8(fp)
   4f7f8:	10800a17 	ldw	r2,40(r2)
   4f7fc:	10800044 	addi	r2,r2,1
   4f800:	10800023 	ldbuio	r2,0(r2)
   4f804:	10803fcc 	andi	r2,r2,255
   4f808:	10bfffcc 	andi	r2,r2,65535
   4f80c:	1004923a 	slli	r2,r2,8
   4f810:	e0ffff17 	ldw	r3,-4(fp)
   4f814:	18c00017 	ldw	r3,0(r3)
   4f818:	1885883a 	add	r2,r3,r2
   4f81c:	1007883a 	mov	r3,r2
   4f820:	e0bfff17 	ldw	r2,-4(fp)
   4f824:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   4f828:	e0bfff17 	ldw	r2,-4(fp)
   4f82c:	10800017 	ldw	r2,0(r2)
   4f830:	10a0000c 	andi	r2,r2,32768
   4f834:	10000626 	beq	r2,zero,4f850 <alt_up_accelerometer_spi_read_y_axis+0xb8>
	{
		*(y_axis) |= 0xFFFF0000;
   4f838:	e0bfff17 	ldw	r2,-4(fp)
   4f83c:	10800017 	ldw	r2,0(r2)
   4f840:	10bffff4 	orhi	r2,r2,65535
   4f844:	1007883a 	mov	r3,r2
   4f848:	e0bfff17 	ldw	r2,-4(fp)
   4f84c:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   4f850:	0005883a 	mov	r2,zero
}
   4f854:	e037883a 	mov	sp,fp
   4f858:	df000017 	ldw	fp,0(sp)
   4f85c:	dec00104 	addi	sp,sp,4
   4f860:	f800283a 	ret

0004f864 <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   4f864:	defffd04 	addi	sp,sp,-12
   4f868:	df000215 	stw	fp,8(sp)
   4f86c:	df000204 	addi	fp,sp,8
   4f870:	e13ffe15 	stw	r4,-8(fp)
   4f874:	e17fff15 	stw	r5,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f878:	e0bffe17 	ldw	r2,-8(fp)
   4f87c:	10800a17 	ldw	r2,40(r2)
   4f880:	1007883a 	mov	r3,r2
   4f884:	00800d84 	movi	r2,54
   4f888:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   4f88c:	e0bffe17 	ldw	r2,-8(fp)
   4f890:	10800a17 	ldw	r2,40(r2)
   4f894:	10800044 	addi	r2,r2,1
   4f898:	10800023 	ldbuio	r2,0(r2)
   4f89c:	10803fcc 	andi	r2,r2,255
   4f8a0:	10ffffcc 	andi	r3,r2,65535
   4f8a4:	e0bfff17 	ldw	r2,-4(fp)
   4f8a8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   4f8ac:	e0bffe17 	ldw	r2,-8(fp)
   4f8b0:	10800a17 	ldw	r2,40(r2)
   4f8b4:	1007883a 	mov	r3,r2
   4f8b8:	00800dc4 	movi	r2,55
   4f8bc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   4f8c0:	e0bffe17 	ldw	r2,-8(fp)
   4f8c4:	10800a17 	ldw	r2,40(r2)
   4f8c8:	10800044 	addi	r2,r2,1
   4f8cc:	10800023 	ldbuio	r2,0(r2)
   4f8d0:	10803fcc 	andi	r2,r2,255
   4f8d4:	10bfffcc 	andi	r2,r2,65535
   4f8d8:	1004923a 	slli	r2,r2,8
   4f8dc:	e0ffff17 	ldw	r3,-4(fp)
   4f8e0:	18c00017 	ldw	r3,0(r3)
   4f8e4:	1885883a 	add	r2,r3,r2
   4f8e8:	1007883a 	mov	r3,r2
   4f8ec:	e0bfff17 	ldw	r2,-4(fp)
   4f8f0:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   4f8f4:	e0bfff17 	ldw	r2,-4(fp)
   4f8f8:	10800017 	ldw	r2,0(r2)
   4f8fc:	10a0000c 	andi	r2,r2,32768
   4f900:	10000626 	beq	r2,zero,4f91c <alt_up_accelerometer_spi_read_z_axis+0xb8>
	{
		*(z_axis) |= 0xFFFF0000;
   4f904:	e0bfff17 	ldw	r2,-4(fp)
   4f908:	10800017 	ldw	r2,0(r2)
   4f90c:	10bffff4 	orhi	r2,r2,65535
   4f910:	1007883a 	mov	r3,r2
   4f914:	e0bfff17 	ldw	r2,-4(fp)
   4f918:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   4f91c:	0005883a 	mov	r2,zero
}
   4f920:	e037883a 	mov	sp,fp
   4f924:	df000017 	ldw	fp,0(sp)
   4f928:	dec00104 	addi	sp,sp,4
   4f92c:	f800283a 	ret

0004f930 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4f930:	defff504 	addi	sp,sp,-44
   4f934:	df000a15 	stw	fp,40(sp)
   4f938:	df000a04 	addi	fp,sp,40
   4f93c:	e13ffc15 	stw	r4,-16(fp)
   4f940:	e17ffd15 	stw	r5,-12(fp)
   4f944:	e1bffe15 	stw	r6,-8(fp)
   4f948:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4f94c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4f950:	d0a6e117 	ldw	r2,-25724(gp)
  
  if (alt_ticks_per_second ())
   4f954:	10003c26 	beq	r2,zero,4fa48 <alt_alarm_start+0x118>
  {
    if (alarm)
   4f958:	e0bffc17 	ldw	r2,-16(fp)
   4f95c:	10003826 	beq	r2,zero,4fa40 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4f960:	e0bffc17 	ldw	r2,-16(fp)
   4f964:	e0fffe17 	ldw	r3,-8(fp)
   4f968:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4f96c:	e0bffc17 	ldw	r2,-16(fp)
   4f970:	e0ffff17 	ldw	r3,-4(fp)
   4f974:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f978:	0005303a 	rdctl	r2,status
   4f97c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f980:	e0fff917 	ldw	r3,-28(fp)
   4f984:	00bfff84 	movi	r2,-2
   4f988:	1884703a 	and	r2,r3,r2
   4f98c:	1001703a 	wrctl	status,r2
  
  return context;
   4f990:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4f994:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4f998:	d0a6e217 	ldw	r2,-25720(gp)
      
      current_nticks = alt_nticks();
   4f99c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4f9a0:	e0fffd17 	ldw	r3,-12(fp)
   4f9a4:	e0bff617 	ldw	r2,-40(fp)
   4f9a8:	1885883a 	add	r2,r3,r2
   4f9ac:	10c00044 	addi	r3,r2,1
   4f9b0:	e0bffc17 	ldw	r2,-16(fp)
   4f9b4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4f9b8:	e0bffc17 	ldw	r2,-16(fp)
   4f9bc:	10c00217 	ldw	r3,8(r2)
   4f9c0:	e0bff617 	ldw	r2,-40(fp)
   4f9c4:	1880042e 	bgeu	r3,r2,4f9d8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4f9c8:	e0bffc17 	ldw	r2,-16(fp)
   4f9cc:	00c00044 	movi	r3,1
   4f9d0:	10c00405 	stb	r3,16(r2)
   4f9d4:	00000206 	br	4f9e0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4f9d8:	e0bffc17 	ldw	r2,-16(fp)
   4f9dc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4f9e0:	e0bffc17 	ldw	r2,-16(fp)
   4f9e4:	d0e00e04 	addi	r3,gp,-32712
   4f9e8:	e0fffa15 	stw	r3,-24(fp)
   4f9ec:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4f9f0:	e0bffb17 	ldw	r2,-20(fp)
   4f9f4:	e0fffa17 	ldw	r3,-24(fp)
   4f9f8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4f9fc:	e0bffa17 	ldw	r2,-24(fp)
   4fa00:	10c00017 	ldw	r3,0(r2)
   4fa04:	e0bffb17 	ldw	r2,-20(fp)
   4fa08:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4fa0c:	e0bffa17 	ldw	r2,-24(fp)
   4fa10:	10800017 	ldw	r2,0(r2)
   4fa14:	e0fffb17 	ldw	r3,-20(fp)
   4fa18:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4fa1c:	e0bffa17 	ldw	r2,-24(fp)
   4fa20:	e0fffb17 	ldw	r3,-20(fp)
   4fa24:	10c00015 	stw	r3,0(r2)
   4fa28:	e0bff817 	ldw	r2,-32(fp)
   4fa2c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fa30:	e0bff717 	ldw	r2,-36(fp)
   4fa34:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4fa38:	0005883a 	mov	r2,zero
   4fa3c:	00000306 	br	4fa4c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4fa40:	00bffa84 	movi	r2,-22
   4fa44:	00000106 	br	4fa4c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4fa48:	00bfde84 	movi	r2,-134
  }
}
   4fa4c:	e037883a 	mov	sp,fp
   4fa50:	df000017 	ldw	fp,0(sp)
   4fa54:	dec00104 	addi	sp,sp,4
   4fa58:	f800283a 	ret

0004fa5c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4fa5c:	deffff04 	addi	sp,sp,-4
   4fa60:	df000015 	stw	fp,0(sp)
   4fa64:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4fa68:	0001883a 	nop
   4fa6c:	e037883a 	mov	sp,fp
   4fa70:	df000017 	ldw	fp,0(sp)
   4fa74:	dec00104 	addi	sp,sp,4
   4fa78:	f800283a 	ret

0004fa7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fa7c:	defffe04 	addi	sp,sp,-8
   4fa80:	dfc00115 	stw	ra,4(sp)
   4fa84:	df000015 	stw	fp,0(sp)
   4fa88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fa8c:	d0a00b17 	ldw	r2,-32724(gp)
   4fa90:	10000326 	beq	r2,zero,4faa0 <alt_get_errno+0x24>
   4fa94:	d0a00b17 	ldw	r2,-32724(gp)
   4fa98:	103ee83a 	callr	r2
   4fa9c:	00000106 	br	4faa4 <alt_get_errno+0x28>
   4faa0:	d0a6d604 	addi	r2,gp,-25768
}
   4faa4:	e037883a 	mov	sp,fp
   4faa8:	dfc00117 	ldw	ra,4(sp)
   4faac:	df000017 	ldw	fp,0(sp)
   4fab0:	dec00204 	addi	sp,sp,8
   4fab4:	f800283a 	ret

0004fab8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4fab8:	defffa04 	addi	sp,sp,-24
   4fabc:	dfc00515 	stw	ra,20(sp)
   4fac0:	df000415 	stw	fp,16(sp)
   4fac4:	df000404 	addi	fp,sp,16
   4fac8:	e13ffe15 	stw	r4,-8(fp)
   4facc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4fad0:	e0bffe17 	ldw	r2,-8(fp)
   4fad4:	10000326 	beq	r2,zero,4fae4 <alt_dev_llist_insert+0x2c>
   4fad8:	e0bffe17 	ldw	r2,-8(fp)
   4fadc:	10800217 	ldw	r2,8(r2)
   4fae0:	1000061e 	bne	r2,zero,4fafc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4fae4:	004fa7c0 	call	4fa7c <alt_get_errno>
   4fae8:	1007883a 	mov	r3,r2
   4faec:	00800584 	movi	r2,22
   4faf0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4faf4:	00bffa84 	movi	r2,-22
   4faf8:	00001306 	br	4fb48 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4fafc:	e0bffe17 	ldw	r2,-8(fp)
   4fb00:	e0ffff17 	ldw	r3,-4(fp)
   4fb04:	e0fffc15 	stw	r3,-16(fp)
   4fb08:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4fb0c:	e0bffd17 	ldw	r2,-12(fp)
   4fb10:	e0fffc17 	ldw	r3,-16(fp)
   4fb14:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4fb18:	e0bffc17 	ldw	r2,-16(fp)
   4fb1c:	10c00017 	ldw	r3,0(r2)
   4fb20:	e0bffd17 	ldw	r2,-12(fp)
   4fb24:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4fb28:	e0bffc17 	ldw	r2,-16(fp)
   4fb2c:	10800017 	ldw	r2,0(r2)
   4fb30:	e0fffd17 	ldw	r3,-12(fp)
   4fb34:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4fb38:	e0bffc17 	ldw	r2,-16(fp)
   4fb3c:	e0fffd17 	ldw	r3,-12(fp)
   4fb40:	10c00015 	stw	r3,0(r2)

  return 0;  
   4fb44:	0005883a 	mov	r2,zero
}
   4fb48:	e037883a 	mov	sp,fp
   4fb4c:	dfc00117 	ldw	ra,4(sp)
   4fb50:	df000017 	ldw	fp,0(sp)
   4fb54:	dec00204 	addi	sp,sp,8
   4fb58:	f800283a 	ret

0004fb5c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4fb5c:	defffd04 	addi	sp,sp,-12
   4fb60:	dfc00215 	stw	ra,8(sp)
   4fb64:	df000115 	stw	fp,4(sp)
   4fb68:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4fb6c:	00800174 	movhi	r2,5
   4fb70:	1081db04 	addi	r2,r2,1900
   4fb74:	e0bfff15 	stw	r2,-4(fp)
   4fb78:	00000606 	br	4fb94 <_do_ctors+0x38>
        (*ctor) (); 
   4fb7c:	e0bfff17 	ldw	r2,-4(fp)
   4fb80:	10800017 	ldw	r2,0(r2)
   4fb84:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4fb88:	e0bfff17 	ldw	r2,-4(fp)
   4fb8c:	10bfff04 	addi	r2,r2,-4
   4fb90:	e0bfff15 	stw	r2,-4(fp)
   4fb94:	e0ffff17 	ldw	r3,-4(fp)
   4fb98:	00800174 	movhi	r2,5
   4fb9c:	1081dc04 	addi	r2,r2,1904
   4fba0:	18bff62e 	bgeu	r3,r2,4fb7c <__alt_data_end+0xfffe3c5c>
        (*ctor) (); 
}
   4fba4:	0001883a 	nop
   4fba8:	e037883a 	mov	sp,fp
   4fbac:	dfc00117 	ldw	ra,4(sp)
   4fbb0:	df000017 	ldw	fp,0(sp)
   4fbb4:	dec00204 	addi	sp,sp,8
   4fbb8:	f800283a 	ret

0004fbbc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4fbbc:	defffd04 	addi	sp,sp,-12
   4fbc0:	dfc00215 	stw	ra,8(sp)
   4fbc4:	df000115 	stw	fp,4(sp)
   4fbc8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4fbcc:	00800174 	movhi	r2,5
   4fbd0:	1081db04 	addi	r2,r2,1900
   4fbd4:	e0bfff15 	stw	r2,-4(fp)
   4fbd8:	00000606 	br	4fbf4 <_do_dtors+0x38>
        (*dtor) (); 
   4fbdc:	e0bfff17 	ldw	r2,-4(fp)
   4fbe0:	10800017 	ldw	r2,0(r2)
   4fbe4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4fbe8:	e0bfff17 	ldw	r2,-4(fp)
   4fbec:	10bfff04 	addi	r2,r2,-4
   4fbf0:	e0bfff15 	stw	r2,-4(fp)
   4fbf4:	e0ffff17 	ldw	r3,-4(fp)
   4fbf8:	00800174 	movhi	r2,5
   4fbfc:	1081dc04 	addi	r2,r2,1904
   4fc00:	18bff62e 	bgeu	r3,r2,4fbdc <__alt_data_end+0xfffe3cbc>
        (*dtor) (); 
}
   4fc04:	0001883a 	nop
   4fc08:	e037883a 	mov	sp,fp
   4fc0c:	dfc00117 	ldw	ra,4(sp)
   4fc10:	df000017 	ldw	fp,0(sp)
   4fc14:	dec00204 	addi	sp,sp,8
   4fc18:	f800283a 	ret

0004fc1c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4fc1c:	defffa04 	addi	sp,sp,-24
   4fc20:	dfc00515 	stw	ra,20(sp)
   4fc24:	df000415 	stw	fp,16(sp)
   4fc28:	df000404 	addi	fp,sp,16
   4fc2c:	e13ffe15 	stw	r4,-8(fp)
   4fc30:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4fc34:	e0bfff17 	ldw	r2,-4(fp)
   4fc38:	10800017 	ldw	r2,0(r2)
   4fc3c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4fc40:	e13ffe17 	ldw	r4,-8(fp)
   4fc44:	00428880 	call	42888 <strlen>
   4fc48:	10800044 	addi	r2,r2,1
   4fc4c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4fc50:	00000d06 	br	4fc88 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4fc54:	e0bffc17 	ldw	r2,-16(fp)
   4fc58:	10800217 	ldw	r2,8(r2)
   4fc5c:	e0fffd17 	ldw	r3,-12(fp)
   4fc60:	180d883a 	mov	r6,r3
   4fc64:	e17ffe17 	ldw	r5,-8(fp)
   4fc68:	1009883a 	mov	r4,r2
   4fc6c:	00504280 	call	50428 <memcmp>
   4fc70:	1000021e 	bne	r2,zero,4fc7c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4fc74:	e0bffc17 	ldw	r2,-16(fp)
   4fc78:	00000706 	br	4fc98 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4fc7c:	e0bffc17 	ldw	r2,-16(fp)
   4fc80:	10800017 	ldw	r2,0(r2)
   4fc84:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4fc88:	e0fffc17 	ldw	r3,-16(fp)
   4fc8c:	e0bfff17 	ldw	r2,-4(fp)
   4fc90:	18bff01e 	bne	r3,r2,4fc54 <__alt_data_end+0xfffe3d34>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4fc94:	0005883a 	mov	r2,zero
}
   4fc98:	e037883a 	mov	sp,fp
   4fc9c:	dfc00117 	ldw	ra,4(sp)
   4fca0:	df000017 	ldw	fp,0(sp)
   4fca4:	dec00204 	addi	sp,sp,8
   4fca8:	f800283a 	ret

0004fcac <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4fcac:	defffb04 	addi	sp,sp,-20
   4fcb0:	dfc00415 	stw	ra,16(sp)
   4fcb4:	df000315 	stw	fp,12(sp)
   4fcb8:	df000304 	addi	fp,sp,12
   4fcbc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4fcc0:	d0a00617 	ldw	r2,-32744(gp)
   4fcc4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4fcc8:	00003106 	br	4fd90 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4fccc:	e0bffd17 	ldw	r2,-12(fp)
   4fcd0:	10800217 	ldw	r2,8(r2)
   4fcd4:	1009883a 	mov	r4,r2
   4fcd8:	00428880 	call	42888 <strlen>
   4fcdc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4fce0:	e0bffd17 	ldw	r2,-12(fp)
   4fce4:	10c00217 	ldw	r3,8(r2)
   4fce8:	e0bffe17 	ldw	r2,-8(fp)
   4fcec:	10bfffc4 	addi	r2,r2,-1
   4fcf0:	1885883a 	add	r2,r3,r2
   4fcf4:	10800003 	ldbu	r2,0(r2)
   4fcf8:	10803fcc 	andi	r2,r2,255
   4fcfc:	1080201c 	xori	r2,r2,128
   4fd00:	10bfe004 	addi	r2,r2,-128
   4fd04:	10800bd8 	cmpnei	r2,r2,47
   4fd08:	1000031e 	bne	r2,zero,4fd18 <alt_find_file+0x6c>
    {
      len -= 1;
   4fd0c:	e0bffe17 	ldw	r2,-8(fp)
   4fd10:	10bfffc4 	addi	r2,r2,-1
   4fd14:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4fd18:	e0bffe17 	ldw	r2,-8(fp)
   4fd1c:	e0ffff17 	ldw	r3,-4(fp)
   4fd20:	1885883a 	add	r2,r3,r2
   4fd24:	10800003 	ldbu	r2,0(r2)
   4fd28:	10803fcc 	andi	r2,r2,255
   4fd2c:	1080201c 	xori	r2,r2,128
   4fd30:	10bfe004 	addi	r2,r2,-128
   4fd34:	10800be0 	cmpeqi	r2,r2,47
   4fd38:	1000081e 	bne	r2,zero,4fd5c <alt_find_file+0xb0>
   4fd3c:	e0bffe17 	ldw	r2,-8(fp)
   4fd40:	e0ffff17 	ldw	r3,-4(fp)
   4fd44:	1885883a 	add	r2,r3,r2
   4fd48:	10800003 	ldbu	r2,0(r2)
   4fd4c:	10803fcc 	andi	r2,r2,255
   4fd50:	1080201c 	xori	r2,r2,128
   4fd54:	10bfe004 	addi	r2,r2,-128
   4fd58:	10000a1e 	bne	r2,zero,4fd84 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4fd5c:	e0bffd17 	ldw	r2,-12(fp)
   4fd60:	10800217 	ldw	r2,8(r2)
   4fd64:	e0fffe17 	ldw	r3,-8(fp)
   4fd68:	180d883a 	mov	r6,r3
   4fd6c:	e17fff17 	ldw	r5,-4(fp)
   4fd70:	1009883a 	mov	r4,r2
   4fd74:	00504280 	call	50428 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4fd78:	1000021e 	bne	r2,zero,4fd84 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4fd7c:	e0bffd17 	ldw	r2,-12(fp)
   4fd80:	00000706 	br	4fda0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4fd84:	e0bffd17 	ldw	r2,-12(fp)
   4fd88:	10800017 	ldw	r2,0(r2)
   4fd8c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4fd90:	e0fffd17 	ldw	r3,-12(fp)
   4fd94:	d0a00604 	addi	r2,gp,-32744
   4fd98:	18bfcc1e 	bne	r3,r2,4fccc <__alt_data_end+0xfffe3dac>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4fd9c:	0005883a 	mov	r2,zero
}
   4fda0:	e037883a 	mov	sp,fp
   4fda4:	dfc00117 	ldw	ra,4(sp)
   4fda8:	df000017 	ldw	fp,0(sp)
   4fdac:	dec00204 	addi	sp,sp,8
   4fdb0:	f800283a 	ret

0004fdb4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4fdb4:	defffa04 	addi	sp,sp,-24
   4fdb8:	dfc00515 	stw	ra,20(sp)
   4fdbc:	df000415 	stw	fp,16(sp)
   4fdc0:	dc000315 	stw	r16,12(sp)
   4fdc4:	df000404 	addi	fp,sp,16
   4fdc8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   4fdcc:	00bffa04 	movi	r2,-24
   4fdd0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4fdd4:	e03ffc15 	stw	zero,-16(fp)
   4fdd8:	00001d06 	br	4fe50 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   4fddc:	04000174 	movhi	r16,5
   4fde0:	8404ee04 	addi	r16,r16,5048
   4fde4:	e0bffc17 	ldw	r2,-16(fp)
   4fde8:	01400304 	movi	r5,12
   4fdec:	1009883a 	mov	r4,r2
   4fdf0:	004b4740 	call	4b474 <__mulsi3>
   4fdf4:	8085883a 	add	r2,r16,r2
   4fdf8:	10800017 	ldw	r2,0(r2)
   4fdfc:	1000111e 	bne	r2,zero,4fe44 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   4fe00:	04000174 	movhi	r16,5
   4fe04:	8404ee04 	addi	r16,r16,5048
   4fe08:	e0bffc17 	ldw	r2,-16(fp)
   4fe0c:	01400304 	movi	r5,12
   4fe10:	1009883a 	mov	r4,r2
   4fe14:	004b4740 	call	4b474 <__mulsi3>
   4fe18:	8085883a 	add	r2,r16,r2
   4fe1c:	e0fffe17 	ldw	r3,-8(fp)
   4fe20:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4fe24:	d0e00a17 	ldw	r3,-32728(gp)
   4fe28:	e0bffc17 	ldw	r2,-16(fp)
   4fe2c:	1880020e 	bge	r3,r2,4fe38 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   4fe30:	e0bffc17 	ldw	r2,-16(fp)
   4fe34:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4fe38:	e0bffc17 	ldw	r2,-16(fp)
   4fe3c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   4fe40:	00000606 	br	4fe5c <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4fe44:	e0bffc17 	ldw	r2,-16(fp)
   4fe48:	10800044 	addi	r2,r2,1
   4fe4c:	e0bffc15 	stw	r2,-16(fp)
   4fe50:	e0bffc17 	ldw	r2,-16(fp)
   4fe54:	10800810 	cmplti	r2,r2,32
   4fe58:	103fe01e 	bne	r2,zero,4fddc <__alt_data_end+0xfffe3ebc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4fe5c:	e0bffd17 	ldw	r2,-12(fp)
}
   4fe60:	e6ffff04 	addi	sp,fp,-4
   4fe64:	dfc00217 	ldw	ra,8(sp)
   4fe68:	df000117 	ldw	fp,4(sp)
   4fe6c:	dc000017 	ldw	r16,0(sp)
   4fe70:	dec00304 	addi	sp,sp,12
   4fe74:	f800283a 	ret

0004fe78 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4fe78:	deffff04 	addi	sp,sp,-4
   4fe7c:	df000015 	stw	fp,0(sp)
   4fe80:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   4fe84:	0001883a 	nop
   4fe88:	e037883a 	mov	sp,fp
   4fe8c:	df000017 	ldw	fp,0(sp)
   4fe90:	dec00104 	addi	sp,sp,4
   4fe94:	f800283a 	ret

0004fe98 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4fe98:	defff804 	addi	sp,sp,-32
   4fe9c:	dfc00715 	stw	ra,28(sp)
   4fea0:	df000615 	stw	fp,24(sp)
   4fea4:	dc000515 	stw	r16,20(sp)
   4fea8:	df000604 	addi	fp,sp,24
   4feac:	e13ffb15 	stw	r4,-20(fp)
   4feb0:	e17ffc15 	stw	r5,-16(fp)
   4feb4:	e1bffd15 	stw	r6,-12(fp)
   4feb8:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   4febc:	e1bffe17 	ldw	r6,-8(fp)
   4fec0:	e17ffd17 	ldw	r5,-12(fp)
   4fec4:	e13ffc17 	ldw	r4,-16(fp)
   4fec8:	004e44c0 	call	4e44c <open>
   4fecc:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   4fed0:	e0bffa17 	ldw	r2,-24(fp)
   4fed4:	10002216 	blt	r2,zero,4ff60 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   4fed8:	04000174 	movhi	r16,5
   4fedc:	8404ee04 	addi	r16,r16,5048
   4fee0:	e0bffa17 	ldw	r2,-24(fp)
   4fee4:	01400304 	movi	r5,12
   4fee8:	1009883a 	mov	r4,r2
   4feec:	004b4740 	call	4b474 <__mulsi3>
   4fef0:	8085883a 	add	r2,r16,r2
   4fef4:	10c00017 	ldw	r3,0(r2)
   4fef8:	e0bffb17 	ldw	r2,-20(fp)
   4fefc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4ff00:	04000174 	movhi	r16,5
   4ff04:	8404ee04 	addi	r16,r16,5048
   4ff08:	e0bffa17 	ldw	r2,-24(fp)
   4ff0c:	01400304 	movi	r5,12
   4ff10:	1009883a 	mov	r4,r2
   4ff14:	004b4740 	call	4b474 <__mulsi3>
   4ff18:	8085883a 	add	r2,r16,r2
   4ff1c:	10800104 	addi	r2,r2,4
   4ff20:	10c00017 	ldw	r3,0(r2)
   4ff24:	e0bffb17 	ldw	r2,-20(fp)
   4ff28:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ff2c:	04000174 	movhi	r16,5
   4ff30:	8404ee04 	addi	r16,r16,5048
   4ff34:	e0bffa17 	ldw	r2,-24(fp)
   4ff38:	01400304 	movi	r5,12
   4ff3c:	1009883a 	mov	r4,r2
   4ff40:	004b4740 	call	4b474 <__mulsi3>
   4ff44:	8085883a 	add	r2,r16,r2
   4ff48:	10800204 	addi	r2,r2,8
   4ff4c:	10c00017 	ldw	r3,0(r2)
   4ff50:	e0bffb17 	ldw	r2,-20(fp)
   4ff54:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4ff58:	e13ffa17 	ldw	r4,-24(fp)
   4ff5c:	004e6e80 	call	4e6e8 <alt_release_fd>
  }
} 
   4ff60:	0001883a 	nop
   4ff64:	e6ffff04 	addi	sp,fp,-4
   4ff68:	dfc00217 	ldw	ra,8(sp)
   4ff6c:	df000117 	ldw	fp,4(sp)
   4ff70:	dc000017 	ldw	r16,0(sp)
   4ff74:	dec00304 	addi	sp,sp,12
   4ff78:	f800283a 	ret

0004ff7c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4ff7c:	defffb04 	addi	sp,sp,-20
   4ff80:	dfc00415 	stw	ra,16(sp)
   4ff84:	df000315 	stw	fp,12(sp)
   4ff88:	df000304 	addi	fp,sp,12
   4ff8c:	e13ffd15 	stw	r4,-12(fp)
   4ff90:	e17ffe15 	stw	r5,-8(fp)
   4ff94:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ff98:	01c07fc4 	movi	r7,511
   4ff9c:	01800044 	movi	r6,1
   4ffa0:	e17ffd17 	ldw	r5,-12(fp)
   4ffa4:	01000174 	movhi	r4,5
   4ffa8:	2104f104 	addi	r4,r4,5060
   4ffac:	004fe980 	call	4fe98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4ffb0:	01c07fc4 	movi	r7,511
   4ffb4:	000d883a 	mov	r6,zero
   4ffb8:	e17ffe17 	ldw	r5,-8(fp)
   4ffbc:	01000174 	movhi	r4,5
   4ffc0:	2104ee04 	addi	r4,r4,5048
   4ffc4:	004fe980 	call	4fe98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4ffc8:	01c07fc4 	movi	r7,511
   4ffcc:	01800044 	movi	r6,1
   4ffd0:	e17fff17 	ldw	r5,-4(fp)
   4ffd4:	01000174 	movhi	r4,5
   4ffd8:	2104f404 	addi	r4,r4,5072
   4ffdc:	004fe980 	call	4fe98 <alt_open_fd>
}  
   4ffe0:	0001883a 	nop
   4ffe4:	e037883a 	mov	sp,fp
   4ffe8:	dfc00117 	ldw	ra,4(sp)
   4ffec:	df000017 	ldw	fp,0(sp)
   4fff0:	dec00204 	addi	sp,sp,8
   4fff4:	f800283a 	ret

0004fff8 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   4fff8:	defff004 	addi	sp,sp,-64
   4fffc:	df000f15 	stw	fp,60(sp)
   50000:	df000f04 	addi	fp,sp,60
   50004:	e13ffd15 	stw	r4,-12(fp)
   50008:	e17ffe15 	stw	r5,-8(fp)
   5000c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   50010:	00bffa84 	movi	r2,-22
   50014:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   50018:	e0bffd17 	ldw	r2,-12(fp)
   5001c:	10800828 	cmpgeui	r2,r2,32
   50020:	1000501e 	bne	r2,zero,50164 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50024:	0005303a 	rdctl	r2,status
   50028:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5002c:	e0fff617 	ldw	r3,-40(fp)
   50030:	00bfff84 	movi	r2,-2
   50034:	1884703a 	and	r2,r3,r2
   50038:	1001703a 	wrctl	status,r2
  
  return context;
   5003c:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   50040:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   50044:	00800174 	movhi	r2,5
   50048:	10905f04 	addi	r2,r2,16764
   5004c:	e0fffd17 	ldw	r3,-12(fp)
   50050:	180690fa 	slli	r3,r3,3
   50054:	10c5883a 	add	r2,r2,r3
   50058:	e0ffff17 	ldw	r3,-4(fp)
   5005c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   50060:	00800174 	movhi	r2,5
   50064:	10905f04 	addi	r2,r2,16764
   50068:	e0fffd17 	ldw	r3,-12(fp)
   5006c:	180690fa 	slli	r3,r3,3
   50070:	10c5883a 	add	r2,r2,r3
   50074:	10800104 	addi	r2,r2,4
   50078:	e0fffe17 	ldw	r3,-8(fp)
   5007c:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   50080:	e0bfff17 	ldw	r2,-4(fp)
   50084:	10001926 	beq	r2,zero,500ec <alt_irq_register+0xf4>
   50088:	e0bffd17 	ldw	r2,-12(fp)
   5008c:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50090:	0005303a 	rdctl	r2,status
   50094:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50098:	e0fff717 	ldw	r3,-36(fp)
   5009c:	00bfff84 	movi	r2,-2
   500a0:	1884703a 	and	r2,r3,r2
   500a4:	1001703a 	wrctl	status,r2
  
  return context;
   500a8:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   500ac:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   500b0:	00c00044 	movi	r3,1
   500b4:	e0bff217 	ldw	r2,-56(fp)
   500b8:	1884983a 	sll	r2,r3,r2
   500bc:	1007883a 	mov	r3,r2
   500c0:	d0a6e017 	ldw	r2,-25728(gp)
   500c4:	1884b03a 	or	r2,r3,r2
   500c8:	d0a6e015 	stw	r2,-25728(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   500cc:	d0a6e017 	ldw	r2,-25728(gp)
   500d0:	100170fa 	wrctl	ienable,r2
   500d4:	e0bff817 	ldw	r2,-32(fp)
   500d8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   500dc:	e0bff917 	ldw	r2,-28(fp)
   500e0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   500e4:	0005883a 	mov	r2,zero
   500e8:	00001906 	br	50150 <alt_irq_register+0x158>
   500ec:	e0bffd17 	ldw	r2,-12(fp)
   500f0:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   500f4:	0005303a 	rdctl	r2,status
   500f8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   500fc:	e0fffa17 	ldw	r3,-24(fp)
   50100:	00bfff84 	movi	r2,-2
   50104:	1884703a 	and	r2,r3,r2
   50108:	1001703a 	wrctl	status,r2
  
  return context;
   5010c:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   50110:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   50114:	00c00044 	movi	r3,1
   50118:	e0bff417 	ldw	r2,-48(fp)
   5011c:	1884983a 	sll	r2,r3,r2
   50120:	0084303a 	nor	r2,zero,r2
   50124:	1007883a 	mov	r3,r2
   50128:	d0a6e017 	ldw	r2,-25728(gp)
   5012c:	1884703a 	and	r2,r3,r2
   50130:	d0a6e015 	stw	r2,-25728(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   50134:	d0a6e017 	ldw	r2,-25728(gp)
   50138:	100170fa 	wrctl	ienable,r2
   5013c:	e0bffb17 	ldw	r2,-20(fp)
   50140:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50144:	e0bffc17 	ldw	r2,-16(fp)
   50148:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   5014c:	0005883a 	mov	r2,zero
   50150:	e0bff115 	stw	r2,-60(fp)
   50154:	e0bff317 	ldw	r2,-52(fp)
   50158:	e0bff515 	stw	r2,-44(fp)
   5015c:	e0bff517 	ldw	r2,-44(fp)
   50160:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   50164:	e0bff117 	ldw	r2,-60(fp)
}
   50168:	e037883a 	mov	sp,fp
   5016c:	df000017 	ldw	fp,0(sp)
   50170:	dec00104 	addi	sp,sp,4
   50174:	f800283a 	ret

00050178 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   50178:	defffa04 	addi	sp,sp,-24
   5017c:	df000515 	stw	fp,20(sp)
   50180:	df000504 	addi	fp,sp,20
   50184:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50188:	0005303a 	rdctl	r2,status
   5018c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50190:	e0fffc17 	ldw	r3,-16(fp)
   50194:	00bfff84 	movi	r2,-2
   50198:	1884703a 	and	r2,r3,r2
   5019c:	1001703a 	wrctl	status,r2
  
  return context;
   501a0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   501a4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   501a8:	e0bfff17 	ldw	r2,-4(fp)
   501ac:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   501b0:	e0bffd17 	ldw	r2,-12(fp)
   501b4:	10800017 	ldw	r2,0(r2)
   501b8:	e0fffd17 	ldw	r3,-12(fp)
   501bc:	18c00117 	ldw	r3,4(r3)
   501c0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   501c4:	e0bffd17 	ldw	r2,-12(fp)
   501c8:	10800117 	ldw	r2,4(r2)
   501cc:	e0fffd17 	ldw	r3,-12(fp)
   501d0:	18c00017 	ldw	r3,0(r3)
   501d4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   501d8:	e0bffd17 	ldw	r2,-12(fp)
   501dc:	e0fffd17 	ldw	r3,-12(fp)
   501e0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   501e4:	e0bffd17 	ldw	r2,-12(fp)
   501e8:	e0fffd17 	ldw	r3,-12(fp)
   501ec:	10c00015 	stw	r3,0(r2)
   501f0:	e0bffb17 	ldw	r2,-20(fp)
   501f4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   501f8:	e0bffe17 	ldw	r2,-8(fp)
   501fc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   50200:	0001883a 	nop
   50204:	e037883a 	mov	sp,fp
   50208:	df000017 	ldw	fp,0(sp)
   5020c:	dec00104 	addi	sp,sp,4
   50210:	f800283a 	ret

00050214 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   50214:	defffb04 	addi	sp,sp,-20
   50218:	dfc00415 	stw	ra,16(sp)
   5021c:	df000315 	stw	fp,12(sp)
   50220:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   50224:	d0a00e17 	ldw	r2,-32712(gp)
   50228:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   5022c:	d0a6e217 	ldw	r2,-25720(gp)
   50230:	10800044 	addi	r2,r2,1
   50234:	d0a6e215 	stw	r2,-25720(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   50238:	00002e06 	br	502f4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   5023c:	e0bffd17 	ldw	r2,-12(fp)
   50240:	10800017 	ldw	r2,0(r2)
   50244:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   50248:	e0bffd17 	ldw	r2,-12(fp)
   5024c:	10800403 	ldbu	r2,16(r2)
   50250:	10803fcc 	andi	r2,r2,255
   50254:	10000426 	beq	r2,zero,50268 <alt_tick+0x54>
   50258:	d0a6e217 	ldw	r2,-25720(gp)
   5025c:	1000021e 	bne	r2,zero,50268 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   50260:	e0bffd17 	ldw	r2,-12(fp)
   50264:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   50268:	e0bffd17 	ldw	r2,-12(fp)
   5026c:	10800217 	ldw	r2,8(r2)
   50270:	d0e6e217 	ldw	r3,-25720(gp)
   50274:	18801d36 	bltu	r3,r2,502ec <alt_tick+0xd8>
   50278:	e0bffd17 	ldw	r2,-12(fp)
   5027c:	10800403 	ldbu	r2,16(r2)
   50280:	10803fcc 	andi	r2,r2,255
   50284:	1000191e 	bne	r2,zero,502ec <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   50288:	e0bffd17 	ldw	r2,-12(fp)
   5028c:	10800317 	ldw	r2,12(r2)
   50290:	e0fffd17 	ldw	r3,-12(fp)
   50294:	18c00517 	ldw	r3,20(r3)
   50298:	1809883a 	mov	r4,r3
   5029c:	103ee83a 	callr	r2
   502a0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   502a4:	e0bfff17 	ldw	r2,-4(fp)
   502a8:	1000031e 	bne	r2,zero,502b8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   502ac:	e13ffd17 	ldw	r4,-12(fp)
   502b0:	00501780 	call	50178 <alt_alarm_stop>
   502b4:	00000d06 	br	502ec <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   502b8:	e0bffd17 	ldw	r2,-12(fp)
   502bc:	10c00217 	ldw	r3,8(r2)
   502c0:	e0bfff17 	ldw	r2,-4(fp)
   502c4:	1887883a 	add	r3,r3,r2
   502c8:	e0bffd17 	ldw	r2,-12(fp)
   502cc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   502d0:	e0bffd17 	ldw	r2,-12(fp)
   502d4:	10c00217 	ldw	r3,8(r2)
   502d8:	d0a6e217 	ldw	r2,-25720(gp)
   502dc:	1880032e 	bgeu	r3,r2,502ec <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   502e0:	e0bffd17 	ldw	r2,-12(fp)
   502e4:	00c00044 	movi	r3,1
   502e8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   502ec:	e0bffe17 	ldw	r2,-8(fp)
   502f0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   502f4:	e0fffd17 	ldw	r3,-12(fp)
   502f8:	d0a00e04 	addi	r2,gp,-32712
   502fc:	18bfcf1e 	bne	r3,r2,5023c <__alt_data_end+0xfffe431c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   50300:	0001883a 	nop
}
   50304:	0001883a 	nop
   50308:	e037883a 	mov	sp,fp
   5030c:	dfc00117 	ldw	ra,4(sp)
   50310:	df000017 	ldw	fp,0(sp)
   50314:	dec00204 	addi	sp,sp,8
   50318:	f800283a 	ret

0005031c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   5031c:	deffff04 	addi	sp,sp,-4
   50320:	df000015 	stw	fp,0(sp)
   50324:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   50328:	000170fa 	wrctl	ienable,zero
}
   5032c:	0001883a 	nop
   50330:	e037883a 	mov	sp,fp
   50334:	df000017 	ldw	fp,0(sp)
   50338:	dec00104 	addi	sp,sp,4
   5033c:	f800283a 	ret

00050340 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   50340:	defffe04 	addi	sp,sp,-8
   50344:	df000115 	stw	fp,4(sp)
   50348:	df000104 	addi	fp,sp,4
   5034c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   50350:	e0bfff17 	ldw	r2,-4(fp)
   50354:	10bffe84 	addi	r2,r2,-6
   50358:	10c00428 	cmpgeui	r3,r2,16
   5035c:	18001a1e 	bne	r3,zero,503c8 <alt_exception_cause_generated_bad_addr+0x88>
   50360:	100690ba 	slli	r3,r2,2
   50364:	00800174 	movhi	r2,5
   50368:	1080de04 	addi	r2,r2,888
   5036c:	1885883a 	add	r2,r3,r2
   50370:	10800017 	ldw	r2,0(r2)
   50374:	1000683a 	jmp	r2
   50378:	000503b8 	rdprs	zero,zero,5134
   5037c:	000503b8 	rdprs	zero,zero,5134
   50380:	000503c8 	cmpgei	zero,zero,5135
   50384:	000503c8 	cmpgei	zero,zero,5135
   50388:	000503c8 	cmpgei	zero,zero,5135
   5038c:	000503b8 	rdprs	zero,zero,5134
   50390:	000503c0 	call	503c <__reset-0x3afc4>
   50394:	000503c8 	cmpgei	zero,zero,5135
   50398:	000503b8 	rdprs	zero,zero,5134
   5039c:	000503b8 	rdprs	zero,zero,5134
   503a0:	000503c8 	cmpgei	zero,zero,5135
   503a4:	000503b8 	rdprs	zero,zero,5134
   503a8:	000503c0 	call	503c <__reset-0x3afc4>
   503ac:	000503c8 	cmpgei	zero,zero,5135
   503b0:	000503c8 	cmpgei	zero,zero,5135
   503b4:	000503b8 	rdprs	zero,zero,5134
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   503b8:	00800044 	movi	r2,1
   503bc:	00000306 	br	503cc <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   503c0:	0005883a 	mov	r2,zero
   503c4:	00000106 	br	503cc <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   503c8:	0005883a 	mov	r2,zero
  }
}
   503cc:	e037883a 	mov	sp,fp
   503d0:	df000017 	ldw	fp,0(sp)
   503d4:	dec00104 	addi	sp,sp,4
   503d8:	f800283a 	ret

000503dc <atexit>:
   503dc:	200b883a 	mov	r5,r4
   503e0:	000f883a 	mov	r7,zero
   503e4:	000d883a 	mov	r6,zero
   503e8:	0009883a 	mov	r4,zero
   503ec:	00504a41 	jmpi	504a4 <__register_exitproc>

000503f0 <exit>:
   503f0:	defffe04 	addi	sp,sp,-8
   503f4:	000b883a 	mov	r5,zero
   503f8:	dc000015 	stw	r16,0(sp)
   503fc:	dfc00115 	stw	ra,4(sp)
   50400:	2021883a 	mov	r16,r4
   50404:	00505bc0 	call	505bc <__call_exitprocs>
   50408:	00800174 	movhi	r2,5
   5040c:	10897104 	addi	r2,r2,9668
   50410:	11000017 	ldw	r4,0(r2)
   50414:	20800f17 	ldw	r2,60(r4)
   50418:	10000126 	beq	r2,zero,50420 <exit+0x30>
   5041c:	103ee83a 	callr	r2
   50420:	8009883a 	mov	r4,r16
   50424:	005073c0 	call	5073c <_exit>

00050428 <memcmp>:
   50428:	01c000c4 	movi	r7,3
   5042c:	3980192e 	bgeu	r7,r6,50494 <memcmp+0x6c>
   50430:	2144b03a 	or	r2,r4,r5
   50434:	11c4703a 	and	r2,r2,r7
   50438:	10000f26 	beq	r2,zero,50478 <memcmp+0x50>
   5043c:	20800003 	ldbu	r2,0(r4)
   50440:	28c00003 	ldbu	r3,0(r5)
   50444:	10c0151e 	bne	r2,r3,5049c <memcmp+0x74>
   50448:	31bfff84 	addi	r6,r6,-2
   5044c:	01ffffc4 	movi	r7,-1
   50450:	00000406 	br	50464 <memcmp+0x3c>
   50454:	20800003 	ldbu	r2,0(r4)
   50458:	28c00003 	ldbu	r3,0(r5)
   5045c:	31bfffc4 	addi	r6,r6,-1
   50460:	10c00e1e 	bne	r2,r3,5049c <memcmp+0x74>
   50464:	21000044 	addi	r4,r4,1
   50468:	29400044 	addi	r5,r5,1
   5046c:	31fff91e 	bne	r6,r7,50454 <__alt_data_end+0xfffe4534>
   50470:	0005883a 	mov	r2,zero
   50474:	f800283a 	ret
   50478:	20c00017 	ldw	r3,0(r4)
   5047c:	28800017 	ldw	r2,0(r5)
   50480:	18bfee1e 	bne	r3,r2,5043c <__alt_data_end+0xfffe451c>
   50484:	31bfff04 	addi	r6,r6,-4
   50488:	21000104 	addi	r4,r4,4
   5048c:	29400104 	addi	r5,r5,4
   50490:	39bff936 	bltu	r7,r6,50478 <__alt_data_end+0xfffe4558>
   50494:	303fe91e 	bne	r6,zero,5043c <__alt_data_end+0xfffe451c>
   50498:	003ff506 	br	50470 <__alt_data_end+0xfffe4550>
   5049c:	10c5c83a 	sub	r2,r2,r3
   504a0:	f800283a 	ret

000504a4 <__register_exitproc>:
   504a4:	defffa04 	addi	sp,sp,-24
   504a8:	dc000315 	stw	r16,12(sp)
   504ac:	04000174 	movhi	r16,5
   504b0:	84097104 	addi	r16,r16,9668
   504b4:	80c00017 	ldw	r3,0(r16)
   504b8:	dc400415 	stw	r17,16(sp)
   504bc:	dfc00515 	stw	ra,20(sp)
   504c0:	18805217 	ldw	r2,328(r3)
   504c4:	2023883a 	mov	r17,r4
   504c8:	10003726 	beq	r2,zero,505a8 <__register_exitproc+0x104>
   504cc:	10c00117 	ldw	r3,4(r2)
   504d0:	010007c4 	movi	r4,31
   504d4:	20c00e16 	blt	r4,r3,50510 <__register_exitproc+0x6c>
   504d8:	1a000044 	addi	r8,r3,1
   504dc:	8800221e 	bne	r17,zero,50568 <__register_exitproc+0xc4>
   504e0:	18c00084 	addi	r3,r3,2
   504e4:	18c7883a 	add	r3,r3,r3
   504e8:	18c7883a 	add	r3,r3,r3
   504ec:	12000115 	stw	r8,4(r2)
   504f0:	10c7883a 	add	r3,r2,r3
   504f4:	19400015 	stw	r5,0(r3)
   504f8:	0005883a 	mov	r2,zero
   504fc:	dfc00517 	ldw	ra,20(sp)
   50500:	dc400417 	ldw	r17,16(sp)
   50504:	dc000317 	ldw	r16,12(sp)
   50508:	dec00604 	addi	sp,sp,24
   5050c:	f800283a 	ret
   50510:	00800034 	movhi	r2,0
   50514:	10800004 	addi	r2,r2,0
   50518:	10002626 	beq	r2,zero,505b4 <__register_exitproc+0x110>
   5051c:	01006404 	movi	r4,400
   50520:	d9400015 	stw	r5,0(sp)
   50524:	d9800115 	stw	r6,4(sp)
   50528:	d9c00215 	stw	r7,8(sp)
   5052c:	00000000 	call	0 <__reset-0x40000>
   50530:	d9400017 	ldw	r5,0(sp)
   50534:	d9800117 	ldw	r6,4(sp)
   50538:	d9c00217 	ldw	r7,8(sp)
   5053c:	10001d26 	beq	r2,zero,505b4 <__register_exitproc+0x110>
   50540:	81000017 	ldw	r4,0(r16)
   50544:	10000115 	stw	zero,4(r2)
   50548:	02000044 	movi	r8,1
   5054c:	22405217 	ldw	r9,328(r4)
   50550:	0007883a 	mov	r3,zero
   50554:	12400015 	stw	r9,0(r2)
   50558:	20805215 	stw	r2,328(r4)
   5055c:	10006215 	stw	zero,392(r2)
   50560:	10006315 	stw	zero,396(r2)
   50564:	883fde26 	beq	r17,zero,504e0 <__alt_data_end+0xfffe45c0>
   50568:	18c9883a 	add	r4,r3,r3
   5056c:	2109883a 	add	r4,r4,r4
   50570:	1109883a 	add	r4,r2,r4
   50574:	21802215 	stw	r6,136(r4)
   50578:	01800044 	movi	r6,1
   5057c:	12406217 	ldw	r9,392(r2)
   50580:	30cc983a 	sll	r6,r6,r3
   50584:	4992b03a 	or	r9,r9,r6
   50588:	12406215 	stw	r9,392(r2)
   5058c:	21c04215 	stw	r7,264(r4)
   50590:	01000084 	movi	r4,2
   50594:	893fd21e 	bne	r17,r4,504e0 <__alt_data_end+0xfffe45c0>
   50598:	11006317 	ldw	r4,396(r2)
   5059c:	218cb03a 	or	r6,r4,r6
   505a0:	11806315 	stw	r6,396(r2)
   505a4:	003fce06 	br	504e0 <__alt_data_end+0xfffe45c0>
   505a8:	18805304 	addi	r2,r3,332
   505ac:	18805215 	stw	r2,328(r3)
   505b0:	003fc606 	br	504cc <__alt_data_end+0xfffe45ac>
   505b4:	00bfffc4 	movi	r2,-1
   505b8:	003fd006 	br	504fc <__alt_data_end+0xfffe45dc>

000505bc <__call_exitprocs>:
   505bc:	defff504 	addi	sp,sp,-44
   505c0:	df000915 	stw	fp,36(sp)
   505c4:	dd400615 	stw	r21,24(sp)
   505c8:	dc800315 	stw	r18,12(sp)
   505cc:	dfc00a15 	stw	ra,40(sp)
   505d0:	ddc00815 	stw	r23,32(sp)
   505d4:	dd800715 	stw	r22,28(sp)
   505d8:	dd000515 	stw	r20,20(sp)
   505dc:	dcc00415 	stw	r19,16(sp)
   505e0:	dc400215 	stw	r17,8(sp)
   505e4:	dc000115 	stw	r16,4(sp)
   505e8:	d9000015 	stw	r4,0(sp)
   505ec:	2839883a 	mov	fp,r5
   505f0:	04800044 	movi	r18,1
   505f4:	057fffc4 	movi	r21,-1
   505f8:	00800174 	movhi	r2,5
   505fc:	10897104 	addi	r2,r2,9668
   50600:	12000017 	ldw	r8,0(r2)
   50604:	45005217 	ldw	r20,328(r8)
   50608:	44c05204 	addi	r19,r8,328
   5060c:	a0001c26 	beq	r20,zero,50680 <__call_exitprocs+0xc4>
   50610:	a0800117 	ldw	r2,4(r20)
   50614:	15ffffc4 	addi	r23,r2,-1
   50618:	b8000d16 	blt	r23,zero,50650 <__call_exitprocs+0x94>
   5061c:	14000044 	addi	r16,r2,1
   50620:	8421883a 	add	r16,r16,r16
   50624:	8421883a 	add	r16,r16,r16
   50628:	84402004 	addi	r17,r16,128
   5062c:	a463883a 	add	r17,r20,r17
   50630:	a421883a 	add	r16,r20,r16
   50634:	e0001e26 	beq	fp,zero,506b0 <__call_exitprocs+0xf4>
   50638:	80804017 	ldw	r2,256(r16)
   5063c:	e0801c26 	beq	fp,r2,506b0 <__call_exitprocs+0xf4>
   50640:	bdffffc4 	addi	r23,r23,-1
   50644:	843fff04 	addi	r16,r16,-4
   50648:	8c7fff04 	addi	r17,r17,-4
   5064c:	bd7ff91e 	bne	r23,r21,50634 <__alt_data_end+0xfffe4714>
   50650:	00800034 	movhi	r2,0
   50654:	10800004 	addi	r2,r2,0
   50658:	10000926 	beq	r2,zero,50680 <__call_exitprocs+0xc4>
   5065c:	a0800117 	ldw	r2,4(r20)
   50660:	1000301e 	bne	r2,zero,50724 <__call_exitprocs+0x168>
   50664:	a0800017 	ldw	r2,0(r20)
   50668:	10003226 	beq	r2,zero,50734 <__call_exitprocs+0x178>
   5066c:	a009883a 	mov	r4,r20
   50670:	98800015 	stw	r2,0(r19)
   50674:	00000000 	call	0 <__reset-0x40000>
   50678:	9d000017 	ldw	r20,0(r19)
   5067c:	a03fe41e 	bne	r20,zero,50610 <__alt_data_end+0xfffe46f0>
   50680:	dfc00a17 	ldw	ra,40(sp)
   50684:	df000917 	ldw	fp,36(sp)
   50688:	ddc00817 	ldw	r23,32(sp)
   5068c:	dd800717 	ldw	r22,28(sp)
   50690:	dd400617 	ldw	r21,24(sp)
   50694:	dd000517 	ldw	r20,20(sp)
   50698:	dcc00417 	ldw	r19,16(sp)
   5069c:	dc800317 	ldw	r18,12(sp)
   506a0:	dc400217 	ldw	r17,8(sp)
   506a4:	dc000117 	ldw	r16,4(sp)
   506a8:	dec00b04 	addi	sp,sp,44
   506ac:	f800283a 	ret
   506b0:	a0800117 	ldw	r2,4(r20)
   506b4:	80c00017 	ldw	r3,0(r16)
   506b8:	10bfffc4 	addi	r2,r2,-1
   506bc:	15c01426 	beq	r2,r23,50710 <__call_exitprocs+0x154>
   506c0:	80000015 	stw	zero,0(r16)
   506c4:	183fde26 	beq	r3,zero,50640 <__alt_data_end+0xfffe4720>
   506c8:	95c8983a 	sll	r4,r18,r23
   506cc:	a0806217 	ldw	r2,392(r20)
   506d0:	a5800117 	ldw	r22,4(r20)
   506d4:	2084703a 	and	r2,r4,r2
   506d8:	10000b26 	beq	r2,zero,50708 <__call_exitprocs+0x14c>
   506dc:	a0806317 	ldw	r2,396(r20)
   506e0:	2088703a 	and	r4,r4,r2
   506e4:	20000c1e 	bne	r4,zero,50718 <__call_exitprocs+0x15c>
   506e8:	89400017 	ldw	r5,0(r17)
   506ec:	d9000017 	ldw	r4,0(sp)
   506f0:	183ee83a 	callr	r3
   506f4:	a0800117 	ldw	r2,4(r20)
   506f8:	15bfbf1e 	bne	r2,r22,505f8 <__alt_data_end+0xfffe46d8>
   506fc:	98800017 	ldw	r2,0(r19)
   50700:	153fcf26 	beq	r2,r20,50640 <__alt_data_end+0xfffe4720>
   50704:	003fbc06 	br	505f8 <__alt_data_end+0xfffe46d8>
   50708:	183ee83a 	callr	r3
   5070c:	003ff906 	br	506f4 <__alt_data_end+0xfffe47d4>
   50710:	a5c00115 	stw	r23,4(r20)
   50714:	003feb06 	br	506c4 <__alt_data_end+0xfffe47a4>
   50718:	89000017 	ldw	r4,0(r17)
   5071c:	183ee83a 	callr	r3
   50720:	003ff406 	br	506f4 <__alt_data_end+0xfffe47d4>
   50724:	a0800017 	ldw	r2,0(r20)
   50728:	a027883a 	mov	r19,r20
   5072c:	1029883a 	mov	r20,r2
   50730:	003fb606 	br	5060c <__alt_data_end+0xfffe46ec>
   50734:	0005883a 	mov	r2,zero
   50738:	003ffb06 	br	50728 <__alt_data_end+0xfffe4808>

0005073c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   5073c:	defffd04 	addi	sp,sp,-12
   50740:	df000215 	stw	fp,8(sp)
   50744:	df000204 	addi	fp,sp,8
   50748:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   5074c:	0001883a 	nop
   50750:	e0bfff17 	ldw	r2,-4(fp)
   50754:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   50758:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   5075c:	10000226 	beq	r2,zero,50768 <_exit+0x2c>
    ALT_SIM_FAIL();
   50760:	002af070 	cmpltui	zero,zero,43969
   50764:	00000106 	br	5076c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   50768:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   5076c:	003fff06 	br	5076c <__alt_data_end+0xfffe484c>
